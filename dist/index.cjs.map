{"version":3,"file":"index.cjs","sources":["../src/context/FormBuilderContext.tsx","../src/data/formFields.ts","../src/utils/fieldStyles.ts","../src/components/SignaturePad.tsx","../src/components/FormFieldRenderer.tsx","../src/components/SortableFormField.tsx","../src/utils/layoutUtils.ts","../src/components/FormRowRenderer.tsx","../src/components/FormRenderer.tsx","../src/utils/formExport.ts","../src/components/FormCanvas.tsx","../src/components/FieldSidebar.tsx","../src/components/PropertiesPanel.tsx","../src/components/FormBuilderToolbar.tsx","../src/examples/JsonFormRenderer.tsx","../src/pages/AnnouncementPage.tsx","../src/pages/DocumentationPage.tsx","../src/pages/WhatsNewPage.tsx","../src/App.tsx","../src/components/FormBuilderSuite.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nimport type { ReactNode } from 'react';\nimport type { FormConfig, FormField, FormSettings } from '../types/form';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Helper function to generate unique field names with auto-numbering\nfunction generateUniqueFieldName(field: FormField, existingFields: FormField[]): string {\n  // If field already has a name, use it\n  if (field.name && field.name.trim()) {\n    return field.name;\n  }\n\n  // Generate base name from field type\n  const baseName = field.type.replace(/[-_]/g, '_').toLowerCase();\n  \n  // Check if base name already exists\n  const existingNames = existingFields.map(f => f.name).filter(Boolean);\n  \n  if (!existingNames.includes(baseName)) {\n    return baseName;\n  }\n  \n  // Find the next available number\n  let counter = 2;\n  let uniqueName = `${baseName}${counter}`;\n  \n  while (existingNames.includes(uniqueName)) {\n    counter++;\n    uniqueName = `${baseName}${counter}`;\n  }\n  \n  return uniqueName;\n}\n\ninterface FormBuilderState {\n  currentForm: FormConfig;\n  selectedFieldId: string | null;\n  previewMode: boolean;\n  deviceView: 'desktop' | 'tablet' | 'mobile';\n}\n\ntype FormBuilderAction =\n  | { type: 'SET_FORM'; payload: FormConfig }\n  | { type: 'ADD_FIELD'; payload: FormField }\n  | { type: 'UPDATE_FIELD'; payload: { id: string; updates: Partial<FormField> } }\n  | { type: 'UPDATE_FIELD_PROPERTIES'; payload: { id: string; properties: any } }\n  | { type: 'UPDATE_FIELD_ADVANCED'; payload: { id: string; advanced: any } }\n  | { type: 'UPDATE_FIELD_CUSTOM'; payload: { id: string; custom: any } }\n  | { type: 'UPDATE_FIELD_EVENTS'; payload: { id: string; events: any } }\n  | { type: 'UPDATE_FIELD_SCHEMA'; payload: { id: string; schema: any } }\n  | { type: 'UPDATE_FIELD_LAYOUT'; payload: { id: string; layout: any } }\n  | { type: 'DELETE_FIELD'; payload: string }\n  | { type: 'REORDER_FIELDS'; payload: { oldIndex: number; newIndex: number } }\n  | { type: 'SELECT_FIELD'; payload: string | null }\n  | { type: 'SET_PREVIEW_MODE'; payload: boolean }\n  | { type: 'SET_DEVICE_VIEW'; payload: 'desktop' | 'tablet' | 'mobile' }\n  | { type: 'UPDATE_FORM_SETTINGS'; payload: Partial<FormSettings> }\n  | { type: 'UPDATE_FORM_META'; payload: { title?: string; description?: string } };\n\nconst initialState: FormBuilderState = {\n  currentForm: {\n    id: uuidv4(),\n    title: 'New Form',\n    description: '',\n    fields: [],\n    settings: {\n      submitButtonText: 'Submit',\n      allowMultipleSubmissions: true,\n      requireAuth: false,\n      captchaEnabled: false,\n      theme: 'auto'\n    }\n  },\n  selectedFieldId: null,\n  previewMode: false,\n  deviceView: 'desktop'\n};\n\nfunction formBuilderReducer(state: FormBuilderState, action: FormBuilderAction): FormBuilderState {\n  switch (action.type) {\n    case 'SET_FORM':\n      return {\n        ...state,\n        currentForm: action.payload,\n        selectedFieldId: null\n      };\n\n    case 'ADD_FIELD':\n      const fieldWithUniqueName = {\n        ...action.payload,\n        name: generateUniqueFieldName(action.payload, state.currentForm.fields)\n      };\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields: [...state.currentForm.fields, fieldWithUniqueName]\n        },\n        selectedFieldId: action.payload.id\n      };\n\n    case 'UPDATE_FIELD':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields: state.currentForm.fields.map(field =>\n            field.id === action.payload.id\n              ? {\n                  ...field,\n                  ...action.payload.updates,\n                  // Deep merge nested objects to prevent component remounting\n                  properties: action.payload.updates.properties\n                    ? { ...field.properties, ...action.payload.updates.properties }\n                    : field.properties,\n                  advanced: action.payload.updates.advanced\n                    ? { ...field.advanced, ...action.payload.updates.advanced }\n                    : field.advanced,\n                  custom: action.payload.updates.custom\n                    ? { ...field.custom, ...action.payload.updates.custom }\n                    : field.custom,\n                  events: action.payload.updates.events\n                    ? { ...field.events, ...action.payload.updates.events }\n                    : field.events,\n                  schema: action.payload.updates.schema\n                    ? { ...field.schema, ...action.payload.updates.schema }\n                    : field.schema,\n                  layout: action.payload.updates.layout\n                    ? { ...field.layout, ...action.payload.updates.layout }\n                    : field.layout\n                }\n              : field\n          )\n        }\n      };\n\n    case 'UPDATE_FIELD_PROPERTIES':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields: state.currentForm.fields.map(field =>\n            field.id === action.payload.id\n              ? { ...field, properties: { ...field.properties, ...action.payload.properties } }\n              : field\n          )\n        }\n      };\n\n    case 'UPDATE_FIELD_ADVANCED':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields: state.currentForm.fields.map(field =>\n            field.id === action.payload.id\n              ? { ...field, advanced: { ...field.advanced, ...action.payload.advanced } }\n              : field\n          )\n        }\n      };\n\n    case 'UPDATE_FIELD_CUSTOM':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields: state.currentForm.fields.map(field =>\n            field.id === action.payload.id\n              ? { ...field, custom: { ...field.custom, ...action.payload.custom } }\n              : field\n          )\n        }\n      };\n\n    case 'UPDATE_FIELD_EVENTS':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields: state.currentForm.fields.map(field =>\n            field.id === action.payload.id\n              ? { ...field, events: { ...field.events, ...action.payload.events } }\n              : field\n          )\n        }\n      };\n\n    case 'UPDATE_FIELD_SCHEMA':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields: state.currentForm.fields.map(field =>\n            field.id === action.payload.id\n              ? { ...field, schema: { ...field.schema, ...action.payload.schema } }\n              : field\n          )\n        }\n      };\n\n    case 'UPDATE_FIELD_LAYOUT':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields: state.currentForm.fields.map(field =>\n            field.id === action.payload.id\n              ? { ...field, layout: { ...field.layout, ...action.payload.layout } }\n              : field\n          )\n        }\n      };\n\n    case 'DELETE_FIELD':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields: state.currentForm.fields.filter(field => field.id !== action.payload)\n        },\n        selectedFieldId: state.selectedFieldId === action.payload ? null : state.selectedFieldId\n      };\n\n    case 'REORDER_FIELDS':\n      const fields = [...state.currentForm.fields];\n      const [removed] = fields.splice(action.payload.oldIndex, 1);\n      fields.splice(action.payload.newIndex, 0, removed);\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          fields\n        }\n      };\n\n    case 'SELECT_FIELD':\n      return {\n        ...state,\n        selectedFieldId: action.payload\n      };\n\n    case 'SET_PREVIEW_MODE':\n      return {\n        ...state,\n        previewMode: action.payload,\n        selectedFieldId: action.payload ? null : state.selectedFieldId\n      };\n\n    case 'SET_DEVICE_VIEW':\n      return {\n        ...state,\n        deviceView: action.payload\n      };\n\n    case 'UPDATE_FORM_SETTINGS':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          settings: {\n            ...state.currentForm.settings,\n            ...action.payload\n          }\n        }\n      };\n\n    case 'UPDATE_FORM_META':\n      return {\n        ...state,\n        currentForm: {\n          ...state.currentForm,\n          title: action.payload.title ?? state.currentForm.title,\n          description: action.payload.description ?? state.currentForm.description\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n\ninterface FormBuilderContextType {\n  state: FormBuilderState;\n  dispatch: React.Dispatch<FormBuilderAction>;\n  actions: {\n    setForm: (form: FormConfig) => void;\n    addField: (field: FormField) => void;\n    updateField: (id: string, updates: Partial<FormField>) => void;\n    updateFieldProperties: (id: string, properties: any) => void;\n    updateFieldAdvanced: (id: string, advanced: any) => void;\n    updateFieldCustom: (id: string, custom: any) => void;\n    updateFieldEvents: (id: string, events: any) => void;\n    updateFieldSchema: (id: string, schema: any) => void;\n    updateFieldLayout: (id: string, layout: any) => void;\n    deleteField: (id: string) => void;\n    reorderFields: (oldIndex: number, newIndex: number) => void;\n    selectField: (id: string | null) => void;\n    setPreviewMode: (enabled: boolean) => void;\n    setDeviceView: (view: 'desktop' | 'tablet' | 'mobile') => void;\n    updateFormSettings: (settings: Partial<FormSettings>) => void;\n    updateFormMeta: (meta: { title?: string; description?: string }) => void;\n  };\n}\n\nconst FormBuilderContext = createContext<FormBuilderContextType | undefined>(undefined);\n\nexport function FormBuilderProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(formBuilderReducer, initialState);\n\n  const actions = {\n    setForm: (form: FormConfig) => dispatch({ type: 'SET_FORM', payload: form }),\n    addField: (field: FormField) => dispatch({ type: 'ADD_FIELD', payload: field }),\n    updateField: (id: string, updates: Partial<FormField>) => \n      dispatch({ type: 'UPDATE_FIELD', payload: { id, updates } }),\n    updateFieldProperties: (id: string, properties: any) => \n      dispatch({ type: 'UPDATE_FIELD_PROPERTIES', payload: { id, properties } }),\n    updateFieldAdvanced: (id: string, advanced: any) => \n      dispatch({ type: 'UPDATE_FIELD_ADVANCED', payload: { id, advanced } }),\n    updateFieldCustom: (id: string, custom: any) => \n      dispatch({ type: 'UPDATE_FIELD_CUSTOM', payload: { id, custom } }),\n    updateFieldEvents: (id: string, events: any) => \n      dispatch({ type: 'UPDATE_FIELD_EVENTS', payload: { id, events } }),\n    updateFieldSchema: (id: string, schema: any) => \n      dispatch({ type: 'UPDATE_FIELD_SCHEMA', payload: { id, schema } }),\n    updateFieldLayout: (id: string, layout: any) => \n      dispatch({ type: 'UPDATE_FIELD_LAYOUT', payload: { id, layout } }),\n    deleteField: (id: string) => dispatch({ type: 'DELETE_FIELD', payload: id }),\n    reorderFields: (oldIndex: number, newIndex: number) => \n      dispatch({ type: 'REORDER_FIELDS', payload: { oldIndex, newIndex } }),\n    selectField: (id: string | null) => dispatch({ type: 'SELECT_FIELD', payload: id }),\n    setPreviewMode: (enabled: boolean) => dispatch({ type: 'SET_PREVIEW_MODE', payload: enabled }),\n    setDeviceView: (view: 'desktop' | 'tablet' | 'mobile') => \n      dispatch({ type: 'SET_DEVICE_VIEW', payload: view }),\n    updateFormSettings: (settings: Partial<FormSettings>) => \n      dispatch({ type: 'UPDATE_FORM_SETTINGS', payload: settings }),\n    updateFormMeta: (meta: { title?: string; description?: string }) => \n      dispatch({ type: 'UPDATE_FORM_META', payload: meta })\n  };\n\n  return (\n    <FormBuilderContext.Provider value={{ state, dispatch, actions }}>\n      {children}\n    </FormBuilderContext.Provider>\n  );\n}\n\nexport function useFormBuilder() {\n  const context = useContext(FormBuilderContext);\n  if (context === undefined) {\n    throw new Error('useFormBuilder must be used within a FormBuilderProvider');\n  }\n  return context;\n}\n","import type { FormField, FormFieldType, DragItem } from '../types/form';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Creates a new form field with default properties\n */\nexport function createFormField(type: FormFieldType): FormField {\n  const baseField = {\n    id: uuidv4(),\n    type,\n    label: getDefaultLabel(type),\n    required: false,\n    properties: {},\n    advanced: {\n      valued: true,\n      valueType: 'string' as const,\n      dataBindingType: 'twoWay' as const,\n      calculable: false,\n      localizable: false,\n      readOnly: false,\n      disabled: false,\n      asyncValidation: false,\n      deferFieldCalculation: false\n    },\n    layout: {\n      columnSpan: 12,\n      gridClass: 'col-span-12'\n    },\n    custom: {\n      cssClasses: [],\n      dataAttributes: {}\n    },\n    events: {},\n    schema: {\n      componentKind: 'component' as const,\n      category: getCategoryForType(type),\n      typeName: type,\n      icon: getIconForType(type),\n      nestingLevel: 0,\n      builderOnly: false\n    }\n  };\n\n  // Add type-specific properties\n  switch (type) {\n    case 'text':\n    case 'email':\n    case 'password':\n    case 'phone':\n    case 'url':\n      return {\n        ...baseField,\n        placeholder: `Enter ${baseField.label.toLowerCase()}`,\n        properties: {\n          ...baseField.properties,\n          width: 'full',\n          maxLength: 255,\n          colorVariant: 'default',\n          size: 'md',\n          borderRadius: 'md'\n        }\n      };\n\n    case 'textarea':\n      return {\n        ...baseField,\n        placeholder: `Enter ${baseField.label.toLowerCase()}`,\n        properties: {\n          ...baseField.properties,\n          width: 'full',\n          rows: 4,\n          maxLength: 1000,\n          colorVariant: 'default',\n          size: 'md',\n          borderRadius: 'md'\n        }\n      };\n\n    case 'number':\n    case 'number-format':\n      return {\n        ...baseField,\n        placeholder: 'Enter number',\n        properties: {\n          ...baseField.properties,\n          width: 'full'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valueType: 'number' as const\n        }\n      };\n\n    case 'select':\n    case 'radio':\n    case 'checkbox':\n    case 'multiselect':\n    case 'autocomplete':\n      return {\n        ...baseField,\n        options: [\n          { label: 'Option 1', value: 'option1' },\n          { label: 'Option 2', value: 'option2' }\n        ],\n        properties: {\n          ...baseField.properties,\n          width: 'full',\n          colorVariant: 'default',\n          size: 'md',\n          borderRadius: 'md',\n          orientation: type === 'radio' || type === 'checkbox' ? 'vertical' : undefined,\n          componentAlignment: type === 'radio' || type === 'checkbox' ? 'left' : undefined\n        },\n        advanced: {\n          ...baseField.advanced,\n          valueType: type === 'multiselect' || type === 'checkbox' ? 'array' as const : 'string' as const\n        }\n      };\n\n    case 'date':\n    case 'datetime':\n    case 'time':\n    case 'calendar':\n      return {\n        ...baseField,\n        properties: {\n          ...baseField.properties,\n          width: 'full'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valueType: 'date' as const\n        }\n      };\n\n    case 'file':\n      return {\n        ...baseField,\n        properties: {\n          ...baseField.properties,\n          width: 'full',\n          accept: '',\n          multiple: false\n        },\n        advanced: {\n          ...baseField.advanced,\n          valueType: 'array' as const\n        }\n      };\n\n    case 'rating':\n    case 'range':\n      return {\n        ...baseField,\n        properties: {\n          ...baseField.properties,\n          width: 'full',\n          max: 5,\n          componentAlignment: type === 'rating' ? 'left' : undefined\n        },\n        advanced: {\n          ...baseField.advanced,\n          valueType: 'number' as const\n        }\n      };\n\n    case 'switch':\n      return {\n        ...baseField,\n        properties: {\n          ...baseField.properties,\n          width: 'full',\n          size: 'md',\n          componentAlignment: 'left'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valueType: 'boolean' as const\n        }\n      };\n\n    case 'signature':\n      return {\n        ...baseField,\n        properties: {\n          ...baseField.properties,\n          width: 'full'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valueType: 'string' as const\n        }\n      };\n\n    // Static content fields\n    case 'header':\n      return {\n        ...baseField,\n        label: 'Header',\n        properties: {\n          ...baseField.properties,\n          width: 'full'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valued: false\n        }\n      };\n\n    case 'paragraph':\n    case 'label':\n    case 'message':\n      return {\n        ...baseField,\n        label: 'Paragraph',\n        properties: {\n          ...baseField.properties,\n          width: 'full'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valued: false\n        }\n      };\n\n    case 'image':\n      return {\n        ...baseField,\n        label: 'Image',\n        properties: {\n          ...baseField.properties,\n          width: 'full'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valued: false\n        }\n      };\n\n    case 'button':\n      return {\n        ...baseField,\n        label: 'Button',\n        properties: {\n          ...baseField.properties,\n          width: 'full',\n          colorVariant: 'primary',\n          size: 'md',\n          borderRadius: 'md',\n          variant: 'solid'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valued: false\n        }\n      };\n\n    // Structure fields\n    case 'section':\n    case 'pagebreak':\n      return {\n        ...baseField,\n        label: 'Section',\n        properties: {\n          ...baseField.properties,\n          width: 'full'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valued: false\n        }\n      };\n\n    case 'container':\n    case 'card':\n      return {\n        ...baseField,\n        label: 'Container',\n        properties: {\n          ...baseField.properties,\n          width: 'full'\n        },\n        advanced: {\n          ...baseField.advanced,\n          valued: false\n        }\n      };\n\n    default:\n      return baseField;\n  }\n}\n\nfunction getDefaultLabel(type: FormFieldType): string {\n  const labels: Record<FormFieldType, string> = {\n    // Input fields\n    text: 'Text Input',\n    email: 'Email',\n    password: 'Password',\n    number: 'Number',\n    phone: 'Phone',\n    url: 'URL',\n    textarea: 'Text Area',\n    \n    // Selection fields\n    select: 'Select',\n    multiselect: 'Multi Select',\n    radio: 'Radio Group',\n    checkbox: 'Checkbox Group',\n    switch: 'Switch',\n    autocomplete: 'Auto Complete',\n    search: 'Search',\n    \n    // Date/Time fields\n    date: 'Date',\n    datetime: 'Date Time',\n    time: 'Time',\n    calendar: 'Calendar',\n    \n    // Special fields\n    file: 'File Upload',\n    rating: 'Rating',\n    signature: 'Signature',\n    range: 'Range Slider',\n    'rich-text': 'Rich Text',\n    'number-format': 'Formatted Number',\n    'pattern-format': 'Pattern Format',\n    \n    // Static content\n    button: 'Button',\n    label: 'Label',\n    header: 'Header',\n    paragraph: 'Paragraph',\n    image: 'Image',\n    message: 'Message',\n    'progress-line': 'Progress Line',\n    'progress-circle': 'Progress Circle',\n    tooltip: 'Tooltip',\n    'qr-code': 'QR Code',\n    html: 'HTML',\n    \n    // Structure\n    container: 'Container',\n    card: 'Card',\n    tab: 'Tab',\n    breadcrumb: 'Breadcrumb',\n    section: 'Section',\n    pagebreak: 'Page Break',\n    repeater: 'Repeater',\n    \n    // Template fields\n    slot: 'Slot',\n    template: 'Template',\n    \n    // Error fields\n    'error-message': 'Error Message'\n  };\n  \n  return labels[type] || 'Field';\n}\n\nfunction getCategoryForType(type: FormFieldType): string {\n  const categories: Record<FormFieldType, string> = {\n    // Input fields\n    text: 'fields',\n    email: 'fields',\n    password: 'fields',\n    number: 'fields',\n    phone: 'fields',\n    url: 'fields',\n    textarea: 'fields',\n    \n    // Selection fields\n    select: 'fields',\n    multiselect: 'fields',\n    radio: 'fields',\n    checkbox: 'fields',\n    switch: 'fields',\n    autocomplete: 'fields',\n    search: 'fields',\n    \n    // Date/Time fields\n    date: 'fields',\n    datetime: 'fields',\n    time: 'fields',\n    calendar: 'fields',\n    \n    // Special fields\n    file: 'fields',\n    rating: 'fields',\n    signature: 'fields',\n    range: 'fields',\n    'rich-text': 'fields',\n    'number-format': 'fields',\n    'pattern-format': 'fields',\n    \n    // Static content\n    button: 'static',\n    label: 'static',\n    header: 'static',\n    paragraph: 'static',\n    image: 'static',\n    message: 'static',\n    'progress-line': 'static',\n    'progress-circle': 'static',\n    tooltip: 'static',\n    'qr-code': 'static',\n    html: 'static',\n    \n    // Structure\n    container: 'structure',\n    card: 'structure',\n    tab: 'structure',\n    breadcrumb: 'structure',\n    section: 'structure',\n    pagebreak: 'structure',\n    repeater: 'structure',\n    \n    // Template fields\n    slot: 'templates',\n    template: 'templates',\n    \n    // Error fields\n    'error-message': 'error'\n  };\n  \n  return categories[type] || 'fields';\n}\n\nfunction getIconForType(type: FormFieldType): string {\n  const icons: Record<FormFieldType, string> = {\n    // Input fields\n    text: 'Type',\n    email: 'Mail',\n    password: 'Key',\n    number: 'Hash',\n    phone: 'Phone',\n    url: 'Link',\n    textarea: 'FileText',\n    \n    // Selection fields\n    select: 'ChevronDown',\n    multiselect: 'List',\n    radio: 'Circle',\n    checkbox: 'Square',\n    switch: 'ToggleLeft',\n    autocomplete: 'Search',\n    search: 'Search',\n    \n    // Date/Time fields\n    date: 'Calendar',\n    datetime: 'Clock',\n    time: 'Clock',\n    calendar: 'Calendar',\n    \n    // Special fields\n    file: 'Upload',\n    rating: 'Star',\n    signature: 'PenTool',\n    range: 'Sliders',\n    'rich-text': 'FileText',\n    'number-format': 'Hash',\n    'pattern-format': 'Hash',\n    \n    // Static content\n    button: 'MousePointer',\n    label: 'Tag',\n    header: 'Heading',\n    paragraph: 'Type',\n    image: 'Image',\n    message: 'MessageSquare',\n    'progress-line': 'TrendingUp',\n    'progress-circle': 'Circle',\n    tooltip: 'Info',\n    'qr-code': 'QrCode',\n    html: 'Code',\n    \n    // Structure\n    container: 'Box',\n    card: 'Square',\n    tab: 'Tabs',\n    breadcrumb: 'ChevronRight',\n    section: 'Layout',\n    pagebreak: 'Scissors',\n    repeater: 'Copy',\n    \n    // Template fields\n    slot: 'Grid',\n    template: 'FileTemplate',\n    \n    // Error fields\n    'error-message': 'AlertCircle'\n  };\n  \n  return icons[type] || 'Square';\n}\n\n/**\n * Field templates for the form builder\n */\nexport const FIELD_TEMPLATES: Record<FormFieldType, FormField> = {\n  // Input fields\n  text: createFormField('text'),\n  email: createFormField('email'),\n  password: createFormField('password'),\n  number: createFormField('number'),\n  phone: createFormField('phone'),\n  url: createFormField('url'),\n  textarea: createFormField('textarea'),\n  \n  // Selection fields\n  select: createFormField('select'),\n  multiselect: createFormField('multiselect'),\n  radio: createFormField('radio'),\n  checkbox: createFormField('checkbox'),\n  switch: createFormField('switch'),\n  autocomplete: createFormField('autocomplete'),\n  search: createFormField('search'),\n  \n  // Date/Time fields\n  date: createFormField('date'),\n  datetime: createFormField('datetime'),\n  time: createFormField('time'),\n  calendar: createFormField('calendar'),\n  \n  // Special fields\n  file: createFormField('file'),\n  rating: createFormField('rating'),\n  signature: createFormField('signature'),\n  range: createFormField('range'),\n  'rich-text': createFormField('rich-text'),\n  'number-format': createFormField('number-format'),\n  'pattern-format': createFormField('pattern-format'),\n  \n  // Static content\n  button: createFormField('button'),\n  label: createFormField('label'),\n  header: createFormField('header'),\n  paragraph: createFormField('paragraph'),\n  image: createFormField('image'),\n  message: createFormField('message'),\n  'progress-line': createFormField('progress-line'),\n  'progress-circle': createFormField('progress-circle'),\n  tooltip: createFormField('tooltip'),\n  'qr-code': createFormField('qr-code'),\n  html: createFormField('html'),\n  \n  // Structure\n  container: createFormField('container'),\n  card: createFormField('card'),\n  tab: createFormField('tab'),\n  breadcrumb: createFormField('breadcrumb'),\n  section: createFormField('section'),\n  pagebreak: createFormField('pagebreak'),\n  repeater: createFormField('repeater'),\n  \n  // Template fields\n  slot: createFormField('slot'),\n  template: createFormField('template'),\n  \n  // Error fields\n  'error-message': createFormField('error-message')\n};\n\n/**\n * Drag items for the sidebar (most commonly used components)\n */\nexport const DRAG_ITEMS: DragItem[] = [\n  // Most common input fields\n  { id: 'text', type: 'text', label: 'Text Input', icon: 'Type', category: 'fields' },\n  { id: 'email', type: 'email', label: 'Email', icon: 'Mail', category: 'fields' },\n  { id: 'password', type: 'password', label: 'Password', icon: 'Key', category: 'fields' },\n  { id: 'number', type: 'number', label: 'Number', icon: 'Hash', category: 'fields' },\n  { id: 'phone', type: 'phone', label: 'Phone', icon: 'Phone', category: 'fields' },\n  { id: 'textarea', type: 'textarea', label: 'Text Area', icon: 'FileText', category: 'fields' },\n  \n  // Selection fields\n  { id: 'select', type: 'select', label: 'Select', icon: 'ChevronDown', category: 'fields' },\n  {\n  id: \"multiselect\",\n  type: \"multiselect\",\n  label: \"Multi Select\",\n  icon: \"ListChecks\", // or any icon you want\n  category: \"fields\" // or the correct category id\n},\n  { id: 'autocomplete', type: 'autocomplete', label: 'Auto Complete', icon: 'Search', category: 'fields' },\n  { id: 'radio', type: 'radio', label: 'Radio Group', icon: 'Circle', category: 'fields' },\n  { id: 'checkbox', type: 'checkbox', label: 'Checkbox Group', icon: 'Square', category: 'fields' },\n  { id: 'switch', type: 'switch', label: 'Switch', icon: 'ToggleLeft', category: 'fields' },\n  \n  // Date/Time fields\n  { id: 'date', type: 'date', label: 'Date', icon: 'Calendar', category: 'fields' },\n  { id: 'time', type: 'time', label: 'Time', icon: 'Clock', category: 'fields' },\n  \n  // Special fields\n  { id: 'file', type: 'file', label: 'File Upload', icon: 'Upload', category: 'fields' },\n  { id: 'rating', type: 'rating', label: 'Rating', icon: 'Star', category: 'fields' },\n  \n  // Static content\n  { id: 'header', type: 'header', label: 'Header', icon: 'Heading', category: 'static' },\n  { id: 'paragraph', type: 'paragraph', label: 'Paragraph', icon: 'Type', category: 'static' },\n  { id: 'image', type: 'image', label: 'Image', icon: 'Image', category: 'static' },\n  { id: 'button', type: 'button', label: 'Button', icon: 'MousePointer', category: 'static' },\n  \n  // Structure\n  { id: 'section', type: 'section', label: 'Section', icon: 'Layout', category: 'structure' },\n  { id: 'container', type: 'container', label: 'Container', icon: 'Box', category: 'structure' },\n  { id: 'card', type: 'card', label: 'Card', icon: 'Square', category: 'structure' }\n];\n\n/**\n * Field categories for organizing the sidebar\n */\nexport const FIELD_CATEGORIES = [\n  {\n    id: 'fields',\n    label: 'Form Fields',\n    description: 'Input and selection fields'\n  },\n  {\n    id: 'static',\n    label: 'Static Content',\n    description: 'Text, images, and layout elements'\n  },\n  {\n    id: 'structure',\n    label: 'Structure',\n    description: 'Containers and layout components'\n  },\n  {\n    id: 'templates',\n    label: 'Templates',\n    description: 'Pre-built field combinations'\n  },\n  {\n    id: 'error',\n    label: 'Error Handling',\n    description: 'Error display components'\n  }\n];\n","import type { FormField } from '../types/form';\n\n// Build HeroUI-specific classNames object for components\nexport function buildHeroUIClasses(field: FormField, isEditor: boolean = false) {\n  const borderRadius = getBorderRadiusClass(field.properties?.borderRadius);\n  const spacing = getSpacingClasses(field);\n  const responsive = getResponsiveClasses(field, isEditor);\n  \n  // Get custom CSS classes from both legacy (properties) and new (custom) locations\n  const legacyClasses = field.properties?.customClasses || '';\n  const newClasses = field.custom?.cssClasses?.join(' ') || '';\n  const allCustomClasses = [legacyClasses, newClasses].filter(Boolean).join(' ');\n  \n  // Parse custom classes and categorize them for appropriate HeroUI slots\n  const customClasses = parseCustomClasses(allCustomClasses);\n  \n  // Get user-defined classNames from properties\n  const userClassNames = field.properties?.classNames || {};\n\n  // Helper function to ensure Tailwind classes have proper specificity\n  const ensureTailwindPrecedence = (userClass: string) => {\n    if (!userClass) return '';\n    // For color classes, ensure they override HeroUI defaults\n    if (userClass.includes('text-') || userClass.includes('bg-') || userClass.includes('border-')) {\n      return userClass;\n    }\n    return userClass;\n  };\n\n  const result = {\n    // Base wrapper/container classes - for outer spacing and visibility\n    base: [\n      spacing.margin,\n      spacing.padding,\n      !isEditor ? responsive.visibility : '', // Only apply responsive hiding in preview/renderer\n      customClasses.wrapper,\n      userClassNames.base || ''\n    ].filter(Boolean).join(' '),\n    \n    // Label classes - ensure custom classes take precedence\n    label: [\n      'text-left', // Ensure labels are left-aligned by default\n      customClasses.label,\n      ensureTailwindPrecedence(userClassNames.label || '')\n    ].filter(Boolean).join(' '),\n    \n    // Input wrapper classes - for border, shadow, background, etc.\n    inputWrapper: [\n      borderRadius,\n      customClasses.inputWrapper,\n      ensureTailwindPrecedence(userClassNames.inputWrapper || '')\n    ].filter(Boolean).join(' '),\n    \n    // Inner wrapper classes\n    innerWrapper: [\n      ensureTailwindPrecedence(userClassNames.innerWrapper || '')\n    ].filter(Boolean).join(' '),\n    \n    // Main wrapper classes\n    mainWrapper: [\n      ensureTailwindPrecedence(userClassNames.mainWrapper || '')\n    ].filter(Boolean).join(' '),\n    \n    // Input field classes - ensure custom text styles take precedence\n    input: [\n      field.properties?.alignment || '',\n      customClasses.input,\n      ensureTailwindPrecedence(userClassNames.input || '')\n    ].filter(Boolean).join(' '),\n    \n    // Clear button classes\n    clearButton: [\n      ensureTailwindPrecedence(userClassNames.clearButton || '')\n    ].filter(Boolean).join(' '),\n    \n    // Helper wrapper classes\n    helperWrapper: [\n      ensureTailwindPrecedence(userClassNames.helperWrapper || '')\n    ].filter(Boolean).join(' '),\n    \n    // Description classes\n    description: [\n      'text-left', // Ensure description text is left-aligned\n      customClasses.description,\n      ensureTailwindPrecedence(userClassNames.description || '')\n    ].filter(Boolean).join(' '),\n    \n    // Error message classes\n    errorMessage: [\n      ensureTailwindPrecedence(userClassNames.errorMessage || '')\n    ].filter(Boolean).join(' ')\n  };\n\n  return result;\n}\n\n// Parse custom CSS classes and categorize them for appropriate HeroUI component slots\nfunction parseCustomClasses(customClasses: string) {\n  if (!customClasses.trim()) {\n    return {\n      wrapper: '',\n      inputWrapper: '',\n      input: '',\n      label: '',\n      description: ''\n    };\n  }\n\n  const classes = customClasses.trim().split(/\\s+/);\n  const result = {\n    wrapper: [] as string[],\n    inputWrapper: [] as string[],\n    input: [] as string[],\n    label: [] as string[],\n    description: [] as string[]\n  };\n\n  classes.forEach(className => {\n    // Input wrapper styles (border, shadow, background, rounded, etc.)\n    if (className.match(/^(border|shadow|bg-|rounded|ring)/)) {\n      result.inputWrapper.push(className);\n    }\n    // Text and font styling for input content\n    else if (className.match(/^(text-|font-|placeholder|italic|underline)/)) {\n      result.input.push(className);\n    }\n    // Layout and spacing classes go to wrapper\n    else if (className.match(/^(m[tlrb]?-|p[tlrb]?-|w-|h-|max-|min-|flex|grid|col-|row-|gap-|space-|justify-|items-|self-)/)) {\n      result.wrapper.push(className);\n    }\n    // Everything else goes to input wrapper by default\n    else {\n      result.inputWrapper.push(className);\n    }\n  });\n\n  return {\n    wrapper: result.wrapper.join(' '),\n    inputWrapper: result.inputWrapper.join(' '),\n    input: result.input.join(' '),\n    label: result.label.join(' '),\n    description: result.description.join(' ')\n  };\n}\n\nfunction getBorderRadiusClass(borderRadius?: string): string {\n  switch (borderRadius) {\n    case 'none':\n      return 'rounded-none';\n    case 'small':\n      return 'rounded-sm';\n    case 'default':\n      return 'rounded-md';\n    case 'large':\n      return 'rounded-lg';\n    case 'full':\n      return 'rounded-full';\n    default:\n      return '';\n  }\n}\n\nfunction getSpacingClasses(field: FormField) {\n  const marginTop = field.properties?.marginTop;\n  const marginBottom = field.properties?.marginBottom;\n  const padding = field.properties?.padding;\n\n  return {\n    margin: [\n      marginTop || '',\n      marginBottom || ''\n    ].filter(Boolean).join(' '),\n    \n    padding: padding || ''\n  };\n}\n\nfunction getResponsiveClasses(field: FormField, isEditor: boolean = false) {\n  const classes: string[] = [];\n  \n  // Only apply responsive hiding classes in preview/renderer, not in editor\n  if (!isEditor) {\n    if (field.properties?.hideOnMobile) {\n      classes.push('hidden sm:block');\n    }\n    if (field.properties?.hideOnTablet) {\n      classes.push('sm:hidden lg:block');\n    }\n    if (field.properties?.hideOnDesktop) {\n      classes.push('lg:hidden');\n    }\n  }\n\n  return {\n    visibility: classes.join(' ')\n  };\n}\n\n// Legacy function for backward compatibility\nexport function buildFieldClasses(field: FormField): string {\n  const heroUIClasses = buildHeroUIClasses(field);\n  return heroUIClasses.base;\n}\n\nexport function buildFieldWrapperClasses(field: FormField, isEditor: boolean = false): string {\n  const classes: string[] = [];\n\n  // Grid span classes\n  if (field.layout?.gridClass) {\n    classes.push(field.layout.gridClass);\n  }\n\n  // Add responsive visibility only for preview/renderer, not editor\n  const responsive = getResponsiveClasses(field, isEditor);\n  if (responsive.visibility) {\n    classes.push(responsive.visibility);\n  }\n\n  return classes.join(' ');\n}\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Button } from '@heroui/react';\nimport { RotateCcw, Check } from 'lucide-react';\n\ninterface SignaturePadProps {\n  value?: string;\n  onChange?: (signature: string) => void;\n  width?: number;\n  height?: number;\n  disabled?: boolean;\n  className?: string;\n}\n\nexport function SignaturePad({ \n  value, \n  onChange, \n  width = 400, \n  height = 200, \n  disabled = false,\n  className = '' \n}: SignaturePadProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(true);\n  const [lastPos, setLastPos] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    canvas.width = width;\n    canvas.height = height;\n\n    // Set drawing style\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.strokeStyle = '#000000';\n    ctx.lineWidth = 2;\n\n    // Clear canvas with white background\n    ctx.fillStyle = '#ffffff';\n    ctx.fillRect(0, 0, width, height);\n\n    // Load existing signature if provided\n    if (value && value.startsWith('data:image')) {\n      const img = new Image();\n      img.onload = () => {\n        ctx.clearRect(0, 0, width, height);\n        ctx.fillStyle = '#ffffff';\n        ctx.fillRect(0, 0, width, height);\n        ctx.drawImage(img, 0, 0, width, height);\n        setIsEmpty(false);\n      };\n      img.src = value;\n    }\n  }, [width, height, value]);\n\n  const getEventPos = (event: React.MouseEvent | React.TouchEvent): { x: number; y: number } => {\n    const canvas = canvasRef.current;\n    if (!canvas) return { x: 0, y: 0 };\n\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    if ('touches' in event) {\n      const touch = event.touches[0];\n      return {\n        x: (touch.clientX - rect.left) * scaleX,\n        y: (touch.clientY - rect.top) * scaleY\n      };\n    } else {\n      return {\n        x: (event.clientX - rect.left) * scaleX,\n        y: (event.clientY - rect.top) * scaleY\n      };\n    }\n  };\n\n  const startDrawing = (event: React.MouseEvent | React.TouchEvent) => {\n    if (disabled) return;\n    \n    event.preventDefault();\n    const pos = getEventPos(event);\n    setIsDrawing(true);\n    setLastPos(pos);\n    setIsEmpty(false);\n  };\n\n  const draw = (event: React.MouseEvent | React.TouchEvent) => {\n    if (!isDrawing || disabled) return;\n    \n    event.preventDefault();\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext('2d');\n    if (!canvas || !ctx) return;\n\n    const currentPos = getEventPos(event);\n\n    ctx.beginPath();\n    ctx.moveTo(lastPos.x, lastPos.y);\n    ctx.lineTo(currentPos.x, currentPos.y);\n    ctx.stroke();\n\n    setLastPos(currentPos);\n  };\n\n  const stopDrawing = () => {\n    if (!isDrawing) return;\n    setIsDrawing(false);\n    saveSignature();\n  };\n\n  const saveSignature = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const dataURL = canvas.toDataURL('image/png');\n    onChange?.(dataURL);\n  };\n\n  const clearSignature = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext('2d');\n    if (!canvas || !ctx) return;\n\n    ctx.fillStyle = '#ffffff';\n    ctx.fillRect(0, 0, width, height);\n    setIsEmpty(true);\n    onChange?.('');\n  };\n\n  return (\n    <div className={`signature-pad ${className}`}>\n      <div className=\"border-2 border-default-300 rounded-lg overflow-hidden bg-white\">\n        <canvas\n          ref={canvasRef}\n          className=\"block cursor-crosshair touch-none\"\n          style={{ width: '100%', height: 'auto', maxWidth: `${width}px` }}\n          onMouseDown={startDrawing}\n          onMouseMove={draw}\n          onMouseUp={stopDrawing}\n          onMouseLeave={stopDrawing}\n          onTouchStart={startDrawing}\n          onTouchMove={draw}\n          onTouchEnd={stopDrawing}\n        />\n      </div>\n      \n      <div className=\"flex justify-between items-center mt-3\">\n        <div className=\"text-xs text-default-500\">\n          {isEmpty ? 'Sign above' : 'Signature captured'}\n        </div>\n        <div className=\"flex gap-2\">\n          <Button\n            size=\"sm\"\n            variant=\"flat\"\n            color=\"warning\"\n            startContent={<RotateCcw size={16} />}\n            onPress={clearSignature}\n            isDisabled={disabled || isEmpty}\n          >\n            Clear\n          </Button>\n          {!isEmpty && (\n            <Button\n              size=\"sm\"\n              color=\"success\"\n              variant=\"flat\"\n              startContent={<Check size={16} />}\n              onPress={saveSignature}\n              isDisabled={disabled}\n            >\n              Save\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import {\n  Input,\n  Textarea,\n  Select,\n  SelectItem,\n  Autocomplete,\n  AutocompleteItem,\n  Checkbox,\n  RadioGroup,\n  Radio,\n  Switch,\n  Card,\n  CardBody,\n  Divider,\n  DateInput,\n  TimeInput,\n  Button,\n} from \"@heroui/react\";\nimport React from \"react\";\nimport type { FormField } from \"../types/form\";\nimport { Star, Upload, Smartphone, Tablet, Monitor } from \"lucide-react\";\nimport { buildHeroUIClasses } from \"../utils/fieldStyles\";\nimport { SignaturePad } from \"./SignaturePad\";\n\ninterface FormFieldRendererProps {\n  field: FormField;\n  value?: any;\n  onChange?: (value: any) => void;\n  isPreview?: boolean;\n}\n\nexport function FormFieldRenderer({\n  field,\n  value,\n  onChange,\n}: FormFieldRendererProps) {\n  const handleChange = (newValue: any) => {\n    if (onChange) {\n      onChange(newValue);\n    }\n  };\n\n  // Hide field if conditional logic applies (simplified)\n  if (field.advanced?.hidden || field.properties?.hidden) {\n    return null;\n  }\n\n  // Build HeroUI-specific classes (pass isEditor: true to prevent responsive hiding in editor)\n  const heroUIClasses = buildHeroUIClasses(field, true);\n\n  // For complex components that need wrapper divs\n  const wrapperClasses = heroUIClasses.base;\n\n  // Generate responsive hide indicators for editor\n  const getResponsiveIndicators = () => {\n    const indicators = [];\n    if (field.properties?.hideOnMobile) {\n      indicators.push('Hidden on Mobile');\n    }\n    if (field.properties?.hideOnTablet) {\n      indicators.push('Hidden on Tablet');\n    }\n    if (field.properties?.hideOnDesktop) {\n      indicators.push('Hidden on Desktop');\n    }\n    return indicators;\n  };\n\n  const responsiveIndicators = getResponsiveIndicators();\n\n  // Wrapper component that shows responsive indicators in editor\n  const FieldWithIndicators = ({ children }: { children: React.ReactNode }) => {\n    if (responsiveIndicators.length === 0) {\n      return <>{children}</>;\n    }\n\n    return (\n      <div className=\"relative\">\n        {children}\n        <div className=\"absolute top-0 right-0 flex items-center gap-1 -mt-2 -mr-2 z-10\">\n          {responsiveIndicators.map((indicator) => (\n            <span\n              key={indicator}\n              className=\"text-danger-700 text-xs px-1.5 py-0.5 rounded-full \"\n              title={indicator}\n            >\n              {indicator.includes('Mobile') ? <Smartphone size={15} /> : indicator.includes('Tablet') ? <Tablet size={15} /> : <Monitor size={15} />}\n            </span>\n          ))}\n        </div>\n      </div>\n    );\n  };\n\n  // Helper function to wrap any field component with indicators\n  const wrapWithIndicators = (component: React.ReactNode) => (\n    <FieldWithIndicators>{component}</FieldWithIndicators>\n  );\n\n  // Common props for the form components\n  const commonProps = {\n    label: field.label,\n    placeholder: field.placeholder,\n    isRequired: field.required,\n    description: field.properties?.description,\n    isDisabled: field.advanced?.disabled || field.properties?.disabled,\n    isReadOnly: field.advanced?.readOnly || field.properties?.readonly,\n    size: field.properties?.size as any,\n    color: field.properties?.colorVariant as any,\n    variant: field.properties?.variant as any,\n    radius: field.properties?.borderRadius as any,\n    classNames: {\n      base: heroUIClasses.base,\n      label: heroUIClasses.label,\n      inputWrapper: heroUIClasses.inputWrapper,\n      innerWrapper: heroUIClasses.innerWrapper,\n      mainWrapper: heroUIClasses.mainWrapper,\n      input: heroUIClasses.input,\n      clearButton: heroUIClasses.clearButton,\n      helperWrapper: heroUIClasses.helperWrapper,\n      description: heroUIClasses.description,\n      errorMessage: heroUIClasses.errorMessage,\n    },\n  };\n\n  // Build HTML attributes for data attributes and accessibility\n  const buildHtmlAttributes = () => {\n    const attrs: Record<string, any> = {};\n    \n    // Add data attributes from custom properties\n    const dataAttributes = field.custom?.dataAttributes || {};\n    Object.entries(dataAttributes).forEach(([key, value]) => {\n      attrs[`data-${key}`] = value;\n    });\n    \n    // Add accessibility attributes\n    if (field.custom?.role) {\n      attrs['role'] = field.custom.role;\n    }\n    \n    if (field.custom?.tabIndex !== undefined) {\n      attrs['tabIndex'] = field.custom.tabIndex;\n    }\n    \n    if (field.properties?.ariaLabel) {\n      attrs['aria-label'] = field.properties.ariaLabel;\n    }\n    \n    // Add number input specific attributes\n    if (field.type === 'number') {\n      if (field.properties?.min !== undefined) {\n        attrs['min'] = field.properties.min;\n      }\n      if (field.properties?.max !== undefined) {\n        attrs['max'] = field.properties.max;\n      }\n      if (field.properties?.step !== undefined) {\n        attrs['step'] = field.properties.step;\n      }\n    }\n    \n    return attrs;\n  };\n\n  const htmlAttributes = buildHtmlAttributes();\n\n  // Add character count for text fields\n  const getCharacterCount = () => {\n    if (\n      field.properties?.showCharacterCount &&\n      (field.type === \"text\" || field.type === \"textarea\")\n    ) {\n      const currentLength = value ? value.length : 0;\n      const maxLength = field.properties?.maxLength;\n      return maxLength ? `${currentLength}/${maxLength}` : `${currentLength}`;\n    }\n    return null;\n  };\n\n  const characterCount = getCharacterCount();\n\n  switch (field.type) {\n    case \"text\":\n      return (\n        <FieldWithIndicators>\n          <Input\n            key={`text-${field.id}`}\n            {...commonProps}\n            {...htmlAttributes}\n            type=\"text\"\n            value={value || \"\"}\n            onValueChange={(val) => handleChange(val)}\n            maxLength={field.properties?.maxLength}\n          />\n          {characterCount && (\n            <div className=\"text-xs text-default-500 mt-1 text-right\">\n              {characterCount}\n            </div>\n          )}\n        </FieldWithIndicators>\n      );\n\n    case \"email\":\n      return (\n        <FieldWithIndicators>\n          <Input\n            key={`email-${field.id}`}\n            {...commonProps}\n            {...htmlAttributes}\n            type=\"email\"\n            value={value || \"\"}\n            onValueChange={(val) => handleChange(val)}\n          />\n        </FieldWithIndicators>\n      );\n\n    case \"password\":\n      return (\n        <FieldWithIndicators>\n          <Input\n            key={`password-${field.id}`}\n            {...commonProps}\n            {...htmlAttributes}\n            type=\"password\"\n            value={value || \"\"}\n            onValueChange={(val) => handleChange(val)}\n          />\n        </FieldWithIndicators>\n      );\n\n    case \"number\":\n      return wrapWithIndicators(\n        <Input\n          key={`number-${field.id}`}\n          {...commonProps}\n          {...htmlAttributes}\n          type=\"number\"\n          value={value || \"\"}\n          onValueChange={(val) => {\n            // Add client-side min/max validation\n            const numVal = parseFloat(val);\n            if (!isNaN(numVal)) {\n              if (field.properties?.min !== undefined && numVal < field.properties.min) {\n                return; // Don't update if below minimum\n              }\n              if (field.properties?.max !== undefined && numVal > field.properties.max) {\n                return; // Don't update if above maximum\n              }\n            }\n            handleChange(val);\n          }}\n        />\n      );\n\n    case \"date\":\n      return wrapWithIndicators(\n        <DateInput\n          key={`date-${field.id}`}\n          {...commonProps}\n          value={value || null}\n          onChange={(date) => {\n            if (date) {\n              // Convert to string format for form submission\n              handleChange(date.toString());\n            } else {\n              handleChange('');\n            }\n          }}\n        />\n      );\n\n    case \"datetime\":\n      return (\n        <DateInput\n          key={`datetime-${field.id}`}\n          {...commonProps}\n          granularity=\"second\"\n          value={value || null}\n          onChange={(date) => {\n            if (date) {\n              // Convert to string format for form submission\n              handleChange(date.toString());\n            } else {\n              handleChange('');\n            }\n          }}\n        />\n      );\n\n    case \"time\":\n      return (\n        <TimeInput\n          key={`time-${field.id}`}\n          {...commonProps}\n          value={value || null}\n          onChange={(time) => {\n            if (time) {\n              // Convert to string format for form submission\n              handleChange(time.toString());\n            } else {\n              handleChange('');\n            }\n          }}\n        />\n      );\n\n    case \"textarea\":\n      return wrapWithIndicators(\n        <>\n          <Textarea\n            key={`textarea-${field.id}`}\n            {...commonProps}\n            {...htmlAttributes}\n            value={value || \"\"}\n            onValueChange={(val) => handleChange(val)}\n            rows={field.properties?.rows || 4}\n            maxLength={field.properties?.maxLength}\n          />\n          {characterCount && (\n            <div className=\"text-xs text-default-500 mt-1 text-right\">\n              {characterCount}\n            </div>\n          )}\n        </>\n      );\n\n    case \"select\":\n      return wrapWithIndicators(\n        <Select\n          {...commonProps}\n          {...htmlAttributes}\n          selectedKeys={value ? [value] : []}\n          onSelectionChange={(keys) => {\n            const selectedValue = Array.from(keys)[0];\n            handleChange(selectedValue);\n          }}\n        >\n          {field.options?.map((option) => (\n            <SelectItem key={option.value}>{option.label}</SelectItem>\n          )) || []}\n        </Select>\n      );\n\n    case \"autocomplete\":\n      return wrapWithIndicators(\n        <Autocomplete\n          {...commonProps}\n          {...htmlAttributes}\n          selectedKey={value || \"\"}\n          onSelectionChange={(key) => {\n            handleChange(key);\n          }}\n          allowsCustomValue\n        >\n          {field.options?.map((option) => (\n            <AutocompleteItem key={option.value}>{option.label}</AutocompleteItem>\n          )) || []}\n        </Autocomplete>\n      );\n\n    case \"multiselect\":\n      return (\n        <Select\n          {...commonProps}\n          selectionMode=\"multiple\"\n          selectedKeys={value || []}\n          onSelectionChange={(keys) => {\n            handleChange(Array.from(keys));\n          }}\n        >\n          {field.options?.map((option) => (\n            <SelectItem key={option.value}>{option.label}</SelectItem>\n          )) || []}\n        </Select>\n      );\n\n    case \"radio\":\n      const radioOrientation = field.properties?.orientation || 'vertical';\n      const radioComponentAlignment = field.properties?.componentAlignment || 'left';\n      \n      // Alignment classes based on orientation and alignment preference\n      const radioAlignmentClass = radioOrientation === 'horizontal'\n        ? (radioComponentAlignment === 'center' ? 'justify-center' : \n           radioComponentAlignment === 'right' ? 'justify-end' : 'justify-start')\n        : (radioComponentAlignment === 'center' ? 'items-center' : \n           radioComponentAlignment === 'right' ? 'items-end' : 'items-start');\n      \n      const radioLabelAlignmentClass = radioComponentAlignment === 'center' ? 'text-center' : \n                                       radioComponentAlignment === 'right' ? 'text-right' : 'text-left';\n      \n      // Wrapper alignment for the entire component\n      const radioWrapperAlignmentClass = radioComponentAlignment === 'center' ? 'flex flex-col items-center' :\n                                        radioComponentAlignment === 'right' ? 'flex flex-col items-end' : \n                                        'flex flex-col items-start';\n      \n      return (\n        <div className={radioWrapperAlignmentClass}>\n          <RadioGroup\n            label={field.label}\n            description={field.properties?.description}\n            isRequired={field.required}\n            value={value || \"\"}\n            onValueChange={handleChange}\n            size={field.properties?.size as any}\n            color={field.properties?.colorVariant as any}\n            isDisabled={field.advanced?.disabled || field.properties?.disabled}\n            isReadOnly={field.advanced?.readOnly || field.properties?.readonly}\n            orientation={radioOrientation as any}\n            classNames={{\n              base: heroUIClasses.base,\n              label: `${heroUIClasses.label} ${radioLabelAlignmentClass}`,\n              wrapper: `${heroUIClasses.inputWrapper} ${radioAlignmentClass}`,\n            description: `${heroUIClasses.description} ${radioLabelAlignmentClass}`,\n          }}\n        >\n          {field.options?.map((option) => (\n            <Radio key={option.value} value={option.value}>\n              {option.label}\n            </Radio>\n          )) || []}\n        </RadioGroup>\n        </div>\n      );\n\n    case \"checkbox\":\n      if (field.options && field.options.length > 1) {\n        // Multiple checkboxes\n        const orientation = field.properties?.orientation || 'vertical';\n        const componentAlignment = field.properties?.componentAlignment || 'left';\n        \n        // Container classes based on orientation\n        const containerClass = orientation === 'horizontal' \n          ? 'flex flex-wrap gap-4' \n          : 'flex flex-col space-y-2';\n          \n        // Alignment classes based on orientation and alignment preference\n        const alignmentClass = orientation === 'horizontal'\n          ? (componentAlignment === 'center' ? 'justify-center' : \n             componentAlignment === 'right' ? 'justify-end' : 'justify-start')\n          : (componentAlignment === 'center' ? 'items-center' : \n             componentAlignment === 'right' ? 'items-end' : 'items-start');\n        \n        const labelAlignmentClass = componentAlignment === 'center' ? 'text-center' : \n                                   componentAlignment === 'right' ? 'text-right' : 'text-left';\n        \n        // Wrapper alignment for the entire component\n        const wrapperAlignmentClass = componentAlignment === 'center' ? 'flex flex-col items-center' :\n                                     componentAlignment === 'right' ? 'flex flex-col items-end' : \n                                     'flex flex-col items-start';\n        \n        return (\n          <div className={`space-y-2 ${wrapperClasses} ${wrapperAlignmentClass}`}>\n            <label className={`text-sm font-medium ${labelAlignmentClass}`}>\n              {field.label}\n              {field.required && <span className=\"text-danger\">*</span>}\n            </label>\n            {field.properties?.description && (\n              <p className={`text-xs text-default-500 ${labelAlignmentClass}`}>\n                {field.properties?.description}\n              </p>\n            )}\n            <div className={`${containerClass} ${alignmentClass}`}>\n              {field.options.map((option) => (\n                <Checkbox\n                  key={option.value}\n                  value={option.value}\n                  isSelected={value?.includes?.(option.value) || false}\n                  onValueChange={(checked) => {\n                    const currentValues = value || [];\n                    if (checked) {\n                      handleChange([...currentValues, option.value]);\n                    } else {\n                      handleChange(\n                        currentValues.filter((v: any) => v !== option.value)\n                      );\n                    }\n                  }}\n                  size={field.properties?.size as any}\n                  color={field.properties?.colorVariant as any}\n                  radius={field.properties?.borderRadius as any}\n                  isDisabled={field.advanced?.disabled || field.properties?.disabled}\n                  isReadOnly={field.advanced?.readOnly || field.properties?.readonly}\n                >\n                  {option.label}\n                </Checkbox>\n              ))}\n            </div>\n          </div>\n        );\n      } else {\n        // Single checkbox\n        const checkboxComponentAlignment = field.properties?.componentAlignment || 'left';\n        const checkboxAlignmentClass = checkboxComponentAlignment === 'center' ? 'flex justify-center' : \n                                       checkboxComponentAlignment === 'right' ? 'flex justify-end' : 'flex justify-start';\n        const checkboxLabelAlignmentClass = checkboxComponentAlignment === 'center' ? 'text-center' : \n                                           checkboxComponentAlignment === 'right' ? 'text-right' : 'text-left';\n        \n        return (\n          <div className={`${wrapperClasses} ${checkboxAlignmentClass} flex-col items-start`}>\n            <label className={`text-sm font-medium ${checkboxLabelAlignmentClass} block mb-2`}>\n              {field.label}\n              {field.required && <span className=\"text-danger\">*</span>}\n            </label>\n            {field.properties?.description && (\n              <p className={`text-xs text-default-500 mb-2 ${checkboxLabelAlignmentClass}`}>\n                {field.properties?.description}\n              </p>\n            )}\n            <Checkbox\n              isSelected={value || false}\n              onValueChange={handleChange}              size={field.properties?.size as any}\n              color={field.properties?.colorVariant as any}\n              radius={field.properties?.borderRadius as any}\n              isDisabled={field.advanced?.disabled || field.properties?.disabled}\n              isReadOnly={field.advanced?.readOnly || field.properties?.readonly}\n            >\n              Check to confirm\n            </Checkbox>\n          </div>\n        );\n      }\n\n    case \"switch\":\n      const switchComponentAlignment = field.properties?.componentAlignment || 'left';\n      const switchAlignmentClass = switchComponentAlignment === 'center' ? 'flex justify-center' : \n                                   switchComponentAlignment === 'right' ? 'flex justify-end' : 'flex justify-start';\n      \n      return (\n        <div className={`space-y-2 ${wrapperClasses}`}>\n          <div className={switchAlignmentClass}>\n            <Switch\n              isSelected={value || false}\n              onValueChange={handleChange}\n              size={field.properties?.size as any}\n              color={field.properties?.colorVariant as any}\n              isDisabled={field.advanced?.disabled || field.properties?.disabled}\n              isReadOnly={field.advanced?.readOnly || field.properties?.readonly}\n            >\n              {field.label}\n              {field.required && <span className=\"text-danger ml-1\">*</span>}\n            </Switch>\n          </div>\n          {field.properties?.description && (\n            <div className={switchAlignmentClass}>\n              <p className=\"text-xs text-default-500\">\n                {field.properties?.description}\n              </p>\n            </div>\n          )}\n        </div>\n      );\n\n    case \"file\":\n      return (\n        <div className={`space-y-2 ${wrapperClasses}`}>\n          <label className=\"text-sm font-medium\">\n            {field.label}\n            {field.required && <span className=\"text-danger\">*</span>}\n          </label>\n          {field.properties?.description && (\n            <p className=\"text-xs text-default-500\">\n              {field.properties?.description}\n            </p>\n          )}\n          <div className=\"border-2 border-dashed border-default-300 rounded-lg p-6 text-center hover:border-default-400 transition-colors relative\">\n            <Upload className=\"mx-auto text-default-400 mb-2\" size={32} />\n            <p className=\"text-sm text-default-600 mb-2\">\n              Click to upload or drag and drop\n            </p>\n            <p className=\"text-xs text-default-500\">\n              {field.properties?.accept || \"All file types\"}\n            </p>\n            <input\n              type=\"file\"\n              accept={field.properties?.accept}\n              multiple={field.properties?.multiple}\n              className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n              onChange={(e) => {\n                const files = Array.from(e.target.files || []);\n                handleChange(field.properties?.multiple ? files : files[0]);\n              }}\n            />\n          </div>\n        </div>\n      );\n\n    case \"rating\":\n      const maxRating = field.properties?.max || 5;\n      const ratingComponentAlignment = field.properties?.componentAlignment || 'left';\n      const ratingAlignmentClass = ratingComponentAlignment === 'center' ? 'flex justify-center' : \n                                   ratingComponentAlignment === 'right' ? 'flex justify-end' : 'flex justify-start';\n      \n      return (\n        <div className={`space-y-2 ${wrapperClasses}`}>\n          <div className={ratingAlignmentClass}>\n            <label className=\"text-sm font-medium\">\n              {field.label}\n              {field.required && <span className=\"text-danger\">*</span>}\n            </label>\n          </div>\n          {field.properties?.description && (\n            <div className={ratingAlignmentClass}>\n              <p className=\"text-xs text-default-500\">\n                {field.properties?.description}\n              </p>\n            </div>\n          )}\n          <div className={ratingAlignmentClass}>\n            <div className=\"flex gap-1\">\n              {Array.from({ length: maxRating }, (_, i) => i + 1).map(\n                (rating) => (\n                <button\n                  key={rating}\n                  type=\"button\"\n                  onClick={() => handleChange(rating)}\n                  className=\"focus:outline-none\"\n                >\n                  <Star\n                    className={`w-6 h-6 ${\n                      rating <= (value || 0)\n                        ? \"text-warning fill-current\"\n                        : \"text-default-300\"\n                    }`}\n                  />\n                </button>\n              )\n            )}\n            </div>\n          </div>\n        </div>\n      );\n\n    case \"signature\":\n      return (\n        <div className={`space-y-2 ${wrapperClasses}`}>\n          <label className=\"text-sm font-medium\">\n            {field.label}\n            {field.required && <span className=\"text-danger\">*</span>}\n          </label>\n          {field.properties?.description && (\n            <p className=\"text-xs text-default-500\">\n              {field.properties?.description}\n            </p>\n          )}\n          <SignaturePad\n            value={value}\n            onChange={handleChange}\n            width={380}\n            height={150}\n            className=\"w-full\"\n          />\n        </div>\n      );\n\n    case \"section\":\n      return (\n        <div className={wrapperClasses}>\n          <Card>\n            <CardBody className=\"py-4\">\n              <h3 className=\"text-lg font-semibold mb-2\">{field.label}</h3>\n              {field.properties?.description && (\n                <p className=\"text-default-600\">{field.properties?.description}</p>\n              )}\n            </CardBody>\n          </Card>\n        </div>\n      );\n\n    case \"paragraph\":\n      return (\n        <div className={`py-2 ${wrapperClasses}`}>\n          <h4 className=\"text-md font-medium mb-1\">{field.label}</h4>\n          {field.properties?.description && (\n            <p className=\"text-default-600\">{field.properties?.description}</p>\n          )}\n        </div>\n      );\n\n    case \"pagebreak\":\n      return (\n        <div className={`my-8 ${wrapperClasses}`}>\n          <Divider className=\"my-4\" />\n          <div className=\"text-center text-sm text-default-500\">Page Break</div>\n          <Divider className=\"my-4\" />\n        </div>\n      );\n\n    case \"html\":\n      return (\n        <div\n          className={`prose prose-sm max-w-none ${wrapperClasses}`}\n          dangerouslySetInnerHTML={{\n            __html: field.properties?.description || field.label,\n          }}\n        />\n      );\n\n    case \"range\":\n      return (\n        <div className={`space-y-2 ${wrapperClasses}`}>\n          <label className=\"text-sm font-medium\">\n            {field.label}\n            {field.required && <span className=\"text-danger\">*</span>}\n          </label>\n          {field.properties?.description && (\n            <p className=\"text-xs text-default-500\">\n              {field.properties?.description}\n            </p>\n          )}\n          <div className=\"flex items-center gap-4\">\n            <input\n              type=\"range\"\n              min={field.properties?.min || 0}\n              max={field.properties?.max || 100}\n              step={field.properties?.step || 1}\n              value={value || field.properties?.min || 0}\n              onChange={(e) => handleChange(Number(e.target.value))}\n              className=\"flex-1 h-2 bg-default-200 rounded-lg appearance-none cursor-pointer\"\n            />\n            <span className=\"text-sm text-default-600 min-w-[3rem] text-right\">\n              {value || field.properties?.min || 0}\n            </span>\n          </div>\n        </div>\n      );\n\n    case \"phone\":\n      return (\n        <Input\n          {...commonProps}\n          type=\"tel\"\n          value={value || \"\"}\n          onValueChange={(val) => handleChange(val)}\n        />\n      );\n\n    case \"url\":\n      return (\n        <Input\n          {...commonProps}\n          type=\"url\"\n          value={value || \"\"}\n          onValueChange={(val) => handleChange(val)}\n        />\n      );\n\n    case \"button\":\n      return wrapWithIndicators(\n        <Button\n          key={`button-${field.id}`}\n          color={field.properties?.colorVariant as any}\n          size={field.properties?.size as any}\n          variant={field.properties?.variant as any}\n          radius={field.properties?.borderRadius as any}\n          isDisabled={field.advanced?.disabled || field.properties?.disabled}\n          className={heroUIClasses.base}\n          onPress={() => {\n            handleChange('clicked');\n          }}\n          {...htmlAttributes}\n        >\n          {field.label}\n        </Button>\n      );\n\n    default:\n      return (\n        <div\n          className={`p-4 border border-dashed border-default-300 rounded-lg text-center ${wrapperClasses}`}\n        >\n          <p className=\"text-default-500\">\n            Unsupported field type: {field.type}\n          </p>\n        </div>\n      );\n  }\n}\n\n// Export both named and default for compatibility\nexport const MemoizedFormFieldRenderer = React.memo(FormFieldRenderer);\nexport default MemoizedFormFieldRenderer;\n","import { useSortable } from \"@dnd-kit/sortable\";\nimport { CSS } from \"@dnd-kit/utilities\";\nimport { Button, ButtonGroup } from \"@heroui/react\";\nimport { GripVertical, Edit, Trash2, Copy } from \"lucide-react\";\nimport { FormFieldRenderer } from \"./FormFieldRenderer\";\nimport { useFormBuilder } from \"../context/FormBuilderContext\";\nimport { buildFieldWrapperClasses } from \"../utils/fieldStyles\";\nimport type { FormField } from \"../types/form\";\n\ninterface SortableFormFieldProps {\n  field: FormField;\n  isPreview: boolean;\n}\n\nexport function SortableFormField({\n  field,\n  isPreview,\n}: SortableFormFieldProps) {\n  const { state, actions } = useFormBuilder();\n  const { selectedFieldId } = state;\n\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition,\n    isDragging,\n  } = useSortable({ id: field.id });\n\n  const style = {\n    transform: CSS.Transform.toString(transform),\n    transition,\n  };\n\n  const isSelected = selectedFieldId === field.id;\n\n  const handleSelect = () => {\n    if (!isPreview) {\n      actions.selectField(field.id);\n    }\n  };\n\n  const handleDuplicate = () => {\n    const duplicatedField = {\n      ...field,\n      id: crypto.randomUUID(),\n      label: `${field.label} (Copy)`,\n    };\n    actions.addField(duplicatedField);\n  };\n\n  const handleDelete = () => {\n    actions.deleteField(field.id);\n  };\n\n  const handleEdit = () => {\n    actions.selectField(field.id);\n  };\n\n  const wrapperClasses = buildFieldWrapperClasses(field, !isPreview); // isEditor = !isPreview\n\n  if (isPreview) {\n    return (\n      <div className={`w-full ${wrapperClasses}`}>\n        <FormFieldRenderer field={field} />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      className={`\n        relative group\n        ${isDragging ? \"opacity-50 z-50\" : \"\"}\n        ${isSelected ? \"\" : \"\"}\n        ${wrapperClasses}\n      `}\n      onClick={!isDragging ? handleSelect : undefined}\n    >\n      <div\n        className={`\n          border transition-all duration-200 cursor-pointer\n          ${\n            isSelected\n              ? \"border-primary shadow-lg\"\n              : \"border-default-200 hover:border-default-300\"\n          }\n          ${isDragging ? \"shadow-2xl\" : \"\"}\n        `}\n      >\n        <div className=\"p-2\">\n          {/* Field Controls */}\n          <div className=\"flex items-center justify-between mb-2 \">\n            <div className=\"flex items-center gap-2\">\n              <div\n                {...attributes}\n                {...listeners}\n                className=\"cursor-grab active:cursor-grabbing p-1 hover:bg-default-100 rounded\"\n              >\n                <GripVertical className=\"text-default-400\" size={14} />\n              </div>\n              <span className=\"text-xs text-default-600 font-medium\">\n                {field.type.charAt(0).toUpperCase() + field.type.slice(1)}\n              </span>\n            </div>\n\n            <ButtonGroup size=\"sm\" variant=\"flat\">\n              <Button\n                isIconOnly\n                onPress={handleEdit}\n                color={isSelected ? \"primary\" : \"default\"}\n              >\n                <Edit size={16} />\n              </Button>\n              <Button isIconOnly onPress={handleDuplicate}>\n                <Copy size={16} />\n              </Button>\n              <Button isIconOnly color=\"danger\" onPress={handleDelete}>\n                <Trash2 size={16} />\n              </Button>\n            </ButtonGroup>\n          </div>\n\n          {/* Field Preview */}\n          <div className=\"pointer-events-none\">\n            <FormFieldRenderer field={field} />\n          </div>\n\n          {/* Field Info */}\n          <div className=\"mt-2 pt-2 border-t border-default-200\">\n            <div className=\"flex items-center justify-between text-xs text-default-500\">\n              <div className=\"flex items-center gap-2\">\n                <span>Req: {field.required ? \"Yes\" : \"No\"}</span>\n                {field.validation && field.validation.length > 0 && (\n                  <span>Val: {field.validation.length}</span>\n                )}\n              </div>\n              <span>ID: {field.id.slice(0, 6)}...</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import type { FormField, FormRow } from '../types/form';\n\nexport function groupFieldsIntoRows(fields: FormField[]): FormRow[] {\n  const rows: FormRow[] = [];\n  let currentRow: FormField[] = [];\n  let currentRowSpan = 0;\n  \n  fields.forEach((field, index) => {\n    const fieldSpan = getFieldSpan(field);\n    const startNewRow = field.properties?.startNewRow || false;\n    \n    // Start a new row if:\n    // 1. This field is marked to start a new row\n    // 2. Current row would exceed 12 columns\n    // 3. This is the first field\n    if (startNewRow || currentRowSpan + fieldSpan > 12 || currentRow.length === 0) {\n      if (currentRow.length > 0) {\n        rows.push({\n          id: `row-${rows.length}`,\n          fields: [...currentRow]\n        });\n      }\n      currentRow = [field];\n      currentRowSpan = fieldSpan;\n    } else {\n      currentRow.push(field);\n      currentRowSpan += fieldSpan;\n    }\n    \n    // If this is the last field, add the current row\n    if (index === fields.length - 1 && currentRow.length > 0) {\n      rows.push({\n        id: `row-${rows.length}`,\n        fields: [...currentRow]\n      });\n    }\n  });\n  \n  return rows;\n}\n\nexport function getFieldSpan(field: FormField): number {\n  // Check both field.layout.columnSpan and field.columnSpan for backward compatibility\n  const columnSpan = field.layout?.columnSpan || field.columnSpan;\n  if (columnSpan) {\n    return Math.min(12, Math.max(1, columnSpan));\n  }\n  \n  // Map width property to column spans\n  switch (field.properties?.width) {\n    case 'quarter':\n      return 3;\n    case 'third':\n      return 4;\n    case 'half':\n      return 6;\n    case 'full':\n    default:\n      return 12;\n  }\n}\n\nexport function getGridClassName(span: number): string {\n  const gridClasses: Record<number, string> = {\n    1: 'col-span-1',\n    2: 'col-span-2',\n    3: 'col-span-3',\n    4: 'col-span-4',\n    5: 'col-span-5',\n    6: 'col-span-6',\n    7: 'col-span-7',\n    8: 'col-span-8',\n    9: 'col-span-9',\n    10: 'col-span-10',\n    11: 'col-span-11',\n    12: 'col-span-12',\n  };\n  \n  return gridClasses[span] || 'col-span-12';\n}\n","import { SortableFormField } from './SortableFormField';\nimport { getFieldSpan, getGridClassName } from '../utils/layoutUtils';\nimport { buildFieldWrapperClasses } from '../utils/fieldStyles';\nimport type { FormRow } from '../types/form';\n\ninterface FormRowRendererProps {\n  row: FormRow;\n  isPreview: boolean;\n}\n\nexport function FormRowRenderer({ row, isPreview }: FormRowRendererProps) {\n  const { fields } = row;\n  \n  // If there's only one field with full width, don't use grid\n  if (fields.length === 1 && getFieldSpan(fields[0]) === 12) {\n    const wrapperClasses = buildFieldWrapperClasses(fields[0], !isPreview); // isEditor = !isPreview\n    return (\n      <div className={wrapperClasses}>\n        <SortableFormField\n          key={fields[0].id}\n          field={fields[0]}\n          isPreview={isPreview}\n        />\n      </div>\n    );\n  }\n  \n  // Use CSS Grid for multi-column layout\n  return (\n    <div className=\"grid grid-cols-12 gap-3\">\n      {fields.map((field) => {\n        const span = getFieldSpan(field);\n        const gridClass = getGridClassName(span);\n        const wrapperClasses = buildFieldWrapperClasses(field, !isPreview); // isEditor = !isPreview\n        const combinedClasses = [gridClass, wrapperClasses].filter(Boolean).join(' ');\n        \n        return (\n          <div key={field.id} className={combinedClasses}>\n            <SortableFormField\n              field={field}\n              isPreview={isPreview}\n            />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useState, useCallback } from \"react\";\nimport {\n  Input,\n  Textarea,\n  Select,\n  SelectItem,\n  Autocomplete,\n  AutocompleteItem,\n  Checkbox,\n  RadioGroup,\n  Radio,\n  Switch,\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Slider,\n  Chip,\n  Divider,\n} from \"@heroui/react\";\nimport { Star, Upload } from \"lucide-react\";\nimport { SignaturePad } from \"./SignaturePad\";\nimport { buildHeroUIClasses } from \"../utils/fieldStyles\";\nimport type { FormExportData, FormFieldExport } from \"../utils/formExport\";\n\ninterface FormRendererProps {\n  formConfig: FormExportData;\n  onSubmit?: (data: Record<string, any>) => void;\n  className?: string;\n}\n\nexport function FormRenderer({\n  formConfig,\n  onSubmit,\n  className = \"\",\n}: FormRendererProps) {\n  const [formData, setFormData] = useState<Record<string, any>>({});\n  const [errors, setErrors] = useState<Record<string, string>>({});\n\n  const handleFieldChange = useCallback((fieldId: string, value: any) => {\n    setFormData((prev) => ({\n      ...prev,\n      [fieldId]: value,\n    }));\n\n    // Clear error when user starts typing\n    setErrors((prev) => {\n      if (prev[fieldId]) {\n        const newErrors = { ...prev };\n        delete newErrors[fieldId];\n        return newErrors;\n      }\n      return prev;\n    });\n  }, []);\n\n  const validateForm = (): boolean => {\n    const newErrors: Record<string, string> = {};\n\n    // Check required fields\n    formConfig.validation.requiredFields.forEach((fieldId) => {\n      const field = formConfig.fieldMap[fieldId];\n      const value = formData[fieldId];\n\n      if (!value || (typeof value === \"string\" && value.trim() === \"\")) {\n        newErrors[fieldId] = `${field.label} is required`;\n      }\n    });\n\n    // Check field-specific validation\n    formConfig.validation.fieldsWithValidation.forEach((fieldId) => {\n      const field = formConfig.fieldMap[fieldId];\n      const value = formData[fieldId];\n\n      if (field.validation && value) {\n        field.validation.forEach((rule) => {\n          switch (rule.type) {\n            case \"email\":\n              const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n              if (!emailRegex.test(value)) {\n                newErrors[fieldId] = rule.message;\n              }\n              break;\n            case \"minLength\":\n              if (value.length < rule.value) {\n                newErrors[fieldId] = rule.message;\n              }\n              break;\n            case \"maxLength\":\n              if (value.length > rule.value) {\n                newErrors[fieldId] = rule.message;\n              }\n              break;\n            case \"min\":\n              if (parseFloat(value) < rule.value) {\n                newErrors[fieldId] = rule.message;\n              }\n              break;\n            case \"max\":\n              if (parseFloat(value) > rule.value) {\n                newErrors[fieldId] = rule.message;\n              }\n              break;\n            case \"pattern\":\n              const regex = new RegExp(rule.value);\n              if (!regex.test(value)) {\n                newErrors[fieldId] = rule.message;\n              }\n              break;\n          }\n        });\n      }\n    });\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      // First pass: generate unique field names for all fields\n      const fieldNames = new Map<string, string>();\n      const usedNames = new Set<string>();\n      \n      // Process all fields to assign unique names\n      Object.keys(formData).forEach((fieldId) => {\n        const field = formConfig.fieldMap[fieldId];\n        let fieldName = field.name;\n        \n        if (!fieldName || !fieldName.trim()) {\n          // Generate name from field type, ensuring uniqueness\n          const baseName = field.type.replace(/[-_]/g, '_').toLowerCase();\n          fieldName = baseName;\n          \n          if (usedNames.has(fieldName)) {\n            let counter = 2;\n            fieldName = `${baseName}${counter}`;\n            while (usedNames.has(fieldName)) {\n              counter++;\n              fieldName = `${baseName}${counter}`;\n            }\n          }\n        }\n        \n        usedNames.add(fieldName);\n        fieldNames.set(fieldId, fieldName);\n      });\n\n      // Second pass: build submission data using the unique names\n      const submissionData: Record<string, any> = {};\n      Object.entries(formData).forEach(([fieldId, value]) => {\n        const fieldName = fieldNames.get(fieldId)!;\n        submissionData[fieldName] = value;\n      });\n\n      onSubmit?.(submissionData);\n    }\n  };\n\n  const renderField = (field: FormFieldExport) => {\n    const value = formData[field.id] || field.defaultValue || \"\";\n    const error = errors[field.id];\n    const hasError = !!error;\n\n    // Build HeroUI classes using the same system as FormFieldRenderer\n    const heroUIClasses = buildHeroUIClasses(field as any, false); // false = not in editor, so apply responsive hiding\n\n    // Apply common properties that work across all components\n    const commonProps = {\n      label: field.label,\n      placeholder: field.placeholder,\n      isRequired: field.required,\n      description: field.properties?.description,\n      classNames: {\n        base: heroUIClasses.base,\n        label: heroUIClasses.label,\n        inputWrapper: heroUIClasses.inputWrapper,\n        innerWrapper: heroUIClasses.innerWrapper,\n        mainWrapper: heroUIClasses.mainWrapper,\n        input: heroUIClasses.input,\n        clearButton: heroUIClasses.clearButton,\n        helperWrapper: heroUIClasses.helperWrapper,\n        description: heroUIClasses.description,\n        errorMessage: heroUIClasses.errorMessage,\n      },\n      // isInvalid: hasError,\n      isInvalid: hasError,      // <-- Add this line\n      errorMessage: error,\n      size: (field.properties.size as \"sm\" | \"md\" | \"lg\") || \"md\",\n      isDisabled: field.properties.disabled,\n      isReadOnly: field.properties.readonly,\n      color: field.properties.colorVariant as any,\n      radius: field.properties.borderRadius as any,\n      variant: field.properties.variant as any,\n    };\n\n    // Handle conditional display\n    if (field.properties.hidden) {\n      return null;\n    }\n\n    // Generate HTML attributes\n    const getFieldAttributes = () => {\n      const attributes: Record<string, any> = {};\n      \n      if (field.properties.ariaLabel) {\n        attributes['aria-label'] = field.properties.ariaLabel;\n      }\n      \n      if (field.properties.tabIndex !== undefined) {\n        attributes.tabIndex = field.properties.tabIndex;\n      }\n      \n      if (field.properties.dataAttributes) {\n        // Parse data attributes like \"data-test=value,data-id=123\"\n        const dataAttrs = field.properties.dataAttributes.split(',');\n        dataAttrs.forEach(attr => {\n          const [key, value] = attr.split('=');\n          if (key && value) {\n            attributes[key.trim()] = value.trim();\n          }\n        });\n      }\n      \n      return attributes;\n    };\n\n    const fieldAttributes = getFieldAttributes();\n\n    switch (field.type) {\n      case \"text\":\n        return (\n          <Input\n            key={`text-${field.id}`}\n            {...commonProps}\n            type=\"text\"\n            value={value}\n            onValueChange={(val) => handleFieldChange(field.id, val)}\n            minLength={field.properties.minLength}\n            maxLength={field.properties.maxLength}\n          />\n        );\n\n      case \"email\":\n        return (\n          <Input\n            key={`email-${field.id}`}\n            {...commonProps}\n            type=\"email\"\n            value={value}\n            onValueChange={(val) => handleFieldChange(field.id, val)}\n            minLength={field.properties.minLength}\n            maxLength={field.properties.maxLength}\n          />\n        );\n\n      case \"password\":\n        return (\n          <Input\n            key={`password-${field.id}`}\n            {...commonProps}\n            type=\"password\"\n            value={value}\n            onValueChange={(val) => handleFieldChange(field.id, val)}\n            minLength={field.properties.minLength}\n            maxLength={field.properties.maxLength}\n          />\n        );\n\n      case \"number\":\n        return (\n          <Input\n            key={`number-${field.id}`}\n            {...commonProps}\n            type=\"number\"\n            value={value}\n            onValueChange={(val) => {\n              // Add client-side min/max validation\n              const numVal = parseFloat(val);\n              if (!isNaN(numVal)) {\n                if (field.properties.min !== undefined && numVal < field.properties.min) {\n                  return; // Don't update if below minimum\n                }\n                if (field.properties.max !== undefined && numVal > field.properties.max) {\n                  return; // Don't update if above maximum\n                }\n              }\n              handleFieldChange(field.id, val);\n            }}\n            min={field.properties.min}\n            max={field.properties.max}\n            step={field.properties.step}\n          />\n        );\n\n      case \"textarea\":\n        return (\n          <Textarea\n            key={`textarea-${field.id}`}\n            {...commonProps}\n            value={value}\n            onValueChange={(val) => handleFieldChange(field.id, val)}\n            rows={field.properties.rows || 4}\n            minLength={field.properties.minLength}\n            maxLength={field.properties.maxLength}\n          />\n        );\n\n      case \"select\":\n        return (\n          <Select\n            {...commonProps}\n            selectedKeys={value ? [value] : []}\n            onSelectionChange={(keys) => {\n              const selectedValue = Array.from(keys)[0];\n              handleFieldChange(field.id, selectedValue);\n            }}\n            selectionMode={field.properties.multiple ? \"multiple\" : \"single\"}\n          >\n            {field.options?.map((option) => (\n              <SelectItem key={option.value}>{option.label}</SelectItem>\n            )) || []}\n          </Select>\n        );\n\n      case \"autocomplete\":\n        return (\n          <Autocomplete\n            {...commonProps}\n            selectedKey={value || \"\"}\n            onSelectionChange={(key) => {\n              handleFieldChange(field.id, key);\n            }}\n            allowsCustomValue\n          >\n            {field.options?.map((option) => (\n              <AutocompleteItem key={option.value}>{option.label}</AutocompleteItem>\n            )) || []}\n          </Autocomplete>\n        );\n\n      case \"radio\":\n        const radioOrientation = field.properties?.orientation || 'vertical';\n        const radioComponentAlignment = field.properties?.componentAlignment || 'left';\n        \n        // Alignment classes based on orientation and alignment preference\n        const radioAlignmentClass = radioOrientation === 'horizontal'\n          ? (radioComponentAlignment === 'center' ? 'justify-center' : \n             radioComponentAlignment === 'right' ? 'justify-end' : 'justify-start')\n          : (radioComponentAlignment === 'center' ? 'items-center' : \n             radioComponentAlignment === 'right' ? 'items-end' : 'items-start');\n        \n        const radioLabelAlignmentClass = radioComponentAlignment === 'center' ? 'text-center' : \n                                         radioComponentAlignment === 'right' ? 'text-right' : 'text-left';\n        \n        // Wrapper alignment for the entire component\n        const radioWrapperAlignmentClass = radioComponentAlignment === 'center' ? 'flex flex-col items-center' :\n                                          radioComponentAlignment === 'right' ? 'flex flex-col items-end' : \n                                          'flex flex-col items-start';\n        \n        return (\n          <div className={radioWrapperAlignmentClass}>\n            <RadioGroup\n              label={field.label}\n              description={field.properties?.description}\n              isRequired={field.required}\n              value={value}\n              onValueChange={(val) => handleFieldChange(field.id, val)}\n              isInvalid={hasError}\n              errorMessage={error}\n              size={(field.properties.size as \"sm\" | \"md\" | \"lg\") || \"md\"}\n              isDisabled={field.properties.disabled}\n              color={field.properties.colorVariant as any}\n              orientation={radioOrientation as any}\n              classNames={{\n                base: [\n                  field.properties.marginTop,\n                  field.properties.marginBottom,\n                  field.properties.padding\n                ].filter(Boolean).join(' '),\n                wrapper: `${field.properties.alignment || ''} ${radioAlignmentClass}`,              label: radioLabelAlignmentClass,\n              description: radioLabelAlignmentClass\n            }}\n            className={field.properties.customClasses}\n          >\n            {field.options?.map((option) => (\n              <Radio key={option.value} value={option.value}>\n                {option.label}\n              </Radio>\n            )) || []}\n          </RadioGroup>\n          </div>\n        );\n\n      case \"checkbox\":\n        if (field.options && field.options.length > 1) {\n          const orientation = field.properties?.orientation || 'vertical';\n          const componentAlignment = field.properties?.componentAlignment || 'left';\n          \n          // Container classes based on orientation\n          const containerClass = orientation === 'horizontal' \n            ? 'flex flex-wrap gap-4' \n            : 'flex flex-col space-y-2';\n            \n          // Alignment classes based on orientation and alignment preference\n          const alignmentClass = orientation === 'horizontal'\n            ? (componentAlignment === 'center' ? 'justify-center' : \n               componentAlignment === 'right' ? 'justify-end' : 'justify-start')\n            : (componentAlignment === 'center' ? 'items-center' : \n               componentAlignment === 'right' ? 'items-end' : 'items-start');\n          \n          const labelAlignmentClass = componentAlignment === 'center' ? 'text-center' : \n                                     componentAlignment === 'right' ? 'text-right' : 'text-left';\n          \n          // Wrapper alignment for the entire component\n          const wrapperAlignmentClass = componentAlignment === 'center' ? 'flex flex-col items-center' :\n                                       componentAlignment === 'right' ? 'flex flex-col items-end' : \n                                       'flex flex-col items-start';\n          \n          return (\n            <div className={`space-y-2 ${field.properties.customClasses || \"\"} ${wrapperAlignmentClass}`}>\n              <label className={`text-sm font-medium ${labelAlignmentClass}`}>\n                {field.label}\n                {field.required && <span className=\"text-danger\">*</span>}\n              </label>\n              {field.properties?.description && (\n                <p className={`text-xs text-default-500 ${labelAlignmentClass}`}>\n                  {field.properties?.description}\n                </p>\n              )}\n              <div className={`${containerClass} ${alignmentClass}`}>\n                {field.options.map((option) => (\n                  <Checkbox\n                    key={option.value}\n                    isSelected={value?.includes?.(option.value) || false}\n                    onValueChange={(checked) => {\n                      const currentValues = value || [];\n                      if (checked) {\n                        handleFieldChange(field.id, [\n                          ...currentValues,\n                          option.value,\n                        ]);\n                      } else {\n                        handleFieldChange(\n                          field.id,\n                          currentValues.filter((v: any) => v !== option.value)\n                        );\n                      }\n                    }}\n                    size={(field.properties.size as \"sm\" | \"md\" | \"lg\") || \"md\"}\n                    isDisabled={field.properties.disabled}\n                    color={field.properties.colorVariant as any}\n                    radius={field.properties.borderRadius as any}\n                  >\n                    {option.label}\n                  </Checkbox>\n                ))}\n              </div>\n              {hasError && <p className=\"text-danger text-xs\">{error}</p>}\n            </div>\n          );\n        } else {\n          const checkboxComponentAlignment = field.properties?.componentAlignment || 'left';\n          const checkboxAlignmentClass = checkboxComponentAlignment === 'center' ? 'justify-center' : \n                                         checkboxComponentAlignment === 'right' ? 'justify-end' : 'justify-start';\n          const checkboxLabelAlignmentClass = checkboxComponentAlignment === 'center' ? 'text-center' : \n                                             checkboxComponentAlignment === 'right' ? 'text-right' : 'text-left';\n          \n          return (\n            <div className={`${field.properties.customClasses} ${checkboxAlignmentClass}`}>\n              <label className={`text-sm font-medium block mb-2 ${checkboxLabelAlignmentClass}`}>\n                {field.label}\n                {field.required && <span className=\"text-danger\">*</span>}\n              </label>\n              {field.properties?.description && (\n                <p className={`text-xs text-default-500 mb-2 ${checkboxLabelAlignmentClass}`}>\n                  {field.properties?.description}\n                </p>\n                )}\n              <Checkbox\n                isSelected={value || false}\n                onValueChange={(checked) =>\n                  handleFieldChange(field.id, checked)\n                }\n                size={(field.properties.size as \"sm\" | \"md\" | \"lg\") || \"md\"}\n                isDisabled={field.properties.disabled}\n                color={field.properties.colorVariant as any}\n                radius={field.properties.borderRadius as any}\n              >\n                Check to confirm\n              </Checkbox>\n              {hasError && <p className={`text-danger text-xs mt-1 ${checkboxLabelAlignmentClass}`}>{error}</p>}\n            </div>\n          );\n        }\n\n      case \"switch\":\n        const switchComponentAlignment = field.properties?.componentAlignment || 'left';\n        const switchAlignmentClass = switchComponentAlignment === 'center' ? 'flex justify-center' : \n                                     switchComponentAlignment === 'right' ? 'flex justify-end' : 'flex justify-start';\n        \n        return (\n          <div className={`space-y-2 ${field.properties.customClasses || \"\"}`}>\n            <div className={switchAlignmentClass}>\n              <Switch\n                isSelected={value || false}\n                onValueChange={(checked) => handleFieldChange(field.id, checked)}\n                size={(field.properties.size as \"sm\" | \"md\" | \"lg\") || \"sm\"}\n                isDisabled={field.properties.disabled}\n                color={field.properties.colorVariant as any}\n              >\n                {field.label}\n                {field.required && <span className=\"text-danger ml-1\">*</span>}\n              </Switch>\n            </div>\n            {field.properties?.description && (\n              <div className={switchAlignmentClass}>\n                <p className=\"text-xs text-default-500\">\n                  {field.properties?.description}\n                </p>\n              </div>\n            )}\n            {hasError && (\n              <div className={switchAlignmentClass}>\n                <p className=\"text-danger text-xs\">{error}</p>\n              </div>\n            )}\n          </div>\n        );\n\n      case \"section\":\n        return (\n          <Card \n            radius={(field.properties.borderRadius as any) || \"sm\"} \n            className={field.properties.customClasses}\n          >\n            <CardBody className=\"py-4\">\n              <h3 className=\"text-lg font-semibold mb-2\">{field.label}</h3>\n              {field.properties?.description && (\n                <p className=\"text-default-600\">{field.properties?.description}</p>\n              )}\n            </CardBody>\n          </Card>\n        );\n\n      case \"paragraph\":\n        return (\n          <div className={`py-2 ${field.properties.customClasses || \"\"}`}>\n            <h4 className=\"text-md font-medium mb-1\">{field.label}</h4>\n            {field.properties?.description && (\n              <p className=\"text-default-600\">{field.properties?.description}</p>\n            )}\n          </div>\n        );\n\n      case \"phone\":\n        return (\n          <Input\n            key={`phone-${field.id}`}\n            {...commonProps}\n            type=\"tel\"\n            value={value}\n            onValueChange={(val) => handleFieldChange(field.id, val)}\n            minLength={field.properties.minLength}\n            maxLength={field.properties.maxLength}\n          />\n        );\n\n      case \"url\":\n        return (\n          <Input\n            key={`url-${field.id}`}\n            {...commonProps}\n            type=\"url\"\n            value={value}\n            onValueChange={(val) => handleFieldChange(field.id, val)}\n            minLength={field.properties.minLength}\n            maxLength={field.properties.maxLength}\n          />\n        );\n\n      case \"date\":\n        return (\n          <Input\n            key={`date-${field.id}`}\n            {...commonProps}\n            type=\"date\"\n            value={value}\n            onValueChange={(val) => handleFieldChange(field.id, val)}\n          />\n        );\n\n      case \"time\":\n        return (\n          <Input\n            key={`time-${field.id}`}\n            {...commonProps}\n            type=\"time\"\n            value={value}\n            onValueChange={(val) => handleFieldChange(field.id, val)}\n          />\n        );\n\n      case \"datetime\":\n        return (\n          <Input\n            key={`datetime-${field.id}`}\n            {...commonProps}\n            type=\"datetime-local\"\n            value={value}\n            onValueChange={(val) => handleFieldChange(field.id, val)}\n          />\n        );\n\n      case \"multiselect\":\n        return (\n          <Select\n            {...commonProps}\n            selectionMode=\"multiple\"\n            selectedKeys={value || []}\n            onSelectionChange={(keys) => {\n              const selectedValues = Array.from(keys);\n              handleFieldChange(field.id, selectedValues);\n            }}\n          >\n            {field.options?.map((option) => (\n              <SelectItem key={option.value}>{option.label}</SelectItem>\n            )) || []}\n          </Select>\n        );\n\n      case \"range\":\n        return (\n          <div className={`space-y-2 ${field.properties.customClasses || \"\"}`}>\n            <label className=\"text-sm font-medium\">\n              {field.label}\n              {field.required && <span className=\"text-danger\">*</span>}\n            </label>\n            {field.properties?.description && (\n              <p className=\"text-xs text-default-500\">\n                {field.properties?.description}\n              </p>\n            )}\n            <Slider\n              value={value || field.properties.min || 0}\n              onChange={(val: number | number[]) => {\n                const newValue = Array.isArray(val) ? val[0] : val;\n                handleFieldChange(field.id, newValue);\n              }}\n              minValue={field.properties.min || 0}\n              maxValue={field.properties.max || 100}\n              step={field.properties.step || 1}\n              className=\"max-w-md\"\n              size={(field.properties.size as \"sm\" | \"md\" | \"lg\") || \"sm\"}\n              isDisabled={field.properties.disabled}\n              color={field.properties.colorVariant as any}\n            />\n            <div className=\"text-xs text-default-500\">\n              Value: {value || field.properties.min || 0}\n            </div>\n            {hasError && <p className=\"text-danger text-xs\">{error}</p>}\n          </div>\n        );\n\n      case \"file\":\n        return (\n          <div className={`space-y-2 ${field.properties.customClasses || \"\"}`}>\n            <label className=\"text-sm font-medium\">\n              {field.label}\n              {field.required && <span className=\"text-danger\">*</span>}\n            </label>\n            {field.properties?.description && (\n              <p className=\"text-xs text-default-500\">\n                {field.properties?.description}\n              </p>\n            )}\n            <div className={`border-2 border-dashed border-default-300 rounded-lg p-4 text-center hover:border-default-400 transition-colors ${\n              field.properties.disabled ? 'opacity-50 cursor-not-allowed' : ''\n            }`}>\n              <Upload className=\"mx-auto h-8 w-8 text-default-400 mb-2\" />\n              <input\n                type=\"file\"\n                accept={field.properties.accept || \"*\"}\n                multiple={field.properties.multiple}\n                disabled={field.properties.disabled}\n                onChange={(e) => {\n                  const files = field.properties.multiple ? Array.from(e.target.files || []) : e.target.files?.[0];\n                  handleFieldChange(field.id, files);\n                }}\n                className=\"hidden\"\n                id={`file-${field.id}`}\n              />\n              <label htmlFor={`file-${field.id}`} className={`cursor-pointer ${field.properties.disabled ? 'cursor-not-allowed' : ''}`}>\n                <div className=\"text-sm text-default-600\">\n                  Click to upload {field.properties.multiple ? 'files' : 'a file'}\n                </div>\n                {value && (\n                  <div className=\"mt-2\">\n                    {Array.isArray(value) ? (\n                      <div className=\"flex flex-wrap gap-1\">\n                        {value.map((file: any, index: number) => (\n                          <Chip key={index} color=\"primary\" size=\"sm\">\n                            {/* Add download link here */}\n                              <a\n                                href={URL.createObjectURL(file)}\n                                download={file.name}\n                                // className=\"underline\"\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                               {file.name || `File ${index + 1}`}\n                             </a>\n                          </Chip>\n                        ))}\n                      </div>\n                    ) : (\n                      <Chip color=\"primary\" size=\"sm\">\n                        {/* Add download link here */}\n                         <a\n                           href={URL.createObjectURL(value)}\n                           download={value.name}\n                          //  className=\"underline\"\n                           target=\"_blank\"\n                           rel=\"noopener noreferrer\"\n                          >\n                          {value.name || \"File selected\"}\n                         </a>\n                      </Chip>\n                    )}\n                  </div>\n                )}\n              </label>\n            </div>\n            {hasError && <p className=\"text-danger text-xs\">{error}</p>}\n          </div>\n        );\n\n      case \"rating\":\n        const ratingComponentAlignment = field.properties?.componentAlignment || 'left';\n        const ratingAlignmentClass = ratingComponentAlignment === 'center' ? 'flex justify-center' : \n                                     ratingComponentAlignment === 'right' ? 'flex justify-end' : 'flex justify-start';\n        \n        return (\n          <div className={`space-y-2 ${field.properties.customClasses || \"\"}`}>\n            <div className={ratingAlignmentClass}>\n              <label className=\"text-sm font-medium\">\n                {field.label}\n                {field.required && <span className=\"text-danger\">*</span>}\n              </label>\n            </div>\n            {field.properties?.description && (\n              <div className={ratingAlignmentClass}>\n                <p className=\"text-xs text-default-500\">\n                  {field.properties?.description}\n                </p>\n              </div>\n            )}\n            <div className={ratingAlignmentClass}>\n              <div className=\"flex space-x-1\">\n                {Array.from({ length: field.properties.max || 5 }, (_, i) => (\n                  <button\n                    key={i}\n                    type=\"button\"\n                    disabled={field.properties.disabled}\n                    onClick={() => handleFieldChange(field.id, i + 1)}\n                    className={`p-1 hover:scale-110 transition-transform ${\n                      field.properties.disabled ? 'opacity-50 cursor-not-allowed' : ''\n                    }`}\n                  >\n                    <Star\n                      className={`h-6 w-6 ${\n                        (value || 0) > i\n                          ? \"text-yellow-400 fill-yellow-400\"\n                          : \"text-default-300\"\n                      }`}\n                    />\n                  </button>\n                ))}\n              </div>\n            </div>\n            {value && (\n              <div className={ratingAlignmentClass}>\n                <div className=\"text-sm text-default-600\">\n                  {value} out of {field.properties.max || 5} stars\n                </div>\n              </div>\n            )}\n            {hasError && (\n              <div className={ratingAlignmentClass}>\n                <p className=\"text-danger text-xs\">{error}</p>\n              </div>\n            )}\n          </div>\n        );\n\n      case \"signature\":\n        return (\n          <div className={`space-y-2 ${field.properties.customClasses || \"\"}`}>\n            <label className=\"text-sm font-medium\">\n              {field.label}\n              {field.required && <span className=\"text-danger\">*</span>}\n            </label>\n            {field.properties?.description && (\n              <p className=\"text-xs text-default-500\">\n                {field.properties?.description}\n              </p>\n            )}\n            <SignaturePad\n              value={value}\n              onChange={(signature) => handleFieldChange(field.id, signature)}\n              width={400}\n              height={200}\n              className=\"w-full\"\n              disabled={field.properties.disabled}\n            />\n            {hasError && <p className=\"text-danger text-xs\">{error}</p>}\n          </div>\n        );\n\n      case \"pagebreak\":\n        return (\n          <div className=\"py-4\">\n            <Divider />\n          </div>\n        );\n\n      case \"html\":\n        return (\n          <div className=\"py-2\">\n            <div\n              dangerouslySetInnerHTML={{\n                __html: field.defaultValue || \"<div>HTML content</div>\",\n              }}\n              className=\"prose prose-sm max-w-none\"\n            />\n          </div>\n        );\n\n      case \"button\":\n        return (\n          <Button\n            key={`button-${field.id}`}\n            color={field.properties.colorVariant as any}\n            size={field.properties.size as any}\n            variant={field.properties.variant as any}\n            radius={field.properties.borderRadius as any}\n            isDisabled={field.properties.disabled}\n            className={field.properties.customClasses}\n            onPress={() => {\n              // Handle button click - could trigger custom events or actions\n              console.log('Button clicked:', field.label);\n              handleFieldChange(field.id, 'clicked');\n            }}\n            {...fieldAttributes}\n          >\n            {field.label}\n          </Button>\n        );\n\n      default:\n        return (\n          <div className=\"p-4 border border-dashed border-default-300 rounded-lg text-center\">\n            <p className=\"text-default-500\">\n              Unsupported field type: {field.type}\n            </p>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className={`max-w-4xl mx-auto p-6 ${className}`}>\n      <Card radius=\"sm\" className=\"p-1\">\n        <CardHeader>\n          <div>\n            <h1 className=\"text-2xl font-bold\">{formConfig.metadata.title}</h1>\n            {formConfig.metadata.description && (\n              <p className=\"text-default-600 mt-2\">\n                {formConfig.metadata.description}\n              </p>\n            )}\n          </div>\n        </CardHeader>\n        <CardBody>\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {/* Render form rows with grid layout */}\n            {formConfig.layout.rows.map((row) => (\n              <div key={row.id} className=\"grid grid-cols-12 gap-4\">\n                {row.fields.map((fieldId) => {\n                  const field = formConfig.fieldMap[fieldId];\n                  \n                  // Generate responsive hiding classes for the field container\n                  const getResponsiveClasses = () => {\n                    const classes = [];\n                    if (field.properties.hideOnMobile) {\n                      classes.push('hidden sm:block');\n                    }\n                    if (field.properties.hideOnTablet) {\n                      classes.push('md:hidden lg:block');\n                    }\n                    if (field.properties.hideOnDesktop) {\n                      classes.push('lg:hidden');\n                    }\n                    return classes.join(' ');\n                  };\n                  \n                  const responsiveClasses = getResponsiveClasses();\n                  \n                  return (\n                    <div \n                      key={fieldId} \n                      className={`${field.layout.gridClass} ${responsiveClasses}`}\n                    >\n                      {renderField(field)}\n                    </div>\n                  );\n                })}\n              </div>\n            ))}\n\n            {/* Submit Button */}\n            <div className=\"flex justify-end pt-6 border-t border-divider\">\n              <Button\n                radius=\"sm\"\n                type=\"submit\"\n                color=\"primary\"\n                size=\"md\"\n                className=\"w-full sm:w-auto\"\n              >\n                {formConfig.settings.submitButtonText}\n              </Button>\n            </div>\n          </form>\n        </CardBody>\n      </Card>\n    </div>\n  );\n}\n","import type { FormConfig } from '../types/form';\nimport { groupFieldsIntoRows, getFieldSpan } from './layoutUtils';\n\nexport interface FormExportData {\n  metadata: {\n    id: string;\n    title: string;\n    description?: string;\n    version: string;\n    createdAt: string;\n    exportedAt: string;\n    builderVersion: string;\n  };\n  settings: {\n    submitButtonText: string;\n    redirectUrl?: string;\n    emailNotifications?: string[];\n    allowMultipleSubmissions: boolean;\n    requireAuth: boolean;\n    captchaEnabled: boolean;\n    theme: 'light' | 'dark' | 'auto';\n  };\n  layout: {\n    rows: FormRowExport[];\n    totalFields: number;\n  };\n  fields: FormFieldExport[];\n  fieldMap: Record<string, FormFieldExport>;\n  validation: {\n    requiredFields: string[];\n    fieldsWithValidation: string[];\n  };\n}\n\nexport interface FormRowExport {\n  id: string;\n  fields: string[]; // Array of field IDs\n  columns: number; // Total columns used in this row\n}\n\nexport interface FormFieldExport {\n  id: string;\n  type: string;\n  label: string;\n  name?: string;\n  placeholder?: string;\n  required: boolean;\n  defaultValue?: any;\n  validation?: Array<{\n    type: string;\n    value?: any;\n    message: string;\n  }>;\n  options?: Array<{\n    label: string;\n    value: string;\n  }>;\n  properties: {\n    helpText?: string;\n    description?: string;\n    customClasses?: string;\n    classNames?: {\n      base?: string;\n      label?: string;\n      inputWrapper?: string;\n      innerWrapper?: string;\n      mainWrapper?: string;\n      input?: string;\n      clearButton?: string;\n      helperWrapper?: string;\n      description?: string;\n      errorMessage?: string;\n    };\n    width?: string;\n    rows?: number;\n    multiple?: boolean;\n    accept?: string;\n    min?: number;\n    max?: number;\n    step?: number;\n    startNewRow?: boolean;\n    size?: 'small' | 'medium' | 'large' | 'sm' | 'md' | 'lg';\n    disabled?: boolean;\n    readonly?: boolean;\n    hidden?: boolean;\n    colorVariant?: 'default' | 'primary' | 'secondary' | 'success' | 'warning' | 'danger';\n    borderRadius?: 'none' | 'small' | 'default' | 'large' | 'full' | 'sm' | 'md' | 'lg';\n    variant?: 'solid' | 'bordered' | 'light' | 'flat' | 'faded' | 'shadow' | 'ghost';\n    showCharacterCount?: boolean;\n    minLength?: number;\n    maxLength?: number;\n    // Layout properties\n    marginTop?: string; // Tailwind classes like 'mt-0', 'mt-1', 'mt-2', 'mt-4', 'mt-6', 'mt-8'\n    marginBottom?: string; // Tailwind classes like 'mb-0', 'mb-1', 'mb-2', 'mb-4', 'mb-6', 'mb-8'\n    padding?: string; // Tailwind classes like 'p-0', 'p-1', 'p-2', 'p-4', 'p-6', 'p-8'\n    alignment?: string; // Tailwind classes like 'text-left', 'text-center', 'text-right', 'text-justify'\n    orientation?: 'vertical' | 'horizontal'; // Layout orientation for radio and checkbox groups\n    componentAlignment?: 'left' | 'center' | 'right'; // Unified alignment for labels and components in radio, checkbox, switch, and rating\n    // Responsive properties\n    hideOnMobile?: boolean;\n    hideOnTablet?: boolean;\n    hideOnDesktop?: boolean;\n    // Custom attributes\n    dataAttributes?: string;\n    ariaLabel?: string;\n    tabIndex?: number;\n  };\n  layout: {\n    columnSpan: number;\n    rowId: string;\n    gridClass: string;\n  };\n  conditionalLogic?: {\n    field: string;\n    operator: string;\n    value: any;\n    action: string;\n  };\n}\n\nexport function generateFormExportData(form: FormConfig): FormExportData {\n  const rows = groupFieldsIntoRows(form.fields);\n  const now = new Date().toISOString();\n  \n  // Generate unique names for fields that don't have them\n  const fieldsWithNames = form.fields.map((field, index) => {\n    if (field.name && field.name.trim()) {\n      return field;\n    }\n    \n    // Generate unique name based on type and existing names\n    const baseName = field.type.replace(/[-_]/g, '_').toLowerCase();\n    const existingNames = form.fields\n      .slice(0, index)\n      .map(f => f.name)\n      .filter(Boolean);\n    \n    let uniqueName = baseName;\n    if (existingNames.includes(baseName)) {\n      let counter = 2;\n      uniqueName = `${baseName}${counter}`;\n      while (existingNames.includes(uniqueName)) {\n        counter++;\n        uniqueName = `${baseName}${counter}`;\n      }\n    }\n    \n    return {\n      ...field,\n      name: uniqueName\n    };\n  });\n  \n  // Process rows for export (use original fields for row mapping)\n  const exportRows: FormRowExport[] = rows.map(row => ({\n    id: row.id,\n    fields: row.fields.map(field => field.id),\n    columns: row.fields.reduce((total, field) => total + getFieldSpan(field), 0)\n  }));\n\n  // Process fields for export\n  const exportFields: FormFieldExport[] = fieldsWithNames.map(field => {\n    const span = getFieldSpan(field);\n    const rowId = rows.find(row => row.fields.some(f => f.id === field.id))?.id || 'row-0';\n    \n    return {\n      id: field.id,\n      type: field.type,\n      label: field.label,\n      name: field.name,\n      placeholder: field.placeholder,\n      required: field.required,\n      defaultValue: field.defaultValue,\n      validation: field.validation,\n      options: field.options,\n      properties: {\n        helpText: field.properties?.helpText,\n        description: field.properties?.description,\n        customClasses: field.properties?.customClasses || field.custom?.cssClasses?.join(' ') || '',\n        classNames: field.properties?.classNames,\n        width: field.properties?.width || 'full',\n        rows: field.properties?.rows,\n        multiple: field.properties?.multiple,\n        accept: field.properties?.accept,\n        min: field.properties?.min,\n        max: field.properties?.max,\n        step: field.properties?.step,\n        startNewRow: field.properties?.startNewRow,\n        size: field.properties?.size,\n        disabled: field.advanced?.disabled || field.properties?.disabled,\n        readonly: field.advanced?.readOnly || field.properties?.readonly,\n        hidden: field.advanced?.hidden || field.properties?.hidden,\n        colorVariant: field.properties?.colorVariant,\n        borderRadius: field.properties?.borderRadius,\n        variant: field.properties?.variant,\n        showCharacterCount: field.properties?.showCharacterCount,\n        minLength: field.properties?.minLength,\n        maxLength: field.properties?.maxLength,\n        // Layout properties\n        marginTop: field.properties?.marginTop,\n        marginBottom: field.properties?.marginBottom,\n        padding: field.properties?.padding,\n        alignment: field.properties?.alignment,\n        orientation: field.properties?.orientation,\n        componentAlignment: field.properties?.componentAlignment,\n        // Responsive properties\n        hideOnMobile: field.properties?.hideOnMobile,\n        hideOnTablet: field.properties?.hideOnTablet,\n        hideOnDesktop: field.properties?.hideOnDesktop,\n        // Custom attributes\n        dataAttributes: field.properties?.dataAttributes,\n        ariaLabel: field.properties?.ariaLabel,\n        tabIndex: field.properties?.tabIndex,\n      },\n      layout: {\n        columnSpan: field.columnSpan || span,\n        rowId: rowId,\n        gridClass: getGridClassName(field.columnSpan || span),\n      },\n      conditionalLogic: field.conditionalLogic,\n    };\n  });\n\n  // Create field map for easy lookup\n  const fieldMap: Record<string, FormFieldExport> = {};\n  exportFields.forEach(field => {\n    fieldMap[field.id] = field;\n  });\n\n  // Validation summary\n  const requiredFields = exportFields.filter(field => field.required).map(field => field.id);\n  const fieldsWithValidation = exportFields\n    .filter(field => field.validation && field.validation.length > 0)\n    .map(field => field.id);\n\n  return {\n    metadata: {\n      id: form.id,\n      title: form.title,\n      description: form.description,\n      version: '1.0.0',\n      createdAt: form.id, // Using ID as creation timestamp for now\n      exportedAt: now,\n      builderVersion: '1.0.0',\n    },\n    settings: form.settings,\n    layout: {\n      rows: exportRows,\n      totalFields: exportFields.length,\n    },\n    fields: exportFields,\n    fieldMap,\n    validation: {\n      requiredFields,\n      fieldsWithValidation,\n    },\n  };\n}\n\nfunction getGridClassName(span: number): string {\n  const gridClasses: Record<number, string> = {\n    1: 'col-span-1',\n    2: 'col-span-2',\n    3: 'col-span-3',\n    4: 'col-span-4',\n    5: 'col-span-5',\n    6: 'col-span-6',\n    7: 'col-span-7',\n    8: 'col-span-8',\n    9: 'col-span-9',\n    10: 'col-span-10',\n    11: 'col-span-11',\n    12: 'col-span-12',\n  };\n  \n  return gridClasses[span] || 'col-span-12';\n}\n\nexport function downloadFormAsJson(form: FormConfig, filename?: string) {\n  const exportData = generateFormExportData(form);\n  const jsonString = JSON.stringify(exportData, null, 2);\n  \n  const blob = new Blob([jsonString], { type: 'application/json' });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = filename || `${form.title.replace(/\\s+/g, '_')}_form_export.json`;\n  link.click();\n  URL.revokeObjectURL(url);\n}\n\n// Utility function to generate form preview JSON (for embedding in preview mode)\nexport function generateFormPreviewJson(form: FormConfig): string {\n  const exportData = generateFormExportData(form);\n  return JSON.stringify(exportData, null, 2);\n}\n","import { useDroppable } from \"@dnd-kit/core\";\nimport {\n  SortableContext,\n  verticalListSortingStrategy,\n} from \"@dnd-kit/sortable\";\nimport { \n  Card, \n  CardBody, \n  Button, \n  Input, \n  Textarea,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  useDisclosure,\n  Divider\n} from \"@heroui/react\";\nimport { Plus, Check } from \"lucide-react\";\nimport { useFormBuilder } from \"../context/FormBuilderContext\";\nimport { createFormField } from \"../data/formFields\";\nimport { FormRowRenderer } from \"./FormRowRenderer\";\nimport { FormRenderer } from \"./FormRenderer\";\nimport { groupFieldsIntoRows } from \"../utils/layoutUtils\";\nimport { generateFormExportData } from \"../utils/formExport\";\nimport { useState } from \"react\";\n\nexport function FormCanvas() {\n  const { state, actions } = useFormBuilder();\n  const { currentForm, previewMode } = state;\n  \n  // Modal state for preview form submissions\n  const [submissionData, setSubmissionData] = useState<Record<string, any> | null>(null);\n  const {\n    isOpen: isSubmissionModalOpen,\n    onOpen: onSubmissionModalOpen,\n    onOpenChange: onSubmissionModalOpenChange,\n  } = useDisclosure();\n\n  const { setNodeRef, isOver } = useDroppable({\n    id: \"form-canvas\",\n  });\n\n  const handleAddField = () => {\n    const newField = createFormField(\"text\");\n    actions.addField(newField);\n  };\n\n  const handlePreviewSubmit = (data: Record<string, any>) => {\n    setSubmissionData(data);\n    onSubmissionModalOpen();\n  };\n\n  if (currentForm.fields.length === 0) {\n    return (\n      <div\n        ref={setNodeRef}\n        className={`flex-1 p-2 sm:p-4 ${\n          isOver ? \"bg-primary-50\" : \"bg-background\"\n        } transition-colors`}\n      >\n        <Card\n          radius=\"sm\"\n          className=\"h-full border-2 p-4 sm:p-10 border-dashed border-default-300\"\n        >\n          <CardBody className=\"flex flex-col items-center justify-center text-center\">\n            <Plus className=\"text-4xl sm:text-6xl text-default-400 mb-2 sm:mb-4\" />\n            <h3 className=\"text-sm sm:text-md font-semibold mb-2\">\n              Start Building Your Form\n            </h3>\n            <p className=\"text-default-600 mb-4 sm:mb-6 text-xs sm:text-sm max-w-xs sm:max-w-md\">\n              Drag elements from the sidebar or click the button below to add\n              your first field\n            </p>\n            <Button\n              color=\"secondary\"\n              size=\"sm\"\n              radius=\"sm\"\n              startContent={<Plus />}\n              onPress={handleAddField}\n            >\n              Add First Field\n            </Button>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={setNodeRef}\n      className={`flex-1 p-2 sm:p-4 overflow-y-auto ${\n        isOver ? \"bg-primary-50\" : \"bg-background\"\n      } transition-colors`}\n    >\n      <div className={`w-full ${previewMode ? 'max-w-xs sm:max-w-sm md:max-w-md lg:max-w-lg xl:max-w-2xl mx-auto' : ''}`}>\n        {/* Form Header */}\n        <div className=\"mb-2 sm:mb-4 px-1 sm:px-2\">\n          {previewMode ? (\n          <></>\n          ) : (\n            <div className=\"space-y-2 sm:space-y-3 mb-2 sm:mb-4 p-2 sm:p-4 bg-default-50 rounded-lg border border-default-200\">\n              <h3 className=\"text-xs sm:text-sm font-semibold text-default-700 mb-1 sm:mb-2\">Form Information</h3>\n              <Input\n                label=\"Form Title\"\n                placeholder=\"Enter form title...\"\n                value={currentForm.title}\n                onChange={(e) => actions.updateFormMeta({ title: e.target.value })}\n                size=\"sm\"\n                className=\"w-full\"\n              />\n              <Textarea\n                label=\"Form Description (Optional)\"\n                placeholder=\"Enter a brief description of your form...\"\n                value={currentForm.description || \"\"}\n                onChange={(e) => actions.updateFormMeta({ description: e.target.value })}\n                size=\"sm\"\n                rows={2}\n                className=\"w-full\"\n              />\n            </div>\n          )}\n        </div>\n\n        {/* Form Fields */}\n        {previewMode ? (\n          // In preview mode, use the same FormRenderer that will be used with exported JSON\n          <FormRenderer \n            formConfig={generateFormExportData(currentForm)}\n            onSubmit={handlePreviewSubmit}\n          />\n        ) : (\n          <>\n            <SortableContext\n              items={currentForm.fields.map((field) => field.id)}\n              strategy={verticalListSortingStrategy}\n            >\n              <div className=\"space-y-2 sm:space-y-4\">\n                {groupFieldsIntoRows(currentForm.fields).map((row) => (\n                  <FormRowRenderer key={row.id} row={row} isPreview={false} />\n                ))}\n              </div>\n            </SortableContext>\n\n            {/* Submit Button (edit mode) */}\n            <div className=\"mt-2 flex justify-end sm:mt-4 pt-2 sm:pt-4 border-t border-divider px-1 sm:px-2\">\n              <Button\n                radius=\"sm\"\n                color=\"primary\"\n                type=\"submit\"\n                disabled={true}\n                className=\"sm:size-lg\"\n              >\n                {currentForm.settings.submitButtonText}\n              </Button>\n            </div>\n\n            {/* Add Field Button */}\n            <div className=\"mt-2 sm:mt-4 px-1 sm:px-2\">\n              <Button\n                radius=\"sm\"\n                variant=\"bordered\"\n                startContent={<Plus />}\n                onPress={handleAddField}\n                className=\"w-full\"\n                size=\"sm\"\n              >\n                <span className=\"hidden sm:inline\">Add Field</span>\n                <span className=\"sm:hidden\">Add</span>\n              </Button>\n            </div>\n          </>\n        )}\n      </div>\n\n      {/* Preview Submission Result Modal */}\n      <Modal\n        isOpen={isSubmissionModalOpen}\n        onOpenChange={onSubmissionModalOpenChange}\n        size=\"2xl\"\n      >\n        <ModalContent>\n          {(onClose) => (\n            <>\n              <ModalHeader>Form Preview Submission</ModalHeader>\n              <ModalBody>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center gap-2 text-success\">\n                    <Check className=\"w-5 h-5\" />\n                    <span className=\"font-medium\">\n                      Form submitted successfully in preview mode!\n                    </span>\n                  </div>\n                  <Divider />\n                  <div>\n                    <h4 className=\"font-semibold mb-2\">Submitted Data:</h4>\n                    <div className=\"bg-success-50 p-4 rounded-lg\">\n                      <pre className=\"text-sm overflow-auto whitespace-pre-wrap\">\n                        {JSON.stringify(submissionData, null, 2)}\n                      </pre>\n                    </div>\n                  </div>\n                  <div className=\"text-sm text-default-600\">\n                    <strong>Preview Mode:</strong> This shows how your form will behave when submitted. \n                    In a real application, this data would be sent to your server or API endpoint.\n                  </div>\n                </div>\n              </ModalBody>\n              <ModalFooter>\n                <Button\n                  color=\"default\"\n                  variant=\"flat\"\n                  onPress={async () => {\n                    if (submissionData) {\n                      await navigator.clipboard.writeText(\n                        JSON.stringify(submissionData, null, 2)\n                      );\n                    }\n                  }}\n                >\n                  Copy Data\n                </Button>\n                <Button color=\"primary\" onPress={onClose}>\n                  Close\n                </Button>\n              </ModalFooter>\n            </>\n          )}\n        </ModalContent>\n      </Modal>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { Accordion, AccordionItem, Button, Input, Chip } from \"@heroui/react\";\nimport { useDraggable } from \"@dnd-kit/core\";\nimport {\n  DRAG_ITEMS,\n  FIELD_CATEGORIES,\n  createFormField,\n} from \"../data/formFields\";\nimport { useFormBuilder } from \"../context/FormBuilderContext\";\nimport type { FormFieldType } from \"../types/form\";\nimport * as LucideIcons from \"lucide-react\";\n\ninterface DraggableFieldProps {\n  id: string;\n  type: FormFieldType;\n  label: string;\n  icon: string;\n  category: string;\n}\n\nfunction DraggableField({\n  id,\n  type,\n  label,\n  icon,\n  category,\n}: DraggableFieldProps) {\n  const { addField } = useFormBuilder().actions;\n  const isComingSoon = category === \"static\" || category === \"structure\";\n\n  const { attributes, listeners, setNodeRef, transform, isDragging } =\n    useDraggable({\n      id,\n      disabled: isComingSoon, // Disable dragging for coming soon items\n    });\n\n  const style = transform\n    ? {\n        transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\n      }\n    : undefined;\n\n  const IconComponent = (LucideIcons as any)[icon] || LucideIcons.Plus;\n\n  const handleClick = () => {\n    if (isComingSoon) {\n      return; // Prevent adding coming soon items\n    }\n    const newField = createFormField(type);\n    addField(newField);\n  };\n\n  return (\n    <div\n      ref={setNodeRef}\n      style={style}\n      {...(!isComingSoon ? listeners : {})}\n      {...(!isComingSoon ? attributes : {})}\n      className={`${\n        !isComingSoon\n          ? \"cursor-grab active:cursor-grabbing\"\n          : \"cursor-not-allowed\"\n      } ${isDragging ? \"opacity-50\" : \"\"}`}\n    >\n      <Button\n        size=\"sm\"\n        radius=\"sm\"\n        variant=\"flat\"\n        className={`mb-1 w-full transition-colors relative ${\n         isComingSoon\n          ? \"bg-background\"\n          : \"bg-background hover:bg-default-100 cursor-pointer\"\n        }`}\n        onPress={handleClick}\n        isDisabled={isComingSoon}\n      >\n        <div className=\"flex absolute left-1 sm:left-3 items-center justify-start text-start gap-1 sm:gap-1.5\">\n          <IconComponent size={14} className=\"sm:w-4 sm:h-4\" />\n          <span className=\"text-xs font-body inline\">{label}</span>\n        </div>\n        {isComingSoon && (\n          <div className=\"absolute bg-white right-1 top-1/2 transform -translate-y-1/2\">\n            <Chip\n              size=\"sm\"\n              color=\"secondary\"\n              variant=\"flat\"\n              className=\"text-xs px-1 py-0 min-h-unit-5 h-5\"\n            >\n              Soon\n            </Chip>\n          </div>\n        )}\n      </Button>\n    </div>\n  );\n}\n\nexport function FieldSidebar() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const filteredItems = DRAG_ITEMS.filter((item) =>\n    item.label.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  const groupedItems = FIELD_CATEGORIES.map((category) => ({\n    ...category,\n    items: filteredItems.filter((item) => item.category === category.id),\n  })).filter((category) => category.items.length > 0);\n\n  return (\n    <div className=\"w-full bg-background border-r border-divider h-full overflow-y-auto scrollbar-hide\">\n      <div className=\"p-1 sm:p-2 border-b border-divider\">\n        <h2 className=\"text-xs sm:text-sm font-semibold mb-2 hidden sm:block\">\n          Form Elements\n        </h2>\n        <h2 className=\"text-xs font-semibold mb-2 sm:hidden\">Elements</h2>\n        <Input\n          radius=\"sm\"\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n          size=\"sm\"\n          className=\"w-full text-xs\"\n        />\n      </div>\n\n      <div className=\"p-1 sm:p-2\">\n        <Accordion\n          isCompact\n          variant=\"light\"\n          selectionMode=\"multiple\"\n          defaultExpandedKeys={[\"basic\", \"choices\"]}\n        >\n          {groupedItems.map((category) => {\n            return (\n              <AccordionItem\n                key={category.id}\n                aria-label={category.label}\n                title={\n                  <div className=\"flex items-center gap-1 sm:gap-2\">\n                    <span className=\"text-xs sm:text-sm inline\">\n                      {category.label}\n                    </span>\n                    <span className=\"text-xs sm:hidden\">\n                      {category.label.charAt(0)}\n                    </span>\n                    <span className=\"text-xs text-default-500 inline\">\n                      ({category.items.length})\n                    </span>\n                  </div>\n                }\n              >\n                <div className=\"space-y-1 sm:space-y-2 pb-2\">\n                  {category.items.map((item) => (\n                    <DraggableField\n                      key={item.id}\n                      id={item.id}\n                      type={item.type}\n                      label={item.label}\n                      icon={item.icon}\n                      category={item.category}\n                    />\n                  ))}\n                </div>\n              </AccordionItem>\n            );\n          })}\n        </Accordion>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  CardBody,\n  Input,\n  Switch,\n  Select,\n  SelectItem,\n  Button,\n  Tabs,\n  Tab,\n  Chip,\n} from \"@heroui/react\";\nimport { Plus, Trash2, Settings, Layout } from \"lucide-react\";\nimport { useFormBuilder } from \"../context/FormBuilderContext\";\nimport type { FormField, Option } from \"../types/form\";\n\nexport function PropertiesPanel() {\n  const { state } = useFormBuilder();\n  const { selectedFieldId, currentForm } = state;\n\n  const selectedField = currentForm.fields.find(\n    (field) => field.id === selectedFieldId\n  );\n\n  if (!selectedField) {\n    return (\n      <div className=\"w-full bg-background border-l border-divider h-full mt-1 sm:mt-2 p-1 sm:p-2\">\n        <Card radius=\"sm\" className=\"py-4 sm:py-10\">\n          <CardBody className=\"text-center py-2 sm:py-4\">\n            <Settings className=\"text-lg sm:text-2xl text-default-400 mx-auto mb-1 sm:mb-2\" />\n            <h3 className=\"text-xs font-semibold mb-1 hidden sm:block\">\n              No Field Selected\n            </h3>\n            <h3 className=\"text-xs font-semibold mb-1 sm:hidden\">\n              Select Field\n            </h3>\n            <p className=\"text-default-600 text-xs hidden sm:block\">\n              Select a field to edit properties\n            </p>\n          </CardBody>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full bg-background border-l border-divider h-full overflow-y-auto\">\n      <div className=\"p-2\">\n        <h2 className=\"text-sm font-semibold mb-2\">Properties</h2>\n\n        <Tabs aria-label=\"Properties\" variant=\"underlined\" size=\"sm\">\n          <Tab key=\"basic\" title=\"Basic\">\n            <MemoizedBasicProperties field={selectedField} />\n          </Tab>\n          <Tab key=\"layout\" title=\"Layout\">\n            <MemoizedLayoutProperties field={selectedField} />\n          </Tab>\n          <Tab key=\"custom\" title=\"Custom\">\n            <MemoizedCustomProperties field={selectedField} />\n          </Tab>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n\nfunction BasicProperties({ field }: { field: FormField }) {\n  const { actions } = useFormBuilder();\n\n  const updateField = (updates: Partial<FormField>) => {\n    actions.updateField(field.id, updates);\n  };\n\n  const updateProperties = (updates: any) => {\n    actions.updateFieldProperties(field.id, updates);\n  };\n\n  const updateAdvanced = (updates: Partial<FormField[\"advanced\"]>) => {\n    actions.updateFieldAdvanced(field.id, updates);\n  };\n\n  return (\n    <div className=\"space-y-2 pt-2\">\n      <Input\n        key={`label-${field.id}`}\n        label=\"Label\"\n        value={field.label}\n        onValueChange={(value) => updateField({ label: value })}\n        size=\"sm\"\n      />\n\n      <Input\n        key={`name-${field.id}`}\n        label=\"Field Name\"\n        placeholder=\"e.g., first_name, email, age\"\n        value={field.name || \"\"}\n        onValueChange={(value) => updateField({ name: value })}\n        size=\"sm\"\n        description=\"Used as the key in form submissions\"\n      />\n\n      {field.type !== \"section\" && field.type !== \"paragraph\" && (\n        <Input\n          key={`placeholder-${field.id}`}\n          label=\"Placeholder\"\n          value={field.placeholder || \"\"}\n          onValueChange={(value) => updateField({ placeholder: value })}\n          size=\"sm\"\n        />\n      )}\n\n      {/* Description field for HeroUI description prop */}\n      {field.type !== \"section\" && field.type !== \"paragraph\" && (\n        <Input\n          key={`description-${field.id}`}\n          label=\"Description\"\n          placeholder=\"e.g. We'll never share your email with anyone else.\"\n          value={field.properties?.description || \"\"}\n          onValueChange={(value) => updateProperties({ description: value })}\n          size=\"sm\"\n          description=\"Helper text shown below the input field\"\n        />\n      )}\n\n      {/* Add Read Only and Disabled for input fields */}\n      {(field.type === \"text\" ||\n        field.type === \"email\" ||\n        field.type === \"password\" ||\n        field.type === \"number\" ||\n        field.type === \"phone\" ||\n        field.type === \"url\" ||\n        field.type === \"date\" ||\n        field.type === \"time\" ||\n        field.type === \"datetime\" ||\n        field.type === \"calendar\" ||\n        field.type === \"textarea\" ||\n        field.type === \"select\" ||\n        field.type === \"multiselect\" ||\n        field.type === \"autocomplete\" ||\n        field.type === \"search\" ||\n        field.type === \"file\" ||\n        field.type === \"rating\" ||\n        field.type === \"range\" ||\n        field.type === \"rich-text\" ||\n        field.type === \"number-format\" ||\n        field.type === \"pattern-format\") && (\n        <div className=\"space-y-2 border-t border-divider pt-2\">\n          <h5 className=\"text-xs font-medium text-default-600\">Field State</h5>\n\n          <div className=\"flex flex-col gap-1\">\n            <Switch\n              key={`required-${field.id}`}\n              isSelected={field.required}\n              onValueChange={(checked) => updateField({ required: checked })}\n              size=\"sm\"\n            >\n              Required\n            </Switch>\n            <Switch\n              key={`readonly-${field.id}`}\n              isSelected={field.advanced?.readOnly || false}\n              onValueChange={(checked) => updateAdvanced({ readOnly: checked })}\n              size=\"sm\"\n            >\n              Read Only\n            </Switch>\n\n            <Switch\n              key={`disabled-${field.id}`}\n              isSelected={field.advanced?.disabled || false}\n              onValueChange={(checked) => updateAdvanced({ disabled: checked })}\n              size=\"sm\"\n            >\n              Disabled\n            </Switch>\n          </div>\n        </div>\n      )}\n\n      {/* Validation Section */}\n      {(field.type === \"text\" ||\n        field.type === \"phone\" ||\n        field.type === \"url\" ||\n        field.type === \"textarea\") && (\n        <div className=\"space-y-2 border-t border-divider pt-2\">\n          <h5 className=\"text-xs font-medium text-default-600\">Validation</h5>\n          <Input\n            label=\"Pattern (Regex)\"\n            placeholder=\"e.g. ^[A-Za-z0-9]+$\"\n            value={\n              field.validation?.find((v) => v.type === \"pattern\")?.value || \"\"\n            }\n            onValueChange={(value) => {\n              let newValidation = (field.validation || []).filter(\n                (v) => v.type !== \"pattern\"\n              );\n              if (value) {\n                const errorMessage =\n                  field.validation?.find((v) => v.type === \"pattern\")\n                    ?.message || \"\";\n                newValidation.push({\n                  type: \"pattern\",\n                  value,\n                  message: errorMessage,\n                });\n              }\n              updateField({ validation: newValidation });\n            }}\n            size=\"sm\"\n          />\n          <Input\n            label=\"Pattern Error Message\"\n            placeholder=\"e.g. Only alphanumeric characters allowed.\"\n            value={\n              field.validation?.find((v) => v.type === \"pattern\")?.message || \"\"\n            }\n            onValueChange={(value) => {\n              let newValidation = (field.validation || []).filter(\n                (v) => v.type !== \"pattern\"\n              );\n              const patternValue =\n                field.validation?.find((v) => v.type === \"pattern\")?.value ||\n                \"\";\n              if (patternValue) {\n                newValidation.push({\n                  type: \"pattern\",\n                  value: patternValue,\n                  message: value,\n                });\n              }\n              updateField({ validation: newValidation });\n            }}\n            size=\"sm\"\n          />\n        </div>\n      )}\n\n      {/* Color and Size Settings for input fields */}\n      {(field.type === \"text\" ||\n        field.type === \"email\" ||\n        field.type === \"password\" ||\n        field.type === \"number\" ||\n        field.type === \"phone\" ||\n        field.type === \"url\" ||\n        field.type === \"date\" ||\n        field.type === \"time\" ||\n        field.type === \"datetime\" ||\n        field.type === \"calendar\" ||\n        field.type === \"textarea\" ||\n        field.type === \"select\" ||\n        field.type === \"multiselect\" ||\n        field.type === \"autocomplete\" ||\n        field.type === \"search\" ||\n        field.type === \"file\" ||\n        field.type === \"range\") && (\n        <div className=\"space-y-2 border-t border-divider pt-2\">\n          <h5 className=\"text-xs font-medium text-default-600\">Appearance</h5>\n\n          <div className=\"grid grid-cols-2 gap-2\">\n            <Select\n              label=\"Color\"\n              selectedKeys={[field.properties?.colorVariant || \"default\"]}\n              onSelectionChange={(keys) => {\n                const color = Array.from(keys)[0] as string;\n                updateProperties({ colorVariant: color });\n              }}\n              size=\"sm\"\n            >\n              <SelectItem key=\"default\">Default</SelectItem>\n              <SelectItem key=\"primary\">Primary</SelectItem>\n              <SelectItem key=\"secondary\">Secondary</SelectItem>\n              <SelectItem key=\"success\">Success</SelectItem>\n              <SelectItem key=\"warning\">Warning</SelectItem>\n              <SelectItem key=\"danger\">Danger</SelectItem>\n            </Select>\n\n            <Select\n              label=\"Size\"\n              selectedKeys={[field.properties?.size || \"md\"]}\n              onSelectionChange={(keys) => {\n                const size = Array.from(keys)[0] as string;\n                updateProperties({ size: size });\n              }}\n              size=\"sm\"\n            >\n              <SelectItem key=\"sm\">Small</SelectItem>\n              <SelectItem key=\"md\">Medium</SelectItem>\n              <SelectItem key=\"lg\">Large</SelectItem>\n            </Select>\n          </div>\n\n          <Select\n            label=\"Border Radius\"\n            selectedKeys={[field.properties?.borderRadius || \"md\"]}\n            onSelectionChange={(keys) => {\n              const radius = Array.from(keys)[0] as string;\n              updateProperties({ borderRadius: radius });\n            }}\n            size=\"sm\"\n          >\n            <SelectItem key=\"none\">None</SelectItem>\n            <SelectItem key=\"sm\">Small</SelectItem>\n            <SelectItem key=\"md\">Medium</SelectItem>\n            <SelectItem key=\"lg\">Large</SelectItem>\n            <SelectItem key=\"full\">Full</SelectItem>\n          </Select>\n        </div>\n      )}\n\n      {/* Color and Appearance for buttons and interactive elements */}\n      {(field.type === \"button\" ||\n        field.type === \"switch\" ||\n        field.type === \"checkbox\" ||\n        field.type === \"radio\") && (\n        <div className=\"space-y-2 border-t border-divider pt-2\">\n          <h5 className=\"text-xs font-medium text-default-600\">Appearance</h5>\n\n          <div className=\"grid grid-cols-2 gap-2\">\n            <Select\n              label=\"Color\"\n              selectedKeys={[field.properties?.colorVariant || \"default\"]}\n              onSelectionChange={(keys) => {\n                const color = Array.from(keys)[0] as string;\n                updateProperties({ colorVariant: color });\n              }}\n              size=\"sm\"\n            >\n              <SelectItem key=\"default\">Default</SelectItem>\n              <SelectItem key=\"primary\">Primary</SelectItem>\n              <SelectItem key=\"secondary\">Secondary</SelectItem>\n              <SelectItem key=\"success\">Success</SelectItem>\n              <SelectItem key=\"warning\">Warning</SelectItem>\n              <SelectItem key=\"danger\">Danger</SelectItem>\n            </Select>\n\n            <Select\n              label=\"Size\"\n              selectedKeys={[field.properties?.size || \"md\"]}\n              onSelectionChange={(keys) => {\n                const size = Array.from(keys)[0] as string;\n                updateProperties({ size: size });\n              }}\n              size=\"sm\"\n            >\n              <SelectItem key=\"sm\">Small</SelectItem>\n              <SelectItem key=\"md\">Medium</SelectItem>\n              <SelectItem key=\"lg\">Large</SelectItem>\n            </Select>\n          </div>\n\n          {field.type === \"button\" && (\n            <Select\n              label=\"Variant\"\n              selectedKeys={[field.properties?.variant || \"solid\"]}\n              onSelectionChange={(keys) => {\n                const variant = Array.from(keys)[0] as string;\n                updateProperties({ variant: variant });\n              }}\n              size=\"sm\"\n            >\n              <SelectItem key=\"solid\">Solid</SelectItem>\n              <SelectItem key=\"bordered\">Bordered</SelectItem>\n              <SelectItem key=\"light\">Light</SelectItem>\n              <SelectItem key=\"flat\">Flat</SelectItem>\n              <SelectItem key=\"faded\">Faded</SelectItem>\n              <SelectItem key=\"shadow\">Shadow</SelectItem>\n              <SelectItem key=\"ghost\">Ghost</SelectItem>\n            </Select>\n          )}\n        </div>\n      )}\n\n      {(field.type === \"radio\" ||\n        field.type === \"checkbox\" ||\n        field.type === \"select\" ||\n        field.type === \"multiselect\" || \n        field.type === \"autocomplete\") && (\n        <MemoizedOptionsEditor field={field} />\n      )}\n\n      {field.type === \"textarea\" && (\n        <Input\n          key={`rows-${field.id}`}\n          type=\"number\"\n          label=\"Rows\"\n          value={field.properties?.rows?.toString() || \"4\"}\n          onValueChange={(value) =>\n            updateProperties({ rows: parseInt(value) || 4 })\n          }\n          size=\"sm\"\n        />\n      )}\n\n      {field.type === \"rating\" && (\n        <Input\n          key={`max-rating-${field.id}`}\n          type=\"number\"\n          label=\"Max Rating\"\n          value={field.properties?.max?.toString() || \"5\"}\n          onValueChange={(value) =>\n            updateProperties({ max: parseInt(value) || 5 })\n          }\n          size=\"sm\"\n        />\n      )}\n\n      {field.type === \"file\" && (\n        <>\n          <Input\n            key={`accept-${field.id}`}\n            label=\"File Types\"\n            placeholder=\"e.g., .jpg,.png,.pdf\"\n            value={field.properties?.accept || \"\"}\n            onValueChange={(value) => updateProperties({ accept: value })}\n            size=\"sm\"\n          />\n          <Switch\n            key={`multiple-${field.id}`}\n            isSelected={field.properties?.multiple || false}\n            onValueChange={(checked) => updateProperties({ multiple: checked })}\n            size=\"sm\"\n          >\n            Multiple Files\n          </Switch>\n        </>\n      )}\n\n      {field.type === \"number\" && (\n        <>\n          <Input\n            key={`min-${field.id}`}\n            type=\"number\"\n            label=\"Min Value\"\n            value={field.properties?.min?.toString() || \"\"}\n            onValueChange={(value) =>\n              updateProperties({ min: value ? parseFloat(value) : undefined })\n            }\n            size=\"sm\"\n          />\n          <Input\n            key={`max-${field.id}`}\n            type=\"number\"\n            label=\"Max Value\"\n            value={field.properties?.max?.toString() || \"\"}\n            onValueChange={(value) =>\n              updateProperties({ max: value ? parseFloat(value) : undefined })\n            }\n            size=\"sm\"\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction OptionsEditor({ field }: { field: FormField }) {\n  const { actions } = useFormBuilder();\n  const [newOption, setNewOption] = useState({ label: \"\", value: \"\" });\n\n  const updateOptions = (options: Option[]) => {\n    actions.updateField(field.id, { options });\n  };\n\n  const addOption = () => {\n    if (newOption.label && newOption.value) {\n      const currentOptions = field.options || [];\n      updateOptions([...currentOptions, newOption]);\n      setNewOption({ label: \"\", value: \"\" });\n    }\n  };\n\n  const removeOption = (index: number) => {\n    const currentOptions = field.options || [];\n    updateOptions(currentOptions.filter((_, i) => i !== index));\n  };\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex items-center justify-between\">\n        <h4 className=\"text-xs font-medium\">Options</h4>\n        <Chip size=\"sm\" variant=\"flat\">\n          {field.options?.length || 0}\n        </Chip>\n      </div>\n\n      {field.options?.map((option, index) => (\n        <div\n          key={`option-${index}-${field.id}`}\n          className=\"p-2 border border-default-200 rounded space-y-1\"\n        >\n          <Input\n            key={`option-label-${index}-${field.id}`}\n            size=\"sm\"\n            placeholder=\"Label\"\n            value={option.label}\n            onValueChange={(value) => {\n              const currentOptions = field.options || [];\n              const updatedOptions = currentOptions.map((opt, i) =>\n                i === index ? { ...opt, label: value } : opt\n              );\n              updateOptions(updatedOptions);\n            }}\n          />\n          <div className=\"flex gap-1\">\n            <Input\n              key={`option-value-${index}-${field.id}`}\n              size=\"sm\"\n              placeholder=\"Value\"\n              value={option.value}\n              onValueChange={(value) => {\n                const currentOptions = field.options || [];\n                const updatedOptions = currentOptions.map((opt, i) =>\n                  i === index ? { ...opt, value: value } : opt\n                );\n                updateOptions(updatedOptions);\n              }}\n              className=\"flex-1\"\n            />\n            <Button\n              size=\"sm\"\n              color=\"danger\"\n              variant=\"flat\"\n              isIconOnly\n              onPress={() => removeOption(index)}\n            >\n              <Trash2 size={12} />\n            </Button>\n          </div>\n        </div>\n      ))}\n\n      <div className=\"p-2 border border-dashed border-default-300 rounded space-y-1\">\n        <Input\n          key={`new-option-label-${field.id}`}\n          size=\"sm\"\n          placeholder=\"New option label\"\n          value={newOption.label}\n          onValueChange={(value) =>\n            setNewOption({ ...newOption, label: value })\n          }\n        />\n        <div className=\"flex gap-1\">\n          <Input\n            key={`new-option-value-${field.id}`}\n            size=\"sm\"\n            placeholder=\"Value\"\n            value={newOption.value}\n            onValueChange={(value) =>\n              setNewOption({ ...newOption, value: value })\n            }\n            className=\"flex-1\"\n          />\n          <Button\n            size=\"sm\"\n            color=\"primary\"\n            variant=\"flat\"\n            isIconOnly\n            onPress={addOption}\n            isDisabled={!newOption.label || !newOption.value}\n          >\n            <Plus size={12} />\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction LayoutProperties({ field }: { field: FormField }) {\n  const { actions } = useFormBuilder();\n\n  const updateField = (updates: Partial<FormField>) => {\n    actions.updateField(field.id, updates);\n  };\n\n  const updateProperties = (updates: any) => {\n    actions.updateFieldProperties(field.id, updates);\n  };\n\n  return (\n    <div className=\"space-y-3 pt-2\">\n      <h4 className=\"text-xs font-medium text-default-700 flex items-center gap-1\">\n        <Layout size={12} />\n        Layout & Positioning\n      </h4>\n\n      {/* Grid Layout */}\n      <div className=\"space-y-2\">\n        <Select\n          label=\"Column Span\"\n          selectedKeys={[\n            field.layout?.columnSpan?.toString() ||\n              field.columnSpan?.toString() ||\n              \"12\",\n          ]}\n          onSelectionChange={(keys) => {\n            const span = parseInt(Array.from(keys)[0] as string);\n            updateField({\n              columnSpan: span, // For backward compatibility\n              layout: {\n                ...field.layout,\n                columnSpan: span,\n                gridClass: `col-span-${span}`,\n              },\n            });\n          }}\n          size=\"sm\"\n        >\n          <SelectItem key=\"1\">1 column (8.33%)</SelectItem>\n          <SelectItem key=\"2\">2 columns (16.67%)</SelectItem>\n          <SelectItem key=\"3\">3 columns (25%)</SelectItem>\n          <SelectItem key=\"4\">4 columns (33.33%)</SelectItem>\n          <SelectItem key=\"5\">5 columns (41.67%)</SelectItem>\n          <SelectItem key=\"6\">6 columns (50%)</SelectItem>\n          <SelectItem key=\"7\">7 columns (58.33%)</SelectItem>\n          <SelectItem key=\"8\">8 columns (66.67%)</SelectItem>\n          <SelectItem key=\"9\">9 columns (75%)</SelectItem>\n          <SelectItem key=\"10\">10 columns (83.33%)</SelectItem>\n          <SelectItem key=\"11\">11 columns (91.67%)</SelectItem>\n          <SelectItem key=\"12\">12 columns (100%)</SelectItem>\n        </Select>\n\n        {/* Orientation for radio and checkbox groups */}\n        {(field.type === 'radio' || field.type === 'checkbox') && (\n          <Select\n            label=\"Options Layout\"\n            selectedKeys={[field.properties?.orientation || 'vertical']}\n            onSelectionChange={(keys) => {\n              const orientation = Array.from(keys)[0] as string;\n              updateProperties({ orientation });\n            }}\n            size=\"sm\"\n          >\n            <SelectItem key=\"vertical\">Vertical</SelectItem>\n            <SelectItem key=\"horizontal\">Horizontal</SelectItem>\n          </Select>\n        )}\n\n        {/* Component alignment for radio, checkbox, switch, and rating */}\n        {(field.type === 'radio' || field.type === 'checkbox' || field.type === 'switch' || field.type === 'rating') && (\n          <Select\n            label=\"Alignment\"\n            selectedKeys={[field.properties?.componentAlignment || 'left']}\n            onSelectionChange={(keys) => {\n              const componentAlignment = Array.from(keys)[0] as string;\n              updateProperties({ componentAlignment });\n            }}\n            size=\"sm\"\n          >\n            <SelectItem key=\"left\">Left</SelectItem>\n            <SelectItem key=\"center\">Center</SelectItem>\n            <SelectItem key=\"right\">Right</SelectItem>\n          </Select>\n        )}\n\n        <div className=\"flex justify-start\">\n          <Switch\n            isSelected={field.properties?.startNewRow || false}\n            onValueChange={(checked) =>\n              updateProperties({ startNewRow: checked })\n            }\n            size=\"sm\"\n          >\n            Start New Row\n          </Switch>\n        </div>\n      </div>\n\n      {/* Spacing */}\n      <div className=\"space-y-2 border-t border-divider pt-2\">\n        <h5 className=\"text-xs font-medium text-default-600 text-start\">Spacing</h5>\n\n        <div className=\"grid grid-cols-2 gap-2\">\n          <Select\n            label=\"Margin Top\"\n            selectedKeys={[field.properties?.marginTop || \"mt-0\"]}\n            onSelectionChange={(keys) => {\n              const margin = Array.from(keys)[0] as string;\n              updateProperties({ marginTop: margin });\n            }}\n            size=\"sm\"\n          >\n            <SelectItem key=\"mt-0\">None (mt-0)</SelectItem>\n            <SelectItem key=\"mt-1\">Small (mt-1)</SelectItem>\n            <SelectItem key=\"mt-2\">Medium (mt-2)</SelectItem>\n            <SelectItem key=\"mt-4\">Default (mt-4)</SelectItem>\n            <SelectItem key=\"mt-6\">Large (mt-6)</SelectItem>\n            <SelectItem key=\"mt-8\">Extra Large (mt-8)</SelectItem>\n          </Select>\n\n          <Select\n            label=\"Margin Bottom\"\n            selectedKeys={[field.properties?.marginBottom || \"mb-0\"]}\n            onSelectionChange={(keys) => {\n              const margin = Array.from(keys)[0] as string;\n              updateProperties({ marginBottom: margin });\n            }}\n            size=\"sm\"\n          >\n            <SelectItem key=\"mb-0\">None (mb-0)</SelectItem>\n            <SelectItem key=\"mb-1\">Small (mb-1)</SelectItem>\n            <SelectItem key=\"mb-2\">Medium (mb-2)</SelectItem>\n            <SelectItem key=\"mb-4\">Default (mb-4)</SelectItem>\n            <SelectItem key=\"mb-6\">Large (mb-6)</SelectItem>\n            <SelectItem key=\"mb-8\">Extra Large (mb-8)</SelectItem>\n          </Select>\n        </div>\n\n        <div className=\"grid grid-cols-2 gap-2\">\n          <Select\n            label=\"Outer Spacing\"\n            selectedKeys={[field.properties?.padding || \"p-0\"]}\n            onSelectionChange={(keys) => {\n              const padding = Array.from(keys)[0] as string;\n              updateProperties({ padding });\n            }}\n            size=\"sm\"\n          >\n            <SelectItem key=\"p-0\">None (p-0)</SelectItem>\n            <SelectItem key=\"p-1\">Small (p-1)</SelectItem>\n            <SelectItem key=\"p-2\">Medium (p-2)</SelectItem>\n            <SelectItem key=\"p-4\">Default (p-4)</SelectItem>\n            <SelectItem key=\"p-6\">Large (p-6)</SelectItem>\n            <SelectItem key=\"p-8\">Extra Large (p-8)</SelectItem>\n          </Select>\n\n          {/* Hide text alignment for specific field types that have their own alignment logic */}\n          {!['select', 'autocomplete', 'radio', 'checkbox', 'switch', 'date', 'time', 'file', 'rating'].includes(field.type) && (\n            <Select\n              label=\"Text Alignment\"\n              selectedKeys={[field.properties?.alignment || \"text-left\"]}\n              onSelectionChange={(keys) => {\n                const alignment = Array.from(keys)[0] as string;\n                updateProperties({ alignment });\n              }}\n              size=\"sm\"\n            >\n              <SelectItem key=\"text-left\">Left</SelectItem>\n              <SelectItem key=\"text-center\">Center</SelectItem>\n              <SelectItem key=\"text-right\">Right</SelectItem>\n            </Select>\n          )}\n        </div>\n      </div>\n\n      {/* Responsive Settings */}\n      <div className=\"space-y-2 border-t border-divider pt-2\">\n        <h5 className=\"text-xs font-medium text-default-600 text-start\">Responsive</h5>\n        <div className=\"flex flex-col gap-1\">\n          <Switch\n            isSelected={field.properties?.hideOnMobile || false}\n            onValueChange={(checked) =>\n              updateProperties({ hideOnMobile: checked })\n            }\n            size=\"sm\"\n          >\n            Hide on Mobile\n          </Switch>\n\n          <Switch\n            isSelected={field.properties?.hideOnTablet || false}\n            onValueChange={(checked) =>\n              updateProperties({ hideOnTablet: checked })\n            }\n            size=\"sm\"\n          >\n            Hide on Tablet\n          </Switch>\n\n          <Switch\n            isSelected={field.properties?.hideOnDesktop || false}\n            onValueChange={(checked) =>\n              updateProperties({ hideOnDesktop: checked })\n            }\n            size=\"sm\"\n          >\n            Hide on Desktop\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n// Custom Properties Component\nfunction CustomProperties({ field }: { field: FormField }) {\n  const { actions } = useFormBuilder();\n  const [newDataKey, setNewDataKey] = useState(\"\");\n  const [newDataValue, setNewDataValue] = useState(\"\");\n\n  const updateCustom = (updates: Partial<FormField[\"custom\"]>) => {\n    actions.updateFieldCustom(field.id, updates);\n  };\n\n  const updateProperties = (updates: any) => {\n    actions.updateFieldProperties(field.id, updates);\n  };\n\n  const addDataAttribute = () => {\n    if (newDataKey && newDataValue) {\n      const currentDataAttributes = field.custom?.dataAttributes || {};\n      updateCustom({\n        dataAttributes: {\n          ...currentDataAttributes,\n          [newDataKey]: newDataValue,\n        },\n      });\n      setNewDataKey(\"\");\n      setNewDataValue(\"\");\n    }\n  };\n\n  const removeDataAttribute = (key: string) => {\n    const currentDataAttributes = field.custom?.dataAttributes || {};\n    const newAttributes = { ...currentDataAttributes };\n    delete newAttributes[key];\n    updateCustom({ dataAttributes: newAttributes });\n  };\n\n  return (\n    <div className=\"space-y-4 py-4\">\n      <div className=\"space-y-2\">\n        <h5 className=\"text-xs font-medium text-default-600\">HeroUI ClassNames</h5>\n\n        <div className=\"space-y-2 border-t border-divider pt-2\">\n          <div className=\"text-xs text-default-500 font-medium\">Layout & Structure</div>\n\n          <Input\n            key={`classnames-base-${field.id}`}\n            label=\"Base (Outer Container)\"\n            placeholder=\"e.g. p-4 bg-gray-50 rounded-lg\"\n            value={field.properties?.classNames?.base || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  base: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Outer wrapper container\"\n          />\n\n          <Input\n            key={`classnames-mainwrapper-${field.id}`}\n            label=\"Main Wrapper\"\n            placeholder=\"e.g. flex flex-col gap-2\"\n            value={field.properties?.classNames?.mainWrapper || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  mainWrapper: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Main wrapper around input elements\"\n          />\n\n          <Input\n            key={`classnames-innerwrapper-${field.id}`}\n            label=\"Inner Wrapper\"\n            placeholder=\"e.g. relative flex items-center\"\n            value={field.properties?.classNames?.innerWrapper || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  innerWrapper: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Inner wrapper around input field\"\n          />\n        </div>\n\n        <div className=\"space-y-2 border-t border-divider pt-2\">\n          <div className=\"text-xs text-default-500 font-medium\">Input Elements</div>\n\n          <Input\n            key={`classnames-inputwrapper-${field.id}`}\n            label=\"Input Wrapper\"\n            placeholder=\"e.g. border border-red-500 shadow-lg\"\n            value={field.properties?.classNames?.inputWrapper || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  inputWrapper: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Input border, background, and styling\"\n          />\n\n          <Input\n            key={`classnames-input-${field.id}`}\n            label=\"Input Field\"\n            placeholder=\"e.g. text-lg font-bold text-blue-600\"\n            value={field.properties?.classNames?.input || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  input: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Text styling for input content\"\n          />\n\n          <Input\n            key={`classnames-clearbutton-${field.id}`}\n            label=\"Clear Button\"\n            placeholder=\"e.g. text-gray-400 hover:text-red-500\"\n            value={field.properties?.classNames?.clearButton || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  clearButton: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Clear button styling\"\n          />\n        </div>\n\n        <div className=\"space-y-2 border-t border-divider pt-2\">\n          <div className=\"text-xs text-default-500 font-medium\">Labels & Text</div>\n\n          <Input\n            key={`classnames-label-${field.id}`}\n            label=\"Label\"\n            placeholder=\"e.g. text-sm font-semibold text-purple-700\"\n            value={field.properties?.classNames?.label || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  label: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Field label styling\"\n          />\n\n          <Input\n            key={`classnames-description-${field.id}`}\n            label=\"Description/Helper\"\n            placeholder=\"e.g. text-xs text-gray-500 italic\"\n            value={field.properties?.classNames?.description || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  description: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Help text styling\"\n          />\n\n          <Input\n            key={`classnames-helperwrapper-${field.id}`}\n            label=\"Helper Wrapper\"\n            placeholder=\"e.g. mt-1 flex justify-between\"\n            value={field.properties?.classNames?.helperWrapper || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  helperWrapper: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Wrapper for helper text and validation\"\n          />\n\n          <Input\n            key={`classnames-errormessage-${field.id}`}\n            label=\"Error Message\"\n            placeholder=\"e.g. text-red-500 text-xs font-medium\"\n            value={field.properties?.classNames?.errorMessage || \"\"}\n            onValueChange={(value) => {\n              const currentClassNames = field.properties?.classNames || {};\n              updateProperties({\n                classNames: {\n                  ...currentClassNames,\n                  errorMessage: value \n                } \n              });\n            }}\n            size=\"sm\"\n            description=\"Error message styling\"\n          />\n        </div>\n\n        <div className=\"flex gap-2 pt-2 border-t border-divider\">\n          <Button\n            size=\"sm\"\n            variant=\"flat\"\n            onPress={() => {\n              updateProperties({ classNames: undefined });\n            }}\n          >\n            Clear All\n          </Button>\n\n          <Button\n            size=\"sm\"\n            variant=\"flat\"\n            color=\"primary\"\n            onPress={() => {\n              updateProperties({\n                classNames: {\n                  base: \"p-4\",\n                  inputWrapper: \"border-2 border-primary-300 hover:border-primary-500\",\n                  input: \"text-primary-700 font-medium\",\n                  label: \"text-primary-600 font-semibold\",\n                  description: \"text-primary-400\"\n                }\n              });\n            }}\n          >\n            Example Style\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"space-y-2 border-t border-divider pt-2\">\n        <div className=\"flex items-center justify-between\">\n          <h5 className=\"text-xs font-medium text-default-600\">\n            Data Attributes\n          </h5>\n          <Button\n            size=\"sm\"\n            variant=\"flat\"\n            onPress={() => {\n              updateCustom({\n                dataAttributes: {\n                  ...field.custom?.dataAttributes,\n                  'field-type': field.type,\n                  'field-name': field.name || field.label.toLowerCase().replace(/\\s+/g, '-')\n                }\n              });\n            }}\n          >\n            Add Defaults\n          </Button>\n        </div>\n\n        <div className=\"flex gap-2\">\n          <Input\n            key={`new-data-key-${field.id}`}\n            placeholder=\"e.g. analytics-event\"\n            value={newDataKey}\n            onValueChange={setNewDataKey}\n            size=\"sm\"\n            className=\"flex-1\"\n          />\n          <Input\n            key={`new-data-value-${field.id}`}\n            placeholder=\"e.g. form-submit\"\n            value={newDataValue}\n            onValueChange={setNewDataValue}\n            size=\"sm\"\n            className=\"flex-1\"\n          />\n          <Button\n            size=\"sm\"\n            variant=\"flat\"\n            onPress={addDataAttribute}\n            isIconOnly\n          >\n            <Plus className=\"w-4 h-4\" />\n          </Button>\n        </div>\n\n        <div className=\"space-y-1\">\n          {Object.entries(field.custom?.dataAttributes || {}).map(\n            ([key, value]) => (\n              <div\n                key={key}\n                className=\"flex items-center justify-between bg-default-100 p-2 rounded text-xs\"\n              >\n                <span>\n                  <strong>{key}:</strong> {value}\n                </span>\n                <Button\n                  size=\"sm\"\n                  variant=\"light\"\n                  color=\"danger\"\n                  onPress={() => removeDataAttribute(key)}\n                  isIconOnly\n                >\n                  <Trash2 className=\"w-3 h-3\" />\n                </Button>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n\n      <div className=\"space-y-2 border-t border-divider pt-2\">\n        <div className=\"flex items-center justify-between\">\n          <h5 className=\"text-xs font-medium text-default-600\">Accessibility</h5>\n          <Button\n            size=\"sm\"\n            variant=\"flat\"\n            onPress={() => {\n              updateCustom({\n                role: field.type === 'button' ? 'button' : \n                      field.type === 'select' || field.type === 'multiselect' ? 'combobox' :\n                      field.type === 'radio' ? 'radiogroup' :\n                      field.type === 'checkbox' ? 'checkbox' : 'textbox',\n                tabIndex: 0\n              });\n            }}\n          >\n            Add Defaults\n          </Button>\n        </div>\n\n        <Input\n          key={`tab-index-${field.id}`}\n          label=\"Tab Index\"\n          type=\"number\"\n          value={field.custom?.tabIndex?.toString() || \"\"}\n          onValueChange={(value) =>\n            updateCustom({ tabIndex: parseInt(value) || undefined })\n          }\n          size=\"sm\"\n          placeholder=\"0 for normal tab order, -1 to skip\"\n        />\n\n        <Input\n          key={`role-${field.id}`}\n          label=\"ARIA Role\"\n          placeholder=\"textbox, button, combobox, etc.\"\n          value={field.custom?.role || \"\"}\n          onValueChange={(value) => updateCustom({ role: value })}\n          size=\"sm\"\n          description=\"Override the default ARIA role for this element\"\n        />\n      </div>\n    </div>\n  );\n}\n\n// Schema Properties Component\n// Memoized versions to prevent unnecessary re-renders\nconst MemoizedBasicProperties = React.memo(BasicProperties);\nconst MemoizedLayoutProperties = React.memo(LayoutProperties);\nconst MemoizedCustomProperties = React.memo(CustomProperties);\nconst MemoizedOptionsEditor = React.memo(OptionsEditor);\n","import {\n  Navbar,\n  NavbarBrand,\n  NavbarContent,\n  NavbarItem,\n  Button,\n  ButtonGroup,\n  Dropdown,\n  DropdownTrigger,\n  DropdownMenu,\n  DropdownItem,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  useDisclosure,\n  Card,\n  CardBody,\n  CardHeader,\n  Tabs,\n  Tab,\n} from \"@heroui/react\";\nimport {\n  Download,\n  Upload,\n  MoreVertical,\n  FileJson,\n  Copy,\n  Check,\n  Rows4,\n  AlertCircle,\n  CheckCircle,\n} from \"lucide-react\";\nimport { useState } from \"react\";\nimport { useFormBuilder } from \"../context/FormBuilderContext\";\nimport {\n  downloadFormAsJson,\n  generateFormExportData,\n} from \"../utils/formExport\";\nimport type { FormConfig } from \"../types/form\";\n\nexport function FormBuilderToolbar() {\n  const { state, actions } = useFormBuilder();\n  const { previewMode, currentForm } = state;\n  const [importStatus, setImportStatus] = useState<{\n    type: 'success' | 'error' | null;\n    message: string;\n  }>({ type: null, message: '' });\n  \n  const {\n    isOpen: isJsonOpen,\n    onOpen: onJsonOpen,\n    onOpenChange: onJsonOpenChange,\n  } = useDisclosure();\n\n  const {\n    isOpen: isImportOpen,\n    onOpen: onImportOpen,\n    onOpenChange: onImportOpenChange,\n  } = useDisclosure();\n\n  const handlePreview = () => {\n    // Toggle preview mode\n    actions.setPreviewMode(!previewMode);\n  };\n\n  const handleExport = () => {\n    downloadFormAsJson(currentForm);\n  };\n\n  const handlePreviewJson = () => {\n    // Show JSON preview in modal UI\n    onJsonOpen();\n  };\n\n  const validateFormData = (data: any): boolean => {\n    // Basic validation for form structure\n    if (!data || typeof data !== 'object') return false;\n    \n    // Check if it's an exported form format (with metadata)\n    if (data.metadata && data.fields) {\n      // Validate exported form structure\n      if (!data.metadata.title || typeof data.metadata.title !== 'string') return false;\n      if (!Array.isArray(data.fields)) return false;\n      \n      // Validate each field has required properties\n      for (const field of data.fields) {\n        if (!field.id || !field.type || !field.label) return false;\n      }\n      return true;\n    }\n    \n    // Check if it's a simple form format (FormConfig)\n    if (data.title && data.fields) {\n      if (typeof data.title !== 'string') return false;\n      if (!Array.isArray(data.fields)) return false;\n      \n      // Validate each field has required properties\n      for (const field of data.fields) {\n        if (!field.id || !field.type || !field.label) return false;\n      }\n      return true;\n    }\n    \n    return false;\n  };\n\n  const handleImport = () => {\n    setImportStatus({ type: null, message: '' });\n    onImportOpen();\n  };\n\n  const convertToFormConfig = (data: any): FormConfig => {\n    // If it's already in FormConfig format, return as is\n    if (data.title && data.fields && !data.metadata) {\n      return data;\n    }\n    \n    // Convert from exported format to FormConfig\n    return {\n      id: data.metadata?.id || data.id,\n      title: data.metadata?.title || data.title,\n      description: data.metadata?.description || data.description || '',\n      fields: data.fields,\n      settings: data.settings || {\n        submitButtonText: 'Submit',\n        allowMultipleSubmissions: true,\n        requireAuth: false,\n        captchaEnabled: false,\n        theme: 'auto'\n      }\n    };\n  };\n\n  const handleFileImport = (file: File) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target?.result as string);\n        \n        if (!validateFormData(importedData)) {\n          setImportStatus({\n            type: 'error',\n            message: 'Invalid form structure. Please ensure the JSON file contains a valid form configuration.'\n          });\n          return;\n        }\n\n        // Convert to FormConfig format\n        const formData = convertToFormConfig(importedData);\n        \n        // Import the form\n        actions.setForm(formData);\n        setImportStatus({\n          type: 'success',\n          message: `Successfully imported \"${formData.title}\" with ${formData.fields.length} field(s).`\n        });\n        \n        // Close modal after successful import\n        setTimeout(() => {\n          onImportOpenChange();\n          setImportStatus({ type: null, message: '' });\n        }, 2000);\n        \n      } catch (error) {\n        setImportStatus({\n          type: 'error',\n          message: 'Invalid JSON file. Please check the file format and try again.'\n        });\n      }\n    };\n    reader.readAsText(file);\n  };\n\n\n  return (\n    <>\n      <Navbar className=\"border-b border-divider\" maxWidth=\"full\">\n        <NavbarBrand>\n          <h1 className=\"font-bold text-inherit text-sm sm:text-base\">\n            Form Builder\n          </h1>\n        </NavbarBrand>\n\n        <NavbarContent className=\"flex gap-2 sm:gap-4\" justify=\"center\">\n        </NavbarContent>\n\n        <NavbarContent justify=\"end\">\n          <NavbarItem>\n            <ButtonGroup radius=\"sm\" size=\"sm\">\n              <Button\n                variant=\"flat\"\n                onPress={handlePreview}\n                size=\"sm\"\n                className=\"hidden sm:flex\"\n              >\n                {previewMode ? \"Edit Form\" : \"Preview Form\"}\n              </Button>\n              <Button\n                variant=\"flat\"\n                isIconOnly\n                onPress={handlePreview}\n                size=\"sm\"\n                className=\"sm:hidden\"\n              >\n                <Rows4 size={16} />\n              </Button>\n              <Dropdown>\n                <DropdownTrigger>\n                  <Button variant=\"flat\" isIconOnly size=\"sm\">\n                    <MoreVertical />\n                  </Button>\n                </DropdownTrigger>\n                <DropdownMenu>\n                  <DropdownItem\n                    key=\"export\"\n                    startContent={<Download size={16} />}\n                    onPress={handleExport}\n                  >\n                    Export Form JSON\n                  </DropdownItem>\n                  <DropdownItem\n                    key=\"preview-json\"\n                    startContent={<FileJson size={16} />}\n                    onPress={handlePreviewJson}\n                  >\n                    Preview JSON\n                  </DropdownItem>\n                  <DropdownItem\n                    key=\"import\"\n                    startContent={<Upload size={16} />}\n                    onPress={handleImport}\n                  >\n                    Import Form\n                  </DropdownItem>\n                </DropdownMenu>\n              </Dropdown>\n            </ButtonGroup>\n          </NavbarItem>\n        </NavbarContent>\n      </Navbar>\n\n      <JsonPreviewModal\n        isOpen={isJsonOpen}\n        onOpenChange={onJsonOpenChange}\n        form={currentForm}\n      />\n\n      {/* Import Form Modal */}\n      <Modal isOpen={isImportOpen} onOpenChange={onImportOpenChange} size=\"2xl\">\n        <ModalContent>\n          {(onClose) => (\n            <>\n              <ModalHeader className=\"flex flex-col gap-1\">\n                <h3 className=\"text-lg font-semibold\">Import Form</h3>\n                <p className=\"text-sm text-default-500\">\n                  Import a form configuration from JSON file or paste JSON directly\n                </p>\n              </ModalHeader>\n              <ModalBody>\n                 <div className=\"space-y-4\">\n                      <div className=\"border-2 border-dashed border-default-300 rounded-lg p-6 text-center hover:border-default-400 transition-colors\">\n                        <Upload className=\"mx-auto text-default-400 mb-2\" size={32} />\n                        <p className=\"text-sm text-default-600 mb-2\">\n                          Click to upload or drag and drop\n                        </p>\n                        <p className=\"text-xs text-default-500\">\n                          JSON files only (.json)\n                        </p>\n                        <input\n                          type=\"file\"\n                          accept=\".json\"\n                          className=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer\"\n                          onChange={(e) => {\n                            const file = e.target.files?.[0];\n                            if (file) {\n                              handleFileImport(file);\n                            }\n                          }}\n                        />\n                      </div>\n                    </div>\n                {/* Status Messages */}\n                {importStatus.type && (\n                  <div className=\"mt-4\">\n                    <div className={`flex items-center gap-2 p-3 rounded-lg ${\n                      importStatus.type === 'success' \n                        ? 'bg-success-50 border border-success-200 text-success-700'\n                        : 'bg-danger-50 border border-danger-200 text-danger-700'\n                    }`}>\n                      {importStatus.type === 'success' ? (\n                        <CheckCircle className=\"w-4 h-4\" />\n                      ) : (\n                        <AlertCircle className=\"w-4 h-4\" />\n                      )}\n                      <span className=\"text-sm\">{importStatus.message}</span>\n                    </div>\n                  </div>\n                )}\n              </ModalBody>\n              <ModalFooter>\n                <Button variant=\"flat\" onPress={onClose}>\n                  Close\n                </Button>\n              </ModalFooter>\n            </>\n          )}\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nfunction JsonPreviewModal({\n  isOpen,\n  onOpenChange,\n  form,\n}: {\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n  form: FormConfig;\n}) {\n  const [copied, setCopied] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"formatted\");\n\n  const formExportData = generateFormExportData(form);\n  const formattedJson = JSON.stringify(formExportData, null, 2);\n  const compactJson = JSON.stringify(formExportData);\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(formattedJson);\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const handleDownload = () => {\n    const blob = new Blob([formattedJson], { type: \"application/json\" });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = `${form.title.replace(/\\s+/g, \"_\")}_form_config.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onOpenChange={onOpenChange}\n      size=\"5xl\"\n      scrollBehavior=\"inside\"\n      hideCloseButton\n    >\n      <ModalContent>\n        {(onClose) => (\n          <>\n            <ModalHeader className=\"flex flex-col gap-1\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <h3 className=\"text-lg font-semibold\">\n                    Form JSON Configuration\n                  </h3>\n                  <p className=\"text-sm text-default-500\">\n                    Use this JSON to render your form elsewhere\n                  </p>\n                </div>\n                <div className=\"flex gap-2\">\n                  <Button\n                    size=\"sm\"\n                    variant=\"flat\"\n                    startContent={\n                      copied ? (\n                        <Check className=\"w-4 h-4\" />\n                      ) : (\n                        <Copy className=\"w-4 h-4\" />\n                      )\n                    }\n                    onPress={handleCopy}\n                  >\n                    {copied ? \"Copied!\" : \"Copy\"}\n                  </Button>\n                  <Button\n                    size=\"sm\"\n                    color=\"primary\"\n                    startContent={<Download className=\"w-4 h-4\" />}\n                    onPress={handleDownload}\n                  >\n                    Download\n                  </Button>\n                </div>\n              </div>\n            </ModalHeader>\n            <ModalBody>\n              <Tabs\n                selectedKey={activeTab}\n                onSelectionChange={(key) => setActiveTab(key as string)}\n                aria-label=\"JSON Format Options\"\n              >\n                <Tab key=\"formatted\" title=\"Formatted\">\n                  <Card>\n                    <CardHeader>\n                      <div className=\"flex items-center justify-between\">\n                        <h4 className=\"text-md font-medium\">Formatted JSON</h4>\n                        <div className=\"text-sm text-default-500\">\n                          {formExportData.layout.totalFields} fields •{\" \"}\n                          {formExportData.layout.rows.length} rows\n                        </div>\n                      </div>\n                    </CardHeader>\n                    <CardBody>\n                      <pre className=\"text-xs overflow-auto bg-default-50 p-4 rounded-lg max-h-96 font-mono\">\n                        {formattedJson}\n                      </pre>\n                    </CardBody>\n                  </Card>\n                </Tab>\n                <Tab key=\"compact\" title=\"Compact\">\n                  <Card>\n                    <CardHeader>\n                      <h4 className=\"text-md font-medium\">Compact JSON</h4>\n                    </CardHeader>\n                    <CardBody>\n                      <pre className=\"text-xs overflow-auto bg-default-50 p-4 rounded-lg max-h-96 font-mono break-all\">\n                        {compactJson}\n                      </pre>\n                    </CardBody>\n                  </Card>\n                </Tab>\n                <Tab key=\"metadata\" title=\"Metadata\">\n                  <Card>\n                    <CardHeader>\n                      <h4 className=\"text-md font-medium\">Form Information</h4>\n                    </CardHeader>\n                    <CardBody>\n                      <div className=\"space-y-4\">\n                        <div className=\"grid grid-cols-2 gap-4\">\n                          <div>\n                            <label className=\"text-sm font-medium text-default-700\">\n                              Title\n                            </label>\n                            <p className=\"text-sm text-default-600\">\n                              {formExportData.metadata.title}\n                            </p>\n                          </div>\n                          <div>\n                            <label className=\"text-sm font-medium text-default-700\">\n                              Version\n                            </label>\n                            <p className=\"text-sm text-default-600\">\n                              {formExportData.metadata.version}\n                            </p>\n                          </div>\n                          <div>\n                            <label className=\"text-sm font-medium text-default-700\">\n                              Total Fields\n                            </label>\n                            <p className=\"text-sm text-default-600\">\n                              {formExportData.layout.totalFields}\n                            </p>\n                          </div>\n                          <div>\n                            <label className=\"text-sm font-medium text-default-700\">\n                              Required Fields\n                            </label>\n                            <p className=\"text-sm text-default-600\">\n                              {formExportData.validation.requiredFields.length}\n                            </p>\n                          </div>\n                        </div>\n\n                        <div>\n                          <label className=\"text-sm font-medium text-default-700\">\n                            Description\n                          </label>\n                          <p className=\"text-sm text-default-600\">\n                            {formExportData.metadata.description ||\n                              \"No description provided\"}\n                          </p>\n                        </div>\n\n                        <div>\n                          <label className=\"text-sm font-medium text-default-700\">\n                            Field Types\n                          </label>\n                          <div className=\"flex flex-wrap gap-2 mt-1\">\n                            {[\n                              ...new Set(\n                                formExportData.fields.map((f) => f.type)\n                              ),\n                            ].map((type) => (\n                              <span\n                                key={type}\n                                className=\"text-xs bg-default-100 text-default-700 px-2 py-1 rounded\"\n                              >\n                                {type}\n                              </span>\n                            ))}\n                          </div>\n                        </div>\n\n                        <div>\n                          <label className=\"text-sm font-medium text-default-700\">\n                            Settings\n                          </label>\n                          <div className=\"bg-default-50 p-3 rounded-lg mt-1\">\n                            <div className=\"grid grid-cols-2 gap-3 text-sm\">\n                              <div>\n                                <span className=\"text-default-700\">\n                                  Submit Button:\n                                </span>\n                                <span className=\"text-default-600 ml-2\">\n                                  {formExportData.settings.submitButtonText}\n                                </span>\n                              </div>\n                              <div>\n                                <span className=\"text-default-700\">Theme:</span>\n                                <span className=\"text-default-600 ml-2\">\n                                  {formExportData.settings.theme}\n                                </span>\n                              </div>\n                              <div>\n                                <span className=\"text-default-700\">\n                                  Multiple Submissions:\n                                </span>\n                                <span className=\"text-default-600 ml-2\">\n                                  {formExportData.settings\n                                    .allowMultipleSubmissions\n                                    ? \"Yes\"\n                                    : \"No\"}\n                                </span>\n                              </div>\n                              <div>\n                                <span className=\"text-default-700\">\n                                  Captcha:\n                                </span>\n                                <span className=\"text-default-600 ml-2\">\n                                  {formExportData.settings.captchaEnabled\n                                    ? \"Enabled\"\n                                    : \"Disabled\"}\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </CardBody>\n                  </Card>\n                </Tab>\n              </Tabs>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"default\" variant=\"light\" onPress={onClose}>\n                Close\n              </Button>\n            </ModalFooter>\n          </>\n        )}\n      </ModalContent>\n    </Modal>\n  );\n}\n","import { useState } from \"react\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardHeader,\n  Textarea,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  useDisclosure,\n  Divider,\n} from \"@heroui/react\";\nimport { Copy, Check, Upload, FileText, AlertCircle } from \"lucide-react\";\nimport { FormRenderer } from \"../components/FormRenderer\";\nimport type { FormExportData } from \"../utils/formExport\";\n\nexport function JsonFormRenderer() {\n  const [jsonInput, setJsonInput] = useState(\"\");\n  const [parsedForm, setParsedForm] = useState<FormExportData | null>(null);\n  const [parseError, setParseError] = useState(\"\");\n  const [submissionData, setSubmissionData] = useState<Record<\n    string,\n    any\n  > | null>(null);\n  const [copied, setCopied] = useState(false);\n  const {\n    isOpen: isSubmissionModalOpen,\n    onOpen: onSubmissionModalOpen,\n    onOpenChange: onSubmissionModalOpenChange,\n  } = useDisclosure();\n\n  // Simple sample JSON for demonstration\n  const sampleJson = {\n    metadata: {\n      id: \"sample-form-001\",\n      title: \"Contact Information Form\",\n      description: \"A simple contact form example\",\n      version: \"1.0.0\",\n      createdAt: \"2025-07-19T00:00:00.000Z\",\n      exportedAt: \"2025-07-19T00:00:00.000Z\",\n      builderVersion: \"1.0.0\",\n    },\n    settings: {\n      submitButtonText: \"Submit Form\",\n      allowMultipleSubmissions: true,\n      requireAuth: false,\n      captchaEnabled: false,\n      theme: \"auto\" as const,\n    },\n    layout: {\n      rows: [\n        {\n          id: \"row-0\",\n          fields: [\"name-field\", \"email-field\"],\n          columns: 12,\n        },\n        {\n          id: \"row-1\",\n          fields: [\"message-field\"],\n          columns: 12,\n        },\n      ],\n      totalFields: 3,\n    },\n    fields: [\n      {\n        id: \"name-field\",\n        type: \"text\",\n        label: \"Full Name\",\n        name: \"full_name\",\n        placeholder: \"Enter your full name\",\n        required: true,\n        properties: {\n          width: \"full\",\n          helpText: \"Please enter your complete name\",\n        },\n        layout: {\n          columnSpan: 6,\n          rowId: \"row-0\",\n          gridClass: \"col-span-6\",\n        },\n      },\n      {\n        id: \"email-field\",\n        type: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        placeholder: \"Enter your email\",\n        required: true,\n        properties: {\n          width: \"full\",\n          helpText: \"We'll use this to contact you\",\n        },\n        layout: {\n          columnSpan: 6,\n          rowId: \"row-0\",\n          gridClass: \"col-span-6\",\n        },\n      },\n      {\n        id: \"message-field\",\n        type: \"textarea\",\n        label: \"Message\",\n        name: \"message\",\n        placeholder: \"Enter your message here...\",\n        required: false,\n        properties: {\n          width: \"full\",\n          rows: 4,\n          helpText: \"Tell us how we can help you\",\n        },\n        layout: {\n          columnSpan: 12,\n          rowId: \"row-1\",\n          gridClass: \"col-span-12\",\n        },\n      },\n    ],\n    fieldMap: {\n      \"name-field\": {\n        id: \"name-field\",\n        type: \"text\",\n        label: \"Full Name\",\n        name: \"full_name\",\n        placeholder: \"Enter your full name\",\n        required: true,\n        properties: {\n          width: \"full\",\n          helpText: \"Please enter your complete name\",\n        },\n        layout: {\n          columnSpan: 6,\n          rowId: \"row-0\",\n          gridClass: \"col-span-6\",\n        },\n      },\n      \"email-field\": {\n        id: \"email-field\",\n        type: \"email\",\n        label: \"Email Address\",\n        name: \"email\",\n        placeholder: \"Enter your email\",\n        required: true,\n        properties: {\n          width: \"full\",\n          helpText: \"We'll use this to contact you\",\n        },\n        layout: {\n          columnSpan: 6,\n          rowId: \"row-0\",\n          gridClass: \"col-span-6\",\n        },\n      },\n      \"message-field\": {\n        id: \"message-field\",\n        type: \"textarea\",\n        label: \"Message\",\n        name: \"message\",\n        placeholder: \"Enter your message here...\",\n        required: false,\n        properties: {\n          width: \"full\",\n          rows: 4,\n          helpText: \"Tell us how we can help you\",\n        },\n        layout: {\n          columnSpan: 12,\n          rowId: \"row-1\",\n          gridClass: \"col-span-12\",\n        },\n      },\n    },\n    validation: {\n      requiredFields: [\"name-field\", \"email-field\"],\n      fieldsWithValidation: [\"email-field\"],\n    },\n  };\n\n  const handleParseJson = () => {\n    try {\n      setParseError(\"\");\n      const parsed = JSON.parse(jsonInput);\n\n      // Basic validation of JSON structure\n      if (\n        !parsed.metadata ||\n        !parsed.settings ||\n        !parsed.layout ||\n        !parsed.fields ||\n        !parsed.fieldMap\n      ) {\n        throw new Error(\n          \"Invalid form JSON structure. Missing required properties.\"\n        );\n      }\n\n      setParsedForm(parsed);\n    } catch (error) {\n      setParseError(\n        error instanceof Error\n          ? error.message\n          : \"Invalid JSON format. Please check your syntax.\"\n      );\n      setParsedForm(null);\n    }\n  };\n\n  const loadSampleJson = () => {\n    setJsonInput(JSON.stringify(sampleJson, null, 2));\n    setParsedForm(sampleJson);\n    setParseError(\"\");\n  };\n\n  const copyToClipboard = async () => {\n    await navigator.clipboard.writeText(JSON.stringify(sampleJson, null, 2));\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  const handleFormSubmit = (data: Record<string, any>) => {\n    setSubmissionData(data);\n    onSubmissionModalOpen();\n  };\n\n  const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file && file.type === \"application/json\") {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const content = e.target?.result as string;\n        setJsonInput(content);\n        try {\n          const parsed = JSON.parse(content);\n          setParsedForm(parsed);\n          setParseError(\"\");\n        } catch (error) {\n          setParseError(\"Invalid JSON file format\");\n          setParsedForm(null);\n        }\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  const clearForm = () => {\n    setJsonInput(\"\");\n    setParsedForm(null);\n    setParseError(\"\");\n    setSubmissionData(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <div className=\"mx-auto p-6\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">JSON Form Renderer</h1>\n          <p className=\"text-default-600\">\n            Paste your form JSON configuration to render and test a live form\n          </p>\n        </div>\n\n        <div className=\"flex flex-col sm:flex-row gap-6\">\n          {/* JSON Input Panel */}\n          <div className=\"basis-4/12\">\n            <Card radius=\"sm\">\n              <CardHeader>\n                <div className=\"flex items-center justify-between w-full p-1\">\n                  <div className=\"flex gap-2 flex-wrap\">\n                    <input\n                      type=\"file\"\n                      accept=\".json\"\n                      onChange={handleFileUpload}\n                      className=\"hidden\"\n                      id=\"json-file-upload\"\n                    />\n                    <Button\n                      size=\"sm\"\n                      variant=\"flat\"\n                      startContent={<Upload className=\"w-4 h-4\" />}\n                      onPress={() =>\n                        document.getElementById(\"json-file-upload\")?.click()\n                      }\n                    >\n                      Upload JSON\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"flat\"\n                      startContent={\n                        copied ? (\n                          <Check className=\"w-4 h-4\" />\n                        ) : (\n                          <Copy className=\"w-4 h-4\" />\n                        )\n                      }\n                      onPress={copyToClipboard}\n                    >\n                      {copied ? \"Copied!\" : \"Sample\"}\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      color=\"secondary\"\n                      onPress={loadSampleJson}\n                    >\n                      Load Sample\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      color=\"danger\"\n                      variant=\"flat\"\n                      onPress={clearForm}\n                    >\n                      Clear\n                    </Button>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardBody>\n                <div className=\"p-1 \">\n                  <Textarea\n                    placeholder=\"Paste your form JSON configuration here...\"\n                    value={jsonInput}\n                    onChange={(e) => setJsonInput(e.target.value)}\n                    maxRows={20}\n                    className=\"font-mono text-sm\"\n                    classNames={{\n                      description: \"h-96\",\n                      input: \"resize-none\",\n                    }}\n                  />\n\n                  {parseError && (\n                    <div className=\"flex items-start gap-2 text-danger text-sm bg-danger-50 p-3 rounded-lg\">\n                      <AlertCircle className=\"w-4 h-4 mt-0.5 flex-shrink-0\" />\n                      <div>\n                        <strong>Parse Error:</strong> {parseError}\n                      </div>\n                    </div>\n                  )}\n\n                  <div className=\"flex gap-2 mt-4\">\n                    <Button\n                      radius=\"sm\"\n                      color=\"secondary\"\n                      onPress={handleParseJson}\n                      isDisabled={!jsonInput.trim()}\n                      className=\"flex-1\"\n                    >\n                      Parse & Render Form\n                    </Button>\n                  </div>\n                </div>\n              </CardBody>\n            </Card>\n\n            {/* Form Info */}\n            {parsedForm && (\n              <Card radius=\"sm\" className=\"mt-5\">\n                <CardHeader>\n                  <h3 className=\"text-lg font-semibold\">Form Information</h3>\n                </CardHeader>\n                <CardBody>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-default-600\">Title:</span>\n                      <span className=\"font-medium\">\n                        {parsedForm.metadata.title}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-default-600\">Fields:</span>\n                      <span className=\"font-medium\">\n                        {parsedForm.fields.length}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-default-600\">Required Fields:</span>\n                      <span className=\"font-medium\">\n                        {parsedForm.validation.requiredFields.length}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-default-600\">Version:</span>\n                      <span className=\"font-medium\">\n                        {parsedForm.metadata.version}\n                      </span>\n                    </div>\n                  </div>\n                </CardBody>\n              </Card>\n            )}\n          </div>\n\n          {/* Form Preview Panel */}\n          <div className=\"basis-8/12\">\n            {parsedForm ? (\n              <div className=\"\">\n                <FormRenderer\n                  formConfig={parsedForm}\n                  onSubmit={handleFormSubmit}\n                />\n              </div>\n            ) : (\n              <div className=\"text-center py-12 text-default-500\">\n                <FileText className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\n                <p className=\"text-lg font-medium mb-2\">No Form Data</p>\n                <p>\n                  Upload a JSON file, paste JSON data, or load a sample to\n                  preview the form\n                </p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Submission Result Modal */}\n        <Modal\n          isOpen={isSubmissionModalOpen}\n          onOpenChange={onSubmissionModalOpenChange}\n          size=\"2xl\"\n        >\n          <ModalContent>\n            {(onClose) => (\n              <>\n                <ModalHeader>Form Submission Result</ModalHeader>\n                <ModalBody>\n                  <div className=\"space-y-4\">\n                    <div className=\"flex items-center gap-2 text-success\">\n                      <Check className=\"w-5 h-5\" />\n                      <span className=\"font-medium\">\n                        Form submitted successfully!\n                      </span>\n                    </div>\n                    <Divider />\n                    <div>\n                      <h4 className=\"font-semibold mb-2\">Submitted Data:</h4>\n                      <div className=\"bg-success-50 p-4 rounded-lg\">\n                        <pre className=\"text-sm overflow-auto whitespace-pre-wrap\">\n                          {JSON.stringify(submissionData, null, 2)}\n                        </pre>\n                      </div>\n                    </div>\n                    <div className=\"text-sm text-default-600\">\n                      <strong>Note:</strong> This is a demonstration. In a real\n                      application, this data would be sent to your server or API\n                      endpoint.\n                    </div>\n                  </div>\n                </ModalBody>\n                <ModalFooter>\n                  <Button\n                    color=\"default\"\n                    variant=\"flat\"\n                    onPress={async () => {\n                      if (submissionData) {\n                        await navigator.clipboard.writeText(\n                          JSON.stringify(submissionData, null, 2)\n                        );\n                      }\n                    }}\n                  >\n                    Copy Data\n                  </Button>\n                  <Button color=\"primary\" onPress={onClose}>\n                    Close\n                  </Button>\n                </ModalFooter>\n              </>\n            )}\n          </ModalContent>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n","import { \n  Card, \n  CardBody, \n  CardHeader, \n  Chip, \n  Progress,\n  Spacer\n} from '@heroui/react';\nimport { \n  Sparkles, \n  Zap, \n  Target, \n  Clock, \n  CheckCircle,\n  Gift,\n  Rocket,\n  Upload,\n} from 'lucide-react';\n\nconst AnnouncementPage = () => {\n  const newFeatures = [\n    {\n      icon: <Target className=\"w-5 h-5\" />,\n      title: \"Unified Field Alignment\",\n      description: \"Radio, checkbox, switch, and rating fields now have consistent label and component alignment controls.\",\n      status: \"released\"\n    },\n    {\n      icon: <Zap className=\"w-5 h-5\" />,\n      title: \"Auto-Generated Field Names\",\n      description: \"Fields without custom names automatically get unique identifiers (e.g., text_input, text_input2).\",\n      status: \"released\"\n    },\n    {\n      icon: <Sparkles className=\"w-5 h-5\" />,\n      title: \"Autocomplete Field Support\",\n      description: \"Full HeroUI Autocomplete field with searchable dropdown options and validation.\",\n      status: \"released\"\n    },\n    {\n      icon: <Upload className=\"w-5 h-5\" />,\n      title: \"Form Import/Export System\",\n      description: \"Complete JSON import/export functionality with validation and format conversion for seamless form portability.\",\n      status: \"released\"\n    }\n  ];\n\n  const improvements = [\n    \"Cleaner Properties Panel with context-aware controls\",\n    \"Hidden text alignment for field types that don't need it\",\n    \"Better drag-and-drop experience with disabled state handling\",\n    \"Enhanced form export with auto-naming logic\",\n    \"Form import functionality with format validation\",\n    \"Improved accessibility and user experience\"\n  ];\n\n  const upcomingFeatures = [\n    {\n      title: \"Static Content Elements\",\n      description: \"Rich text, images, dividers, and spacers\",\n      eta: \"Next Release\"\n    },\n    {\n      title: \"Advanced Layout Controls\",\n      description: \"Sections, tabs, and multi-step wizards\",\n      eta: \"Q2 2024\"\n    },\n    {\n      title: \"Conditional Logic\",\n      description: \"Show/hide fields based on other field values\",\n      eta: \"Q2 2024\"\n    },\n    {\n      title: \"Custom Validation Rules\",\n      description: \"Advanced validation with custom error messages\",\n      eta: \"Q3 2024\"\n    }\n  ];\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n      {/* Hero Section */}\n      <div className=\"text-center mb-12\">\n        <div className=\"flex justify-center mb-4\">\n          <Chip \n            color=\"primary\" \n            variant=\"flat\" \n            startContent={<Gift className=\"w-4 h-4\" />}\n            size=\"lg\"\n          >\n            Version 1.1 - New Features\n          </Chip>\n        </div>\n        \n        <h1 className=\"text-4xl md:text-6xl font-bold bg-gradient-to-r from-primary-500 to-secondary-500 bg-clip-text text-transparent mb-5\">\n          🎉 Major Updates Available!\n        </h1>\n        \n        <p className=\"text-xl text-default-600 max-w-3xl mx-auto mb-8\">\n          We've been working hard to bring you exciting new features, improvements, and a better overall experience. \n          Here's everything new in React Form Builder!\n        </p>\n        \n        <div className=\"flex flex-col sm:flex-row gap-4 justify-center items-center\">\n          <Card className=\"bg-gradient-to-r from-primary-50 to-secondary-50 border-primary-200\">\n            <CardBody className=\"text-center py-4\">\n              <div className=\"flex items-center justify-center gap-3\">\n                <Rocket className=\"w-6 h-6 text-primary-600\" />\n                <div>\n                  <p className=\"font-semibold text-primary-700\">Try Live Demo</p>\n                  <a \n                    href=\"https://react-form-builder.flowcsolutions.com/\" \n                    target=\"_blank\" \n                    rel=\"noopener noreferrer\"\n                    className=\"text-primary-600 hover:text-primary-800 underline text-sm\"\n                  >\n                    react-form-builder.flowcsolutions.com\n                  </a>\n                </div>\n              </div>\n            </CardBody>\n          </Card>\n        </div>\n\n      </div>\n\n      {/* Progress Bar */}\n      <Card className=\"mb-8\">\n        <CardBody>\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium\">Release Progress</span>\n            <span className=\"text-sm text-default-600\">4/4 Features Completed</span>\n          </div>\n          <Progress value={100} color=\"success\" className=\"mb-2\" />\n          <p className=\"text-xs text-default-600\">All planned features for v1.1 have been successfully implemented!</p>\n        </CardBody>\n      </Card>\n\n      {/* New Features Grid */}\n      <div className=\"mb-12\">\n        <h2 className=\"text-3xl font-bold text-center mb-8 flex items-center justify-center gap-2\">\n          <Rocket className=\"w-8 h-8 text-primary-500\" />\n          New Features & Enhancements\n        </h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {newFeatures.map((feature, index) => (\n            <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n              <CardHeader className=\"pb-2\">\n                <div className=\"flex items-center gap-x-3 justify-between\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"p-2 rounded-lg bg-primary-50 text-primary-500\">\n                      {feature.icon}\n                    </div>\n                    <h3 className=\"text-lg font-semibold\">{feature.title}</h3>\n                  </div>\n                  <Chip \n                    color=\"success\" \n                    variant=\"flat\" \n                    size=\"sm\"\n                    startContent={<CheckCircle className=\"w-3 h-3\" />}\n                  >\n                    Released\n                  </Chip>\n                </div>\n              </CardHeader>\n              <CardBody className=\"pt-0\">\n                <p className=\"text-default-600\">{feature.description}</p>\n              </CardBody>\n            </Card>\n          ))}\n        </div>\n      </div>\n\n      {/* Improvements Section */}\n      <Card className=\"mb-12\">\n        <CardHeader>\n          <h2 className=\"text-2xl font-bold flex items-center gap-2\">\n            <Zap className=\"w-6 h-6 text-warning-500\" />\n            Quality Improvements\n          </h2>\n        </CardHeader>\n        <CardBody>\n          <div className=\"space-y-3\">\n            {improvements.map((improvement, index) => (\n              <div key={index} className=\"flex items-start gap-3\">\n                <CheckCircle className=\"w-5 h-5 text-success-500 mt-0.5 flex-shrink-0\" />\n                <span className=\"text-default-700\">{improvement}</span>\n              </div>\n            ))}\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* Upcoming Features */}\n      <div className=\"mb-12\">\n        <h2 className=\"text-3xl font-bold text-center mb-8 flex items-center justify-center gap-2\">\n          <Clock className=\"w-8 h-8 text-secondary-500\" />\n          What's Coming Next\n        </h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {upcomingFeatures.map((feature, index) => (\n            <Card key={index} className=\"border-dashed border-2 border-default-200\">\n              <CardHeader className=\"pb-2\">\n                <div className=\"flex items-center gap-x-3 justify-between\">\n                  <h3 className=\"text-lg font-semibold\">{feature.title}</h3>\n                  <Chip color=\"secondary\" variant=\"flat\" size=\"sm\">\n                    {feature.eta}\n                  </Chip>\n                </div>\n              </CardHeader>\n              <CardBody className=\"pt-0\">\n                <p className=\"text-default-600\">{feature.description}</p>\n              </CardBody>\n            </Card>\n          ))}\n        </div>\n      </div>\n\n      {/* Changelog Section */}\n      <Card className=\"mb-12\">\n        <CardHeader>\n          <h2 className=\"text-2xl font-bold flex items-center gap-2\">\n            📋 Version 1.1 Changelog\n          </h2>\n        </CardHeader>\n        <CardBody>\n          <div className=\"space-y-4\">\n            <div>\n              <h4 className=\"font-semibold text-primary-600 mb-2\">🆕 New Features</h4>\n              <ul className=\"space-y-2 text-sm text-default-600 ml-4\">\n                <li>• Added Autocomplete field type with HeroUI integration</li>\n                <li>• Implemented auto-generated field naming system</li>\n                <li>• Added unified alignment controls for radio, checkbox, switch, and rating fields</li>\n                <li>• Built comprehensive form import/export system with validation</li>\n              </ul>\n            </div>\n            \n            <div>\n              <h4 className=\"font-semibold text-warning-600 mb-2\">🛠️ Improvements</h4>\n              <ul className=\"space-y-2 text-sm text-default-600 ml-4\">\n                <li>• Enhanced Properties Panel with context-aware controls</li>\n                <li>• Hidden text alignment for irrelevant field types</li>\n                <li>• Improved drag-and-drop experience with disabled states</li>\n                <li>• Better form export logic with intelligent naming</li>\n                <li>• Added form import functionality with validation and format conversion</li>\n                <li>• Enhanced accessibility and user experience</li>\n              </ul>\n            </div>\n\n            <div>\n              <h4 className=\"font-semibold text-success-600 mb-2\">🐛 Bug Fixes</h4>\n              <ul className=\"space-y-2 text-sm text-default-600 ml-4\">\n                <li>• Fixed alignment inconsistencies across different field types</li>\n                <li>• Resolved field naming conflicts in form exports</li>\n                <li>• Improved error handling for invalid field configurations</li>\n              </ul>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* Thank You Section */}\n      {/* <Card className=\"bg-gradient-to-r from-primary-50 to-secondary-50 border-none\">\n        <CardBody className=\"text-center py-8\">\n          <div className=\"flex justify-center mb-4\">\n            <Heart className=\"w-8 h-8 text-danger-500\" />\n          </div>\n          <h2 className=\"text-2xl font-bold mb-4\">Thank You!</h2>\n          <p className=\"text-default-600 max-w-2xl mx-auto mb-6\">\n            Your feedback and support drive our development. We're committed to making React Form Builder \n            the best form building solution for React developers.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Button \n              color=\"primary\" \n              variant=\"flat\"\n              endContent={<ExternalLink className=\"w-4 h-4\" />}\n              onPress={() => window.open('https://github.com/flowcsolutions/react-form-builder/issues/new', '_blank')}\n            >\n              Share Feedback\n            </Button>\n            <Button \n              variant=\"light\"\n              endContent={<ExternalLink className=\"w-4 h-4\" />}\n              onPress={() => window.open('https://github.com/flowcsolutions/react-form-builder/discussions', '_blank')}\n            >\n              Join Community\n            </Button>\n          </div>\n        </CardBody>\n      </Card> */}\n\n      <Spacer y={8} />\n\n      {/* Footer */}\n      <div className=\"text-center text-sm text-default-500\">\n        <p>React Form Builder v1.1 • Built with ❤️ by FlowC Solutions</p>\n      </div>\n    </div>\n  );\n};\n\nexport default AnnouncementPage;\n","import { \n  Card, \n  CardBody, \n  CardHeader, \n  Chip, \n  Spacer,\n  Code,\n  Button,\n  Link,\n  Snippet\n} from '@heroui/react';\nimport { \n  BookOpen, \n  Github, \n  Package, \n  Zap, \n  Code as CodeIcon,\n  ExternalLink,\n  Terminal,\n  Settings,\n  Palette,\n  Shield,\n  Users,\n  Rocket,\n  Upload\n} from 'lucide-react';\n\nconst DocumentationPage = () => {\n  const features = [\n    {\n      icon: <Zap className=\"w-5 h-5\" />,\n      title: \"Drag & Drop Interface\",\n      description: \"Intuitive form building with drag-and-drop functionality\"\n    },\n    {\n      icon: <Palette className=\"w-5 h-5\" />,\n      title: \"HeroUI Components\",\n      description: \"Beautiful, accessible components with modern design\"\n    },\n    {\n      icon: <Shield className=\"w-5 h-5\" />,\n      title: \"TypeScript Support\",\n      description: \"Full type safety and excellent developer experience\"\n    },\n    {\n      icon: <Settings className=\"w-5 h-5\" />,\n      title: \"Responsive Design\",\n      description: \"Mobile-first design that works on all devices\"\n    },\n    {\n      icon: <Upload className=\"w-5 h-5\" />,\n      title: \"Advanced Import/Export\",\n      description: \"Complete JSON import/export system with validation and format conversion\"\n    },\n    {\n      icon: <CodeIcon className=\"w-5 h-5\" />,\n      title: \"Extensive Field Types\",\n      description: \"17+ field types including advanced components\"\n    }\n  ];\n\n  const fieldTypes = [\n    \"Text Input\", \"Email\", \"Password\", \"Number\", \"Date\", \"Time\", \"Textarea\",\n    \"Select\", \"Autocomplete\", \"Multi-select\", \"Radio\", \"Checkbox\", \"Switch\",\n    \"File Upload\", \"Rating\", \"Phone\"\n  ];\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 max-w-6xl\">\n      {/* Hero Section */}\n      <div className=\"text-center mb-12\">\n        <div className=\"flex justify-center mb-4\">\n          <Chip \n            color=\"primary\" \n            variant=\"flat\" \n            startContent={<BookOpen className=\"w-4 h-4\" />}\n            size=\"lg\"\n          >\n            Documentation\n          </Chip>\n        </div>\n        \n        <h1 className=\"text-4xl md:text-6xl font-bold bg-gradient-to-r from-primary-500 to-secondary-500 bg-clip-text text-transparent mb-4\">\n          📚 Complete Guide\n        </h1>\n        \n        <p className=\"text-xl text-default-600 max-w-3xl mx-auto mb-8\">\n          Everything you need to know about React Form Builder - installation, usage, customization, and more.\n        </p>\n      </div>\n\n      {/* Quick Start */}\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <h2 className=\"text-2xl font-bold flex items-center gap-2\">\n            <Rocket className=\"w-6 h-6 text-primary-500\" />\n            Quick Start\n          </h2>\n        </CardHeader>\n        <CardBody>\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Installation</h3>\n              <div className=\"space-y-4\">\n                <div>\n                  <p className=\"text-sm text-default-600 mb-2\">Install the package and required dependencies:</p>\n                  <Snippet \n                    symbol=\"\"\n                    variant=\"bordered\"\n                    color=\"default\"\n                    className=\"w-full\"\n                    classNames={{\n                      base: \"w-full\",\n                      pre: \"whitespace-pre-wrap break-all\"\n                    }}\n                  >\n                    npm install @flowcsolutions/react-form-builder react react-dom @heroui/react framer-motion lucide-react uuid\n                  </Snippet>\n                </div>\n                <div>\n                  <p className=\"text-sm text-default-600 mb-2\">Install TailwindCSS (required for styling):</p>\n                  <Snippet \n                    symbol=\"\"\n                    variant=\"bordered\"\n                    color=\"default\"\n                    className=\"w-full\"\n                    classNames={{\n                      base: \"w-full\",\n                      pre: \"whitespace-pre-wrap break-all\"\n                    }}\n                  >\n                    npm install -D tailwindcss @tailwindcss/vite\n                  </Snippet>\n                </div>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Required Dependencies</h3>\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\n                <Card className=\"bg-primary-50 border-primary-200\">\n                  <CardHeader className=\"pb-2\">\n                    <h4 className=\"font-medium text-sm text-primary-700\">Core Dependencies</h4>\n                  </CardHeader>\n                  <CardBody className=\"pt-0\">\n                    <ul className=\"text-sm text-default-600 space-y-1\">\n                      <li>• <Code size=\"sm\">react</Code> (^18.0.0 || ^19.0.0)</li>\n                      <li>• <Code size=\"sm\">react-dom</Code> (^18.0.0 || ^19.0.0)</li>\n                      <li>• <Code size=\"sm\">@heroui/react</Code> (^2.8.0)</li>\n                      <li>• <Code size=\"sm\">framer-motion</Code> (^12.0.0)</li>\n                    </ul>\n                  </CardBody>\n                </Card>\n                <Card className=\"bg-secondary-50 border-secondary-200\">\n                  <CardHeader className=\"pb-2\">\n                    <h4 className=\"font-medium text-sm text-secondary-700\">Additional Dependencies</h4>\n                  </CardHeader>\n                  <CardBody className=\"pt-0\">\n                    <ul className=\"text-sm text-default-600 space-y-1\">\n                      <li>• <Code size=\"sm\">lucide-react</Code> (^0.400.0)</li>\n                      <li>• <Code size=\"sm\">uuid</Code> (^11.0.0)</li>\n                      <li>• <Code size=\"sm\">tailwindcss</Code> (^4.0.0)</li>\n                      <li>• <Code size=\"sm\">@tailwindcss/vite</Code> (^4.0.0)</li>\n                    </ul>\n                  </CardBody>\n                </Card>\n              </div>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Basic Usage</h3>\n              <Snippet \n                symbol=\"\"\n                variant=\"bordered\"\n                color=\"default\"\n                className=\"w-full\"\n                classNames={{\n                  base: \"w-full\",\n                  pre: \"whitespace-pre-wrap\"\n                }}\n              >\n{`import { ReactFormBuilderSuite } from '@flowcsolutions/react-form-builder';\nimport '@flowcsolutions/react-form-builder/style.css';\n\nfunction App() {\n  return <ReactFormBuilderSuite />;\n}`}\n              </Snippet>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* Features Overview */}\n      <div className=\"mb-12\">\n        <h2 className=\"text-3xl font-bold text-center mb-8 flex items-center justify-center gap-2\">\n          <Zap className=\"w-8 h-8 text-primary-500\" />\n          Key Features\n        </h2>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {features.map((feature, index) => (\n            <Card key={index} className=\"hover:shadow-lg transition-shadow\">\n              <CardHeader className=\"pb-2\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 rounded-lg bg-primary-50 text-primary-500\">\n                    {feature.icon}\n                  </div>\n                  <h3 className=\"text-lg font-semibold\">{feature.title}</h3>\n                </div>\n              </CardHeader>\n              <CardBody className=\"pt-0\">\n                <p className=\"text-default-600\">{feature.description}</p>\n              </CardBody>\n            </Card>\n          ))}\n        </div>\n      </div>\n\n      {/* Field Types */}\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <h2 className=\"text-2xl font-bold flex items-center gap-2\">\n            <Settings className=\"w-6 h-6 text-secondary-500\" />\n            Supported Field Types\n          </h2>\n        </CardHeader>\n        <CardBody>\n          <div className=\"flex flex-wrap gap-2\">\n            {fieldTypes.map((type) => (\n              <Chip\n                key={type}\n                variant=\"flat\"\n                color=\"secondary\"\n                size=\"sm\"\n              >\n                {type}\n              </Chip>\n            ))}\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* Advanced Usage */}\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <h2 className=\"text-2xl font-bold flex items-center gap-2\">\n            <CodeIcon className=\"w-6 h-6 text-warning-500\" />\n            Advanced Usage\n          </h2>\n        </CardHeader>\n        <CardBody>\n          <div className=\"space-y-6\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Custom Form Renderer</h3>\n              <Snippet \n                symbol=\"\"\n                variant=\"bordered\"\n                color=\"default\"\n                className=\"w-full\"\n                classNames={{\n                  base: \"w-full\",\n                  pre: \"whitespace-pre-wrap text-xs sm:text-sm\"\n                }}\n              >\n{`import { FormRenderer } from '@flowcsolutions/react-form-builder';\n\nconst MyForm = () => {\n  const formConfig = {\n    title: \"Contact Form\",\n    fields: [\n      {\n        id: \"1\",\n        type: \"text\",\n        label: \"Name\",\n        required: true\n      }\n    ]\n  };\n\n  const handleSubmit = (data) => {\n    console.log('Form submitted:', data);\n  };\n\n  return (\n    <FormRenderer \n      form={formConfig} \n      onSubmit={handleSubmit}\n    />\n  );\n};`}\n              </Snippet>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Custom Form Builder</h3>\n              <Snippet \n                symbol=\"\"\n                variant=\"bordered\"\n                color=\"default\"\n                className=\"w-full\"\n                classNames={{\n                  base: \"w-full\",\n                  pre: \"whitespace-pre-wrap text-xs sm:text-sm\"\n                }}\n              >\n{`import { \n  FormBuilderProvider, \n  FormBuilder \n} from '@flowcsolutions/react-form-builder';\n\nconst MyFormBuilder = () => {\n  return (\n    <FormBuilderProvider>\n      <FormBuilder \n        onFormChange={(form) => {\n          console.log('Form updated:', form);\n        }}\n      />\n    </FormBuilderProvider>\n  );\n};`}\n              </Snippet>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* Configuration */}\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <h2 className=\"text-2xl font-bold flex items-center gap-2\">\n            <Settings className=\"w-6 h-6 text-success-500\" />\n            Configuration\n          </h2>\n        </CardHeader>\n        <CardBody>\n          <div className=\"space-y-4\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Form Settings</h3>\n              <Snippet \n                symbol=\"\"\n                variant=\"flat\"\n                color=\"default\"\n                className=\"w-full\"\n                classNames={{\n                  base: \"w-full\",\n                  pre: \"whitespace-pre-wrap text-xs sm:text-sm\"\n                }}\n              >\n{`{\n  \"submitButtonText\": \"Submit Form\",\n  \"allowMultipleSubmissions\": true,\n  \"requireAuth\": false,\n  \"captchaEnabled\": false,\n  \"theme\": \"auto\"\n}`}\n              </Snippet>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Field Properties</h3>\n              <Snippet \n                symbol=\"\"\n                variant=\"flat\"\n                color=\"default\"\n                className=\"w-full\"\n                classNames={{\n                  base: \"w-full\",\n                  pre: \"whitespace-pre-wrap text-xs sm:text-sm\"\n                }}\n              >\n{`{\n  \"label\": \"Field Label\",\n  \"placeholder\": \"Enter value...\",\n  \"required\": true,\n  \"properties\": {\n    \"size\": \"md\",\n    \"colorVariant\": \"primary\",\n    \"borderRadius\": \"md\",\n    \"width\": \"full\"\n  }\n}`}\n              </Snippet>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* API Reference */}\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <h2 className=\"text-2xl font-bold flex items-center gap-2\">\n            <Terminal className=\"w-6 h-6 text-danger-500\" />\n            API Reference\n          </h2>\n        </CardHeader>\n        <CardBody>\n          <div className=\"space-y-4\">\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Available Components</h3>\n              <ul className=\"list-disc list-inside space-y-1 text-default-600\">\n                <li><Code>ReactFormBuilderSuite</Code> - Complete form builder with preview</li>\n                <li><Code>FormBuilder</Code> - Form builder interface only</li>\n                <li><Code>FormRenderer</Code> - Render forms from JSON configuration</li>\n                <li><Code>FormBuilderProvider</Code> - Context provider for state management</li>\n                <li><Code>FieldSidebar</Code> - Draggable field components panel</li>\n                <li><Code>PropertiesPanel</Code> - Field properties editor</li>\n              </ul>\n            </div>\n\n            <div>\n              <h3 className=\"text-lg font-semibold mb-2\">Props</h3>\n              <div className=\"overflow-x-auto\">\n                <table className=\"w-full text-sm\">\n                  <thead>\n                    <tr className=\"border-b border-default-200\">\n                      <th className=\"text-left p-2\">Component</th>\n                      <th className=\"text-left p-2\">Prop</th>\n                      <th className=\"text-left p-2\">Type</th>\n                      <th className=\"text-left p-2\">Description</th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"text-default-600\">\n                    <tr className=\"border-b border-default-100\">\n                      <td className=\"p-2\"><Code>FormRenderer</Code></td>\n                      <td className=\"p-2\">form</td>\n                      <td className=\"p-2\">FormConfig</td>\n                      <td className=\"p-2\">Form configuration object</td>\n                    </tr>\n                    <tr className=\"border-b border-default-100\">\n                      <td className=\"p-2\"><Code>FormRenderer</Code></td>\n                      <td className=\"p-2\">onSubmit</td>\n                      <td className=\"p-2\">Function</td>\n                      <td className=\"p-2\">Form submission handler</td>\n                    </tr>\n                    <tr className=\"border-b border-default-100\">\n                      <td className=\"p-2\"><Code>FormBuilder</Code></td>\n                      <td className=\"p-2\">onFormChange</td>\n                      <td className=\"p-2\">Function</td>\n                      <td className=\"p-2\">Form change handler</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* Contributing */}\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <h2 className=\"text-2xl font-bold flex items-center gap-2\">\n            <Users className=\"w-6 h-6 text-primary-500\" />\n            Contributing\n          </h2>\n        </CardHeader>\n        <CardBody>\n          <div className=\"space-y-4\">\n            <p className=\"text-default-600\">\n              We welcome contributions! Please feel free to submit a Pull Request.\n            </p>\n            \n            <div className=\"flex flex-wrap gap-4\">\n              <Button\n                color=\"primary\"\n                variant=\"flat\"\n                startContent={<Github className=\"w-4 h-4\" />}\n                as={Link}\n                href=\"https://github.com/zenpou21/react-form-builder\"\n                isExternal\n              >\n                View on GitHub\n                <ExternalLink className=\"w-3 h-3 ml-1\" />\n              </Button>\n              \n              <Button\n                color=\"secondary\"\n                variant=\"flat\"\n                startContent={<Package className=\"w-4 h-4\" />}\n                as={Link}\n                href=\"https://www.npmjs.com/package/@flowcsolutions/react-form-builder\"\n                isExternal\n              >\n                View on NPM\n                <ExternalLink className=\"w-3 h-3 ml-1\" />\n              </Button>\n            </div>\n          </div>\n        </CardBody>\n      </Card>\n\n      {/* License */}\n      <Card className=\"mb-8\">\n        <CardHeader>\n          <h2 className=\"text-2xl font-bold flex items-center gap-2\">\n            <Shield className=\"w-6 h-6 text-success-500\" />\n            License\n          </h2>\n        </CardHeader>\n        <CardBody>\n          <p className=\"text-default-600\">\n            This project is licensed under the MIT License - see the LICENSE file for details.\n          </p>\n        </CardBody>\n      </Card>\n\n      <Spacer y={8} />\n\n      {/* Footer */}\n      <div className=\"text-center text-sm text-default-500\">\n        <p>React Form Builder v1.1.4 • Built with ❤️ by FlowC Solutions</p>\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentationPage;\n","import { Tabs, Tab } from \"@heroui/react\";\nimport { Rocket, BookOpen } from \"lucide-react\";\nimport AnnouncementPage from \"./AnnouncementPage\";\nimport DocumentationPage from \"./DocumentationPage\";\n\nconst WhatsNewPage = () => {\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Tabs\n        color=\"secondary\"\n        defaultSelectedKey=\"announcements\"\n        className=\"w-full text-white\"\n        classNames={{\n          base: \"w-full\",\n          tabList:\n            \"gap-6 w-full relative rounded-none p-0 border-b border-divider bg-background\",\n          cursor: \"w-full !text-white\",\n          tab: \"max-w-fit px-6 h-12 text-medium text-white\",\n        }}\n      >\n        <Tab\n          key=\"announcements\"\n          title={\n            <div className=\"flex items-center gap-2\">\n              <Rocket className=\"w-4 h-4\" />\n              <span>What's New</span>\n            </div>\n          }\n        >\n          <AnnouncementPage />\n        </Tab>\n        <Tab\n          key=\"documentation\"\n          title={\n            <div className=\"flex items-center gap-2\">\n              <BookOpen className=\"w-4 h-4\" />\n              <span>Documentation</span>\n            </div>\n          }\n        >\n          <DocumentationPage />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default WhatsNewPage;\n","import { useState } from \"react\";\nimport {\n  HeroUIProvider,\n  Button,\n  ButtonGroup,\n  Modal,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  useDisclosure,\n  Chip,\n} from \"@heroui/react\";\nimport { DndContext } from \"@dnd-kit/core\";\nimport type { DragEndEvent, DragOverEvent } from \"@dnd-kit/core\";\nimport {\n  FormBuilderProvider,\n  useFormBuilder,\n} from \"./context/FormBuilderContext\";\nimport { FormBuilderToolbar } from \"./components/FormBuilderToolbar\";\nimport { FieldSidebar } from \"./components/FieldSidebar\";\nimport { FormCanvas } from \"./components/FormCanvas\";\nimport { PropertiesPanel } from \"./components/PropertiesPanel\";\nimport { JsonFormRenderer } from \"./examples/JsonFormRenderer\";\nimport WhatsNewPage from \"./pages/WhatsNewPage\";\nimport { createFormField } from \"./data/formFields\";\nimport type { FormFieldType } from \"./types/form\";\nimport { Package, Settings, Sparkles } from \"lucide-react\";\nimport \"./App.css\";\nimport \"./styles.css\";\n\ntype AppMode = \"builder\" | \"renderer\" | \"announcement\";\n\nfunction AppModeSelector({\n  mode,\n  setMode,\n}: {\n  mode: AppMode;\n  setMode: (mode: AppMode) => void;\n}) {\n  return (\n    <div className=\"p-4 border-b border-divider bg-background\">\n      <div className=\"max-w-7xl mx-auto\">\n        <h1 className=\"text-xl sm:text-2xl font-bold mb-2\">\n          Form Builder Suite\n        </h1>\n\n        {/* Desktop Navigation */}\n        <div className=\"hidden sm:block\">\n          <ButtonGroup className=\"\" radius=\"sm\">\n            <Button\n              variant={mode === \"builder\" ? \"solid\" : \"flat\"}\n              color={mode === \"builder\" ? \"secondary\" : \"default\"}\n              onPress={() => setMode(\"builder\")}\n            >\n              Form Builder\n            </Button>\n            <Button\n              variant={mode === \"renderer\" ? \"solid\" : \"flat\"}\n              color={mode === \"renderer\" ? \"secondary\" : \"default\"}\n              onPress={() => setMode(\"renderer\")}\n            >\n              JSON Renderer\n            </Button>\n            <Button\n              variant={mode === \"announcement\" ? \"solid\" : \"flat\"}\n              color={mode === \"announcement\" ? \"secondary\" : \"default\"}\n              onPress={() => setMode(\"announcement\")}\n              startContent={\n                <Sparkles className=\"w-4 h-4 sparkle-animation text-warning-500\" />\n              }\n            >\n              What's New{\" \"}\n              <Chip\n                size=\"sm\"\n                color=\"success\"\n                variant=\"solid\"\n                className=\"ml-2 text-white\"\n              >\n                v1.1\n              </Chip>\n            </Button>\n          </ButtonGroup>\n        </div>\n\n        {/* Mobile Navigation */}\n        <div className=\"block sm:hidden\">\n          <div className=\"flex flex-col gap-2\">\n            {/* Row 1: Form Builder and JSON Renderer */}\n            <div className=\"flex gap-2\">\n              <Button\n                variant={mode === \"builder\" ? \"solid\" : \"flat\"}\n                color={mode === \"builder\" ? \"secondary\" : \"default\"}\n                onPress={() => setMode(\"builder\")}\n                className=\"flex-1\"\n                size=\"sm\"\n              >\n                Builder\n              </Button>\n              <Button\n                variant={mode === \"renderer\" ? \"solid\" : \"flat\"}\n                color={mode === \"renderer\" ? \"secondary\" : \"default\"}\n                onPress={() => setMode(\"renderer\")}\n                className=\"flex-1\"\n                size=\"sm\"\n              >\n                Renderer\n              </Button>\n            </div>\n\n            {/* Row 2: What's New button (full width) */}\n            <Button\n              variant={mode === \"announcement\" ? \"solid\" : \"flat\"}\n              color={mode === \"announcement\" ? \"secondary\" : \"default\"}\n              onPress={() => setMode(\"announcement\")}\n              startContent={\n                <Sparkles className=\"w-3 h-3 sparkle-animation text-warning-500\" />\n              }\n              className=\"w-full\"\n              size=\"sm\"\n            >\n              What's New{\" \"}\n              <Chip\n                size=\"sm\"\n                color=\"success\"\n                variant=\"solid\"\n                className=\"ml-1 text-white text-xs\"\n              >\n                v1.1\n              </Chip>\n            </Button>\n          </div>\n        </div>\n\n        {/* Mode descriptions */}\n        <div className=\"mt-3 text-sm text-default-500\">\n          {mode === \"builder\" &&\n            \"Create and design forms with drag-and-drop interface\"}\n          {mode === \"renderer\" &&\n            \"Import JSON configurations and render live forms\"}\n          {mode === \"announcement\" &&\n            \"Discover new features and improvements in the latest version\"}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction FormBuilderContent() {\n  const { state, actions } = useFormBuilder();\n  const { currentForm, previewMode } = state;\n\n  // Modal controls for mobile panels\n  const {\n    isOpen: isElementsOpen,\n    onOpen: onElementsOpen,\n    onOpenChange: onElementsOpenChange,\n  } = useDisclosure();\n\n  const {\n    isOpen: isPropertiesOpen,\n    onOpen: onPropertiesOpen,\n    onOpenChange: onPropertiesOpenChange,\n  } = useDisclosure();\n\n  const handleDragEnd = (event: DragEndEvent) => {\n    const { active, over } = event;\n\n    if (!over) return;\n\n    // Handle dropping from sidebar to canvas\n    if (\n      over.id === \"form-canvas\" &&\n      typeof active.id === \"string\" &&\n      !active.id.includes(\"-\")\n    ) {\n      const fieldType = active.id as FormFieldType;\n      const newField = createFormField(fieldType);\n      actions.addField(newField);\n      return;\n    }\n\n    // Handle reordering within canvas\n    if (active.id !== over.id) {\n      const oldIndex = currentForm.fields.findIndex(\n        (field) => field.id === active.id\n      );\n      const newIndex = currentForm.fields.findIndex(\n        (field) => field.id === over.id\n      );\n\n      if (oldIndex !== -1 && newIndex !== -1) {\n        actions.reorderFields(oldIndex, newIndex);\n      }\n    }\n  };\n\n  const handleDragOver = (_event: DragOverEvent) => {\n    // Handle drag over logic if needed\n  };\n\n  return (\n    <>\n      <div className=\"h-[calc(100vh-120px)] font-sans flex flex-col bg-background\">\n        <FormBuilderToolbar />\n        <div className=\"flex flex-1 overflow-hidden\">\n          <DndContext onDragEnd={handleDragEnd} onDragOver={handleDragOver}>\n            {/* Desktop Sidebar - Hidden on mobile */}\n            {!previewMode && (\n              <div className=\"hidden md:block md:w-1/4\">\n                <FieldSidebar />\n              </div>\n            )}\n\n            {/* Main Canvas - Full width on mobile, responsive on desktop */}\n            <div\n              className={`\n              flex-1 overflow-auto scrollbar-hide\n              ${previewMode ? \"w-full\" : \"w-full md:w-2/4\"}\n            `}\n            >\n              <FormCanvas />\n            </div>\n\n            {/* Desktop Properties Panel - Hidden on mobile */}\n            {!previewMode && (\n              <div className=\"hidden md:block md:w-1/4\">\n                <PropertiesPanel />\n              </div>\n            )}\n          </DndContext>\n        </div>\n\n        {/* Mobile Bottom Navigation */}\n        {!previewMode && (\n          <div className=\"md:hidden border-t border-divider bg-background p-2\">\n            <div className=\"flex gap-2\">\n              <Button\n                size=\"sm\"\n                variant=\"flat\"\n                className=\"flex-1\"\n                startContent={<Package size={16} />}\n                onPress={onElementsOpen}\n              >\n                Elements\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"flat\"\n                className=\"flex-1\"\n                startContent={<Settings size={16} />}\n                onPress={onPropertiesOpen}\n              >\n                Properties\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Elements Modal for Mobile */}\n      <Modal\n        isOpen={isElementsOpen}\n        onOpenChange={onElementsOpenChange}\n        size=\"full\"\n        placement=\"bottom\"\n        classNames={{\n          base: \"md:hidden\",\n          backdrop: \"md:hidden\",\n        }}\n      >\n        <ModalContent>\n          {() => (\n            <>\n              <ModalHeader className=\"flex flex-col gap-1\">\n                <h3 className=\"text-lg font-semibold\">Form Elements</h3>\n                <p className=\"text-sm text-default-500\">\n                  Drag or tap to add elements to your form\n                </p>\n              </ModalHeader>\n              <ModalBody>\n                <FieldSidebar />\n              </ModalBody>\n            </>\n          )}\n        </ModalContent>\n      </Modal>\n\n      {/* Properties Modal for Mobile */}\n      <Modal\n        isOpen={isPropertiesOpen}\n        onOpenChange={onPropertiesOpenChange}\n        size=\"full\"\n        placement=\"bottom\"\n        classNames={{\n          base: \"md:hidden\",\n          backdrop: \"md:hidden\",\n        }}\n      >\n        <ModalContent>\n          {() => (\n            <>\n              <ModalHeader className=\"flex flex-col gap-1\">\n                <h3 className=\"text-lg font-semibold\">Field Properties</h3>\n                <p className=\"text-sm text-default-500\">\n                  {state.selectedFieldId\n                    ? `Editing: ${\n                        currentForm.fields.find(\n                          (f) => f.id === state.selectedFieldId\n                        )?.label || \"Untitled Field\"\n                      }`\n                    : \"Select a field to edit properties\"}\n                </p>\n              </ModalHeader>\n              <ModalBody>\n                <PropertiesPanel />\n              </ModalBody>\n            </>\n          )}\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n\nfunction App() {\n  const [mode, setMode] = useState<AppMode>(\"builder\");\n\n  return (\n    <HeroUIProvider>\n      <div className=\"min-h-screen bg-background\">\n        <AppModeSelector mode={mode} setMode={setMode} />\n\n        {mode === \"builder\" && (\n          <FormBuilderProvider>\n            <FormBuilderContent />\n          </FormBuilderProvider>\n        )}\n        {mode === \"renderer\" && <JsonFormRenderer />}\n        {mode === \"announcement\" && <WhatsNewPage />}\n      </div>\n    </HeroUIProvider>\n  );\n}\n\nexport default App;\n","import App from '../App';\n\n// Export the App component as FormBuilderSuite for the library\nexport const FormBuilderSuite = App;\n\nexport default FormBuilderSuite;\n"],"names":["generateUniqueFieldName","field","existingFields","baseName","existingNames","f","counter","uniqueName","initialState","uuidv4","formBuilderReducer","state","action","fieldWithUniqueName","fields","removed","FormBuilderContext","createContext","FormBuilderProvider","children","dispatch","useReducer","actions","form","id","updates","properties","advanced","custom","events","schema","layout","oldIndex","newIndex","enabled","view","settings","meta","jsx","useFormBuilder","context","useContext","createFormField","type","baseField","getDefaultLabel","getCategoryForType","getIconForType","FIELD_TEMPLATES","DRAG_ITEMS","FIELD_CATEGORIES","buildHeroUIClasses","isEditor","borderRadius","getBorderRadiusClass","spacing","getSpacingClasses","responsive","getResponsiveClasses","legacyClasses","newClasses","allCustomClasses","customClasses","parseCustomClasses","userClassNames","ensureTailwindPrecedence","userClass","classes","result","className","marginTop","marginBottom","padding","buildFieldClasses","buildFieldWrapperClasses","SignaturePad","value","onChange","width","height","disabled","canvasRef","useRef","isDrawing","setIsDrawing","useState","isEmpty","setIsEmpty","lastPos","setLastPos","useEffect","canvas","ctx","img","getEventPos","event","rect","scaleX","scaleY","touch","startDrawing","pos","draw","currentPos","stopDrawing","saveSignature","dataURL","clearSignature","jsxs","Button","RotateCcw","Check","FormFieldRenderer","handleChange","newValue","heroUIClasses","wrapperClasses","responsiveIndicators","indicators","FieldWithIndicators","indicator","Smartphone","Tablet","Monitor","wrapWithIndicators","component","commonProps","htmlAttributes","attrs","dataAttributes","key","characterCount","currentLength","maxLength","Input","val","numVal","DateInput","date","TimeInput","time","Fragment","Textarea","Select","keys","selectedValue","option","SelectItem","Autocomplete","AutocompleteItem","radioOrientation","radioComponentAlignment","radioAlignmentClass","radioLabelAlignmentClass","radioWrapperAlignmentClass","RadioGroup","Radio","orientation","componentAlignment","containerClass","alignmentClass","labelAlignmentClass","wrapperAlignmentClass","Checkbox","checked","currentValues","v","checkboxComponentAlignment","checkboxAlignmentClass","checkboxLabelAlignmentClass","switchComponentAlignment","switchAlignmentClass","Switch","Upload","e","files","maxRating","ratingComponentAlignment","ratingAlignmentClass","_","i","rating","Star","Card","CardBody","Divider","React","SortableFormField","isPreview","selectedFieldId","attributes","listeners","setNodeRef","transform","transition","isDragging","useSortable","style","CSS","isSelected","handleSelect","handleDuplicate","duplicatedField","handleDelete","handleEdit","GripVertical","ButtonGroup","Edit","Copy","Trash2","groupFieldsIntoRows","rows","currentRow","currentRowSpan","index","fieldSpan","getFieldSpan","columnSpan","getGridClassName","span","FormRowRenderer","row","gridClass","combinedClasses","FormRenderer","formConfig","onSubmit","formData","setFormData","errors","setErrors","handleFieldChange","useCallback","fieldId","prev","newErrors","validateForm","rule","handleSubmit","fieldNames","usedNames","fieldName","submissionData","renderField","error","hasError","fieldAttributes","attr","selectedValues","Slider","file","Chip","signature","CardHeader","responsiveClasses","generateFormExportData","now","fieldsWithNames","exportRows","total","exportFields","rowId","fieldMap","requiredFields","fieldsWithValidation","downloadFormAsJson","filename","exportData","jsonString","blob","url","link","FormCanvas","currentForm","previewMode","setSubmissionData","isSubmissionModalOpen","onSubmissionModalOpen","onSubmissionModalOpenChange","useDisclosure","isOver","useDroppable","handleAddField","newField","handlePreviewSubmit","data","Plus","SortableContext","verticalListSortingStrategy","Modal","ModalContent","onClose","ModalHeader","ModalBody","ModalFooter","DraggableField","label","icon","category","addField","isComingSoon","useDraggable","IconComponent","LucideIcons","handleClick","FieldSidebar","searchTerm","setSearchTerm","filteredItems","item","groupedItems","Accordion","AccordionItem","PropertiesPanel","selectedField","Tabs","Tab","MemoizedBasicProperties","MemoizedLayoutProperties","MemoizedCustomProperties","Settings","BasicProperties","updateField","updateProperties","updateAdvanced","newValidation","errorMessage","patternValue","color","size","radius","variant","MemoizedOptionsEditor","OptionsEditor","newOption","setNewOption","updateOptions","options","addOption","currentOptions","removeOption","updatedOptions","opt","LayoutProperties","Layout","margin","alignment","CustomProperties","newDataKey","setNewDataKey","newDataValue","setNewDataValue","updateCustom","addDataAttribute","currentDataAttributes","removeDataAttribute","newAttributes","currentClassNames","FormBuilderToolbar","importStatus","setImportStatus","isJsonOpen","onJsonOpen","onJsonOpenChange","isImportOpen","onImportOpen","onImportOpenChange","handlePreview","handleExport","handlePreviewJson","validateFormData","handleImport","convertToFormConfig","handleFileImport","reader","importedData","Navbar","NavbarBrand","NavbarContent","NavbarItem","Rows4","Dropdown","DropdownTrigger","MoreVertical","DropdownMenu","DropdownItem","Download","FileJson","JsonPreviewModal","CheckCircle","AlertCircle","isOpen","onOpenChange","copied","setCopied","activeTab","setActiveTab","formExportData","formattedJson","compactJson","handleCopy","handleDownload","a","JsonFormRenderer","jsonInput","setJsonInput","parsedForm","setParsedForm","parseError","setParseError","sampleJson","handleParseJson","parsed","loadSampleJson","copyToClipboard","handleFormSubmit","handleFileUpload","content","clearForm","FileText","AnnouncementPage","newFeatures","Target","Zap","Sparkles","improvements","upcomingFeatures","Gift","Rocket","Progress","feature","improvement","Clock","Spacer","DocumentationPage","features","Palette","Shield","CodeIcon","fieldTypes","BookOpen","Snippet","Code","Terminal","Users","Github","Link","ExternalLink","Package","WhatsNewPage","AppModeSelector","mode","setMode","FormBuilderContent","isElementsOpen","onElementsOpen","onElementsOpenChange","isPropertiesOpen","onPropertiesOpen","onPropertiesOpenChange","handleDragEnd","active","over","fieldType","handleDragOver","_event","DndContext","App","HeroUIProvider","FormBuilderSuite"],"mappings":"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"}